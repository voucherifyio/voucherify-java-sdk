/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Object representing loyalty card parameters. Child attributes are present only if &#x60;type&#x60; is &#x60;LOYALTY_CARD&#x60;. Defaults to &#x60;null&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RedeemableVoucherLoyaltyCard {
  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Integer points;
    private boolean pointsIsSet = false;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private Integer balance;
    private boolean balanceIsSet = false;

  public static final String SERIALIZED_NAME_NEXT_EXPIRATION_DATE = "next_expiration_date";
  @SerializedName(SERIALIZED_NAME_NEXT_EXPIRATION_DATE)
  private LocalDate nextExpirationDate;
    private boolean nextExpirationDateIsSet = false;

  public static final String SERIALIZED_NAME_NEXT_EXPIRATION_POINTS = "next_expiration_points";
  @SerializedName(SERIALIZED_NAME_NEXT_EXPIRATION_POINTS)
  private Integer nextExpirationPoints;
    private boolean nextExpirationPointsIsSet = false;

  public static final String SERIALIZED_NAME_PENDING_POINTS = "pending_points";
  @SerializedName(SERIALIZED_NAME_PENDING_POINTS)
  private Integer pendingPoints;
    private boolean pendingPointsIsSet = false;

  public static final String SERIALIZED_NAME_EXPIRED_POINTS = "expired_points";
  @SerializedName(SERIALIZED_NAME_EXPIRED_POINTS)
  private Integer expiredPoints;
    private boolean expiredPointsIsSet = false;

  public static final String SERIALIZED_NAME_SUBTRACTED_POINTS = "subtracted_points";
  @SerializedName(SERIALIZED_NAME_SUBTRACTED_POINTS)
  private Integer subtractedPoints;
    private boolean subtractedPointsIsSet = false;

  public RedeemableVoucherLoyaltyCard() {
  }

  public RedeemableVoucherLoyaltyCard points(Integer points) {
    
    this.points = points;
    return this;
  }

   /**
   * Total number of points added to the loyalty card over its lifespan.
   * @return points
  **/
  @javax.annotation.Nullable
  public Integer getPoints() {
    return points;
  }


  public void setPoints(Integer points) {
    this.points = points;
    this.pointsIsSet = true;
  }
  public boolean isPointsSet() {
    return pointsIsSet;
  }


  public RedeemableVoucherLoyaltyCard balance(Integer balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Points available for reward redemption. This is calculated as follows: &#x60;balance&#x60; &#x3D; &#x60;points&#x60; - &#x60;expired_points&#x60; - &#x60;subtracted_points&#x60; - &#x60;redemption.redeemed_points&#x60;.
   * @return balance
  **/
  @javax.annotation.Nullable
  public Integer getBalance() {
    return balance;
  }


  public void setBalance(Integer balance) {
    this.balance = balance;
    this.balanceIsSet = true;
  }
  public boolean isBalanceSet() {
    return balanceIsSet;
  }


  public RedeemableVoucherLoyaltyCard nextExpirationDate(LocalDate nextExpirationDate) {
    
    this.nextExpirationDate = nextExpirationDate;
    return this;
  }

   /**
   * The next closest date when the next set of points are due to expire.
   * @return nextExpirationDate
  **/
  @javax.annotation.Nullable
  public LocalDate getNextExpirationDate() {
    return nextExpirationDate;
  }


  public void setNextExpirationDate(LocalDate nextExpirationDate) {
    this.nextExpirationDate = nextExpirationDate;
    this.nextExpirationDateIsSet = true;
  }
  public boolean isNextExpirationDateSet() {
    return nextExpirationDateIsSet;
  }


  public RedeemableVoucherLoyaltyCard nextExpirationPoints(Integer nextExpirationPoints) {
    
    this.nextExpirationPoints = nextExpirationPoints;
    return this;
  }

   /**
   * The amount of points that are set to expire next.
   * @return nextExpirationPoints
  **/
  @javax.annotation.Nullable
  public Integer getNextExpirationPoints() {
    return nextExpirationPoints;
  }


  public void setNextExpirationPoints(Integer nextExpirationPoints) {
    this.nextExpirationPoints = nextExpirationPoints;
    this.nextExpirationPointsIsSet = true;
  }
  public boolean isNextExpirationPointsSet() {
    return nextExpirationPointsIsSet;
  }


  public RedeemableVoucherLoyaltyCard pendingPoints(Integer pendingPoints) {
    
    this.pendingPoints = pendingPoints;
    return this;
  }

   /**
   * Shows the number of pending points that will be added to the loyalty card when they are activated automatically or manually.
   * @return pendingPoints
  **/
  @javax.annotation.Nullable
  public Integer getPendingPoints() {
    return pendingPoints;
  }


  public void setPendingPoints(Integer pendingPoints) {
    this.pendingPoints = pendingPoints;
    this.pendingPointsIsSet = true;
  }
  public boolean isPendingPointsSet() {
    return pendingPointsIsSet;
  }


  public RedeemableVoucherLoyaltyCard expiredPoints(Integer expiredPoints) {
    
    this.expiredPoints = expiredPoints;
    return this;
  }

   /**
   * Shows the total number of expired points over the lifetime of the loyalty card.
   * @return expiredPoints
  **/
  @javax.annotation.Nullable
  public Integer getExpiredPoints() {
    return expiredPoints;
  }


  public void setExpiredPoints(Integer expiredPoints) {
    this.expiredPoints = expiredPoints;
    this.expiredPointsIsSet = true;
  }
  public boolean isExpiredPointsSet() {
    return expiredPointsIsSet;
  }


  public RedeemableVoucherLoyaltyCard subtractedPoints(Integer subtractedPoints) {
    
    this.subtractedPoints = subtractedPoints;
    return this;
  }

   /**
   * Shows the total number of subtracted points over the lifetime of the loyalty card.
   * @return subtractedPoints
  **/
  @javax.annotation.Nullable
  public Integer getSubtractedPoints() {
    return subtractedPoints;
  }


  public void setSubtractedPoints(Integer subtractedPoints) {
    this.subtractedPoints = subtractedPoints;
    this.subtractedPointsIsSet = true;
  }
  public boolean isSubtractedPointsSet() {
    return subtractedPointsIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedeemableVoucherLoyaltyCard redeemableVoucherLoyaltyCard = (RedeemableVoucherLoyaltyCard) o;
    return Objects.equals(this.points, redeemableVoucherLoyaltyCard.points) &&
        Objects.equals(this.balance, redeemableVoucherLoyaltyCard.balance) &&
        Objects.equals(this.nextExpirationDate, redeemableVoucherLoyaltyCard.nextExpirationDate) &&
        Objects.equals(this.nextExpirationPoints, redeemableVoucherLoyaltyCard.nextExpirationPoints) &&
        Objects.equals(this.pendingPoints, redeemableVoucherLoyaltyCard.pendingPoints) &&
        Objects.equals(this.expiredPoints, redeemableVoucherLoyaltyCard.expiredPoints) &&
        Objects.equals(this.subtractedPoints, redeemableVoucherLoyaltyCard.subtractedPoints);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(points, balance, nextExpirationDate, nextExpirationPoints, pendingPoints, expiredPoints, subtractedPoints);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedeemableVoucherLoyaltyCard {\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    nextExpirationDate: ").append(toIndentedString(nextExpirationDate)).append("\n");
    sb.append("    nextExpirationPoints: ").append(toIndentedString(nextExpirationPoints)).append("\n");
    sb.append("    pendingPoints: ").append(toIndentedString(pendingPoints)).append("\n");
    sb.append("    expiredPoints: ").append(toIndentedString(expiredPoints)).append("\n");
    sb.append("    subtractedPoints: ").append(toIndentedString(subtractedPoints)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("points");
    openapiFields.add("balance");
    openapiFields.add("next_expiration_date");
    openapiFields.add("next_expiration_points");
    openapiFields.add("pending_points");
    openapiFields.add("expired_points");
    openapiFields.add("subtracted_points");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RedeemableVoucherLoyaltyCard.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RedeemableVoucherLoyaltyCard' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RedeemableVoucherLoyaltyCard> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RedeemableVoucherLoyaltyCard.class));

       return (TypeAdapter<T>) new TypeAdapter<RedeemableVoucherLoyaltyCard>() {
           @Override
           public void write(JsonWriter out, RedeemableVoucherLoyaltyCard value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : RedeemableVoucherLoyaltyCard.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = RedeemableVoucherLoyaltyCard.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public RedeemableVoucherLoyaltyCard read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RedeemableVoucherLoyaltyCard given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RedeemableVoucherLoyaltyCard
  * @throws IOException if the JSON string is invalid with respect to RedeemableVoucherLoyaltyCard
  */
  public static RedeemableVoucherLoyaltyCard fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RedeemableVoucherLoyaltyCard.class);
  }

 /**
  * Convert an instance of RedeemableVoucherLoyaltyCard to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

