/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Defines customer cockpit details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ManagementProjectsBrandingCockpits {
  public static final String SERIALIZED_NAME_CAMPAIGNS_OVERVIEW_ENABLED = "campaigns_overview_enabled";
  @SerializedName(SERIALIZED_NAME_CAMPAIGNS_OVERVIEW_ENABLED)
  private Boolean campaignsOverviewEnabled;
    private boolean campaignsOverviewEnabledIsSet = false;

  public static final String SERIALIZED_NAME_LOYALTY_ENABLED = "loyalty_enabled";
  @SerializedName(SERIALIZED_NAME_LOYALTY_ENABLED)
  private Boolean loyaltyEnabled;
    private boolean loyaltyEnabledIsSet = false;

  public static final String SERIALIZED_NAME_GIFT_CARDS_ENABLED = "gift_cards_enabled";
  @SerializedName(SERIALIZED_NAME_GIFT_CARDS_ENABLED)
  private Boolean giftCardsEnabled;
    private boolean giftCardsEnabledIsSet = false;

  public static final String SERIALIZED_NAME_COUPONS_ENABLED = "coupons_enabled";
  @SerializedName(SERIALIZED_NAME_COUPONS_ENABLED)
  private Boolean couponsEnabled;
    private boolean couponsEnabledIsSet = false;

  public static final String SERIALIZED_NAME_REFERRALS_ENABLED = "referrals_enabled";
  @SerializedName(SERIALIZED_NAME_REFERRALS_ENABLED)
  private Boolean referralsEnabled;
    private boolean referralsEnabledIsSet = false;

  /**
   * Determines the color scheme of the customer cockpit.
   */
  @JsonAdapter(ThemeEnum.Adapter.class)
  public enum ThemeEnum {
    BLUE("blue"),
    
    DARK_GREEN("dark-green"),
    
    DEFAULT("default"),
    
    GREEN("green"),
    
    GREY("grey"),
    
    ORANGE("orange"),
    
    PURPLE("purple"),
    
    RED("red");

    private String value;

    ThemeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ThemeEnum fromValue(String value) {
      for (ThemeEnum b : ThemeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ThemeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ThemeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ThemeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ThemeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_THEME = "theme";
  @SerializedName(SERIALIZED_NAME_THEME)
  private ThemeEnum theme;
    private boolean themeIsSet = false;

  public static final String SERIALIZED_NAME_USE_CUSTOM_DOUBLE_OPT_IN_REDIRECT_URL = "use_custom_double_opt_in_redirect_url";
  @SerializedName(SERIALIZED_NAME_USE_CUSTOM_DOUBLE_OPT_IN_REDIRECT_URL)
  private Boolean useCustomDoubleOptInRedirectUrl;
    private boolean useCustomDoubleOptInRedirectUrlIsSet = false;

  public static final String SERIALIZED_NAME_CUSTOM_DOUBLE_OPT_IN_REDIRECT_URL = "custom_double_opt_in_redirect_url";
  @SerializedName(SERIALIZED_NAME_CUSTOM_DOUBLE_OPT_IN_REDIRECT_URL)
  private String customDoubleOptInRedirectUrl;
    private boolean customDoubleOptInRedirectUrlIsSet = false;

  public ManagementProjectsBrandingCockpits() {
  }

  public ManagementProjectsBrandingCockpits campaignsOverviewEnabled(Boolean campaignsOverviewEnabled) {
    
    this.campaignsOverviewEnabled = campaignsOverviewEnabled;
    return this;
  }

   /**
   * Enables the campaign overview for customers.
   * @return campaignsOverviewEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getCampaignsOverviewEnabled() {
    return campaignsOverviewEnabled;
  }


  public void setCampaignsOverviewEnabled(Boolean campaignsOverviewEnabled) {
    this.campaignsOverviewEnabled = campaignsOverviewEnabled;
    this.campaignsOverviewEnabledIsSet = true;
  }
  public boolean isCampaignsOverviewEnabledSet() {
    return campaignsOverviewEnabledIsSet;
  }


  public ManagementProjectsBrandingCockpits loyaltyEnabled(Boolean loyaltyEnabled) {
    
    this.loyaltyEnabled = loyaltyEnabled;
    return this;
  }

   /**
   * Enables the loyalty campaign overview for customers.
   * @return loyaltyEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getLoyaltyEnabled() {
    return loyaltyEnabled;
  }


  public void setLoyaltyEnabled(Boolean loyaltyEnabled) {
    this.loyaltyEnabled = loyaltyEnabled;
    this.loyaltyEnabledIsSet = true;
  }
  public boolean isLoyaltyEnabledSet() {
    return loyaltyEnabledIsSet;
  }


  public ManagementProjectsBrandingCockpits giftCardsEnabled(Boolean giftCardsEnabled) {
    
    this.giftCardsEnabled = giftCardsEnabled;
    return this;
  }

   /**
   * Enables the gift card overview for customers.
   * @return giftCardsEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getGiftCardsEnabled() {
    return giftCardsEnabled;
  }


  public void setGiftCardsEnabled(Boolean giftCardsEnabled) {
    this.giftCardsEnabled = giftCardsEnabled;
    this.giftCardsEnabledIsSet = true;
  }
  public boolean isGiftCardsEnabledSet() {
    return giftCardsEnabledIsSet;
  }


  public ManagementProjectsBrandingCockpits couponsEnabled(Boolean couponsEnabled) {
    
    this.couponsEnabled = couponsEnabled;
    return this;
  }

   /**
   * Enables the discount coupon overview for customers.
   * @return couponsEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getCouponsEnabled() {
    return couponsEnabled;
  }


  public void setCouponsEnabled(Boolean couponsEnabled) {
    this.couponsEnabled = couponsEnabled;
    this.couponsEnabledIsSet = true;
  }
  public boolean isCouponsEnabledSet() {
    return couponsEnabledIsSet;
  }


  public ManagementProjectsBrandingCockpits referralsEnabled(Boolean referralsEnabled) {
    
    this.referralsEnabled = referralsEnabled;
    return this;
  }

   /**
   * Enables the referral campaign overview for customers.
   * @return referralsEnabled
  **/
  @javax.annotation.Nullable
  public Boolean getReferralsEnabled() {
    return referralsEnabled;
  }


  public void setReferralsEnabled(Boolean referralsEnabled) {
    this.referralsEnabled = referralsEnabled;
    this.referralsEnabledIsSet = true;
  }
  public boolean isReferralsEnabledSet() {
    return referralsEnabledIsSet;
  }


  public ManagementProjectsBrandingCockpits theme(ThemeEnum theme) {
    
    this.theme = theme;
    return this;
  }

   /**
   * Determines the color scheme of the customer cockpit.
   * @return theme
  **/
  @javax.annotation.Nullable
  public ThemeEnum getTheme() {
    return theme;
  }


  public void setTheme(ThemeEnum theme) {
    this.theme = theme;
    this.themeIsSet = true;
  }
  public boolean isThemeSet() {
    return themeIsSet;
  }


  public ManagementProjectsBrandingCockpits useCustomDoubleOptInRedirectUrl(Boolean useCustomDoubleOptInRedirectUrl) {
    
    this.useCustomDoubleOptInRedirectUrl = useCustomDoubleOptInRedirectUrl;
    return this;
  }

   /**
   * Enables the double opt-in option. It must be a valid URL format.
   * @return useCustomDoubleOptInRedirectUrl
  **/
  @javax.annotation.Nullable
  public Boolean getUseCustomDoubleOptInRedirectUrl() {
    return useCustomDoubleOptInRedirectUrl;
  }


  public void setUseCustomDoubleOptInRedirectUrl(Boolean useCustomDoubleOptInRedirectUrl) {
    this.useCustomDoubleOptInRedirectUrl = useCustomDoubleOptInRedirectUrl;
    this.useCustomDoubleOptInRedirectUrlIsSet = true;
  }
  public boolean isUseCustomDoubleOptInRedirectUrlSet() {
    return useCustomDoubleOptInRedirectUrlIsSet;
  }


  public ManagementProjectsBrandingCockpits customDoubleOptInRedirectUrl(String customDoubleOptInRedirectUrl) {
    
    this.customDoubleOptInRedirectUrl = customDoubleOptInRedirectUrl;
    return this;
  }

   /**
   * Defines the URL for the double opt-in consent. It must be a valid URL format.
   * @return customDoubleOptInRedirectUrl
  **/
  @javax.annotation.Nullable
  public String getCustomDoubleOptInRedirectUrl() {
    return customDoubleOptInRedirectUrl;
  }


  public void setCustomDoubleOptInRedirectUrl(String customDoubleOptInRedirectUrl) {
    this.customDoubleOptInRedirectUrl = customDoubleOptInRedirectUrl;
    this.customDoubleOptInRedirectUrlIsSet = true;
  }
  public boolean isCustomDoubleOptInRedirectUrlSet() {
    return customDoubleOptInRedirectUrlIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementProjectsBrandingCockpits managementProjectsBrandingCockpits = (ManagementProjectsBrandingCockpits) o;
    return Objects.equals(this.campaignsOverviewEnabled, managementProjectsBrandingCockpits.campaignsOverviewEnabled) &&
        Objects.equals(this.loyaltyEnabled, managementProjectsBrandingCockpits.loyaltyEnabled) &&
        Objects.equals(this.giftCardsEnabled, managementProjectsBrandingCockpits.giftCardsEnabled) &&
        Objects.equals(this.couponsEnabled, managementProjectsBrandingCockpits.couponsEnabled) &&
        Objects.equals(this.referralsEnabled, managementProjectsBrandingCockpits.referralsEnabled) &&
        Objects.equals(this.theme, managementProjectsBrandingCockpits.theme) &&
        Objects.equals(this.useCustomDoubleOptInRedirectUrl, managementProjectsBrandingCockpits.useCustomDoubleOptInRedirectUrl) &&
        Objects.equals(this.customDoubleOptInRedirectUrl, managementProjectsBrandingCockpits.customDoubleOptInRedirectUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(campaignsOverviewEnabled, loyaltyEnabled, giftCardsEnabled, couponsEnabled, referralsEnabled, theme, useCustomDoubleOptInRedirectUrl, customDoubleOptInRedirectUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementProjectsBrandingCockpits {\n");
    sb.append("    campaignsOverviewEnabled: ").append(toIndentedString(campaignsOverviewEnabled)).append("\n");
    sb.append("    loyaltyEnabled: ").append(toIndentedString(loyaltyEnabled)).append("\n");
    sb.append("    giftCardsEnabled: ").append(toIndentedString(giftCardsEnabled)).append("\n");
    sb.append("    couponsEnabled: ").append(toIndentedString(couponsEnabled)).append("\n");
    sb.append("    referralsEnabled: ").append(toIndentedString(referralsEnabled)).append("\n");
    sb.append("    theme: ").append(toIndentedString(theme)).append("\n");
    sb.append("    useCustomDoubleOptInRedirectUrl: ").append(toIndentedString(useCustomDoubleOptInRedirectUrl)).append("\n");
    sb.append("    customDoubleOptInRedirectUrl: ").append(toIndentedString(customDoubleOptInRedirectUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("campaigns_overview_enabled");
    openapiFields.add("loyalty_enabled");
    openapiFields.add("gift_cards_enabled");
    openapiFields.add("coupons_enabled");
    openapiFields.add("referrals_enabled");
    openapiFields.add("theme");
    openapiFields.add("use_custom_double_opt_in_redirect_url");
    openapiFields.add("custom_double_opt_in_redirect_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementProjectsBrandingCockpits.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementProjectsBrandingCockpits' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementProjectsBrandingCockpits> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementProjectsBrandingCockpits.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementProjectsBrandingCockpits>() {
           @Override
           public void write(JsonWriter out, ManagementProjectsBrandingCockpits value) throws IOException {
            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

            // 1. Strip all nulls and internal "isSet" markers
            obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

            // 2. Add back explicitly set nulls using reflection
            for (Field field : ManagementProjectsBrandingCockpits.class.getDeclaredFields()) {
              String fieldName = field.getName();
              if (fieldName.endsWith("IsSet")) continue;
              try {
                Field isSetField = ManagementProjectsBrandingCockpits.class.getDeclaredField(fieldName + "IsSet");
                isSetField.setAccessible(true);
                boolean isSet = (boolean) isSetField.get(value);

                field.setAccessible(true);
                Object fieldValue = field.get(value);

                if (isSet && fieldValue == null) {
                  // convert camelCase to snake_case (OpenAPI property names are snake_case)
                  String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                  obj.add(jsonName, JsonNull.INSTANCE);
                }
              } catch (NoSuchFieldException ignored) {
                // no isSet marker → skip
              } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
              }
            }

             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementProjectsBrandingCockpits read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagementProjectsBrandingCockpits given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagementProjectsBrandingCockpits
  * @throws IOException if the JSON string is invalid with respect to ManagementProjectsBrandingCockpits
  */
  public static ManagementProjectsBrandingCockpits fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementProjectsBrandingCockpits.class);
  }

 /**
  * Convert an instance of ManagementProjectsBrandingCockpits to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

