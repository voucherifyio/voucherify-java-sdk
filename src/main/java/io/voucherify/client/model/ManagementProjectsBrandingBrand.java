/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Defines basic brand details.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ManagementProjectsBrandingBrand {
  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;
    private boolean nameIsSet = false;

  public static final String SERIALIZED_NAME_PRIVACY_POLICY_URL = "privacy_policy_url";
  @SerializedName(SERIALIZED_NAME_PRIVACY_POLICY_URL)
  private String privacyPolicyUrl;
    private boolean privacyPolicyUrlIsSet = false;

  public static final String SERIALIZED_NAME_TERMS_OF_USE_URL = "terms_of_use_url";
  @SerializedName(SERIALIZED_NAME_TERMS_OF_USE_URL)
  private String termsOfUseUrl;
    private boolean termsOfUseUrlIsSet = false;

  public static final String SERIALIZED_NAME_PERMISSION_REMINDER = "permission_reminder";
  @SerializedName(SERIALIZED_NAME_PERMISSION_REMINDER)
  private String permissionReminder;
    private boolean permissionReminderIsSet = false;

  public static final String SERIALIZED_NAME_WEBSITE_URL = "website_url";
  @SerializedName(SERIALIZED_NAME_WEBSITE_URL)
  private String websiteUrl;
    private boolean websiteUrlIsSet = false;

  public ManagementProjectsBrandingBrand() {
  }

  public ManagementProjectsBrandingBrand name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Defines brand name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
    this.nameIsSet = true;
  }
  public boolean isNameSet() {
    return nameIsSet;
  }


  public ManagementProjectsBrandingBrand privacyPolicyUrl(String privacyPolicyUrl) {
    
    this.privacyPolicyUrl = privacyPolicyUrl;
    return this;
  }

   /**
   * Defines the URL to the brand&#39;s privacy policy. It must be a valid URL format.
   * @return privacyPolicyUrl
  **/
  @javax.annotation.Nullable
  public String getPrivacyPolicyUrl() {
    return privacyPolicyUrl;
  }


  public void setPrivacyPolicyUrl(String privacyPolicyUrl) {
    this.privacyPolicyUrl = privacyPolicyUrl;
    this.privacyPolicyUrlIsSet = true;
  }
  public boolean isPrivacyPolicyUrlSet() {
    return privacyPolicyUrlIsSet;
  }


  public ManagementProjectsBrandingBrand termsOfUseUrl(String termsOfUseUrl) {
    
    this.termsOfUseUrl = termsOfUseUrl;
    return this;
  }

   /**
   * Defines the URL to the brand&#39;s terms of use.  It must be a valid URL format.
   * @return termsOfUseUrl
  **/
  @javax.annotation.Nullable
  public String getTermsOfUseUrl() {
    return termsOfUseUrl;
  }


  public void setTermsOfUseUrl(String termsOfUseUrl) {
    this.termsOfUseUrl = termsOfUseUrl;
    this.termsOfUseUrlIsSet = true;
  }
  public boolean isTermsOfUseUrlSet() {
    return termsOfUseUrlIsSet;
  }


  public ManagementProjectsBrandingBrand permissionReminder(String permissionReminder) {
    
    this.permissionReminder = permissionReminder;
    return this;
  }

   /**
   * Defines the message that is displayed to customers who opted in an email newsletter.
   * @return permissionReminder
  **/
  @javax.annotation.Nullable
  public String getPermissionReminder() {
    return permissionReminder;
  }


  public void setPermissionReminder(String permissionReminder) {
    this.permissionReminder = permissionReminder;
    this.permissionReminderIsSet = true;
  }
  public boolean isPermissionReminderSet() {
    return permissionReminderIsSet;
  }


  public ManagementProjectsBrandingBrand websiteUrl(String websiteUrl) {
    
    this.websiteUrl = websiteUrl;
    return this;
  }

   /**
   * Defines the URL to the brand&#39;s website. It must be a valid URL format.
   * @return websiteUrl
  **/
  @javax.annotation.Nullable
  public String getWebsiteUrl() {
    return websiteUrl;
  }


  public void setWebsiteUrl(String websiteUrl) {
    this.websiteUrl = websiteUrl;
    this.websiteUrlIsSet = true;
  }
  public boolean isWebsiteUrlSet() {
    return websiteUrlIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementProjectsBrandingBrand managementProjectsBrandingBrand = (ManagementProjectsBrandingBrand) o;
    return Objects.equals(this.name, managementProjectsBrandingBrand.name) &&
        Objects.equals(this.privacyPolicyUrl, managementProjectsBrandingBrand.privacyPolicyUrl) &&
        Objects.equals(this.termsOfUseUrl, managementProjectsBrandingBrand.termsOfUseUrl) &&
        Objects.equals(this.permissionReminder, managementProjectsBrandingBrand.permissionReminder) &&
        Objects.equals(this.websiteUrl, managementProjectsBrandingBrand.websiteUrl);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, privacyPolicyUrl, termsOfUseUrl, permissionReminder, websiteUrl);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementProjectsBrandingBrand {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    privacyPolicyUrl: ").append(toIndentedString(privacyPolicyUrl)).append("\n");
    sb.append("    termsOfUseUrl: ").append(toIndentedString(termsOfUseUrl)).append("\n");
    sb.append("    permissionReminder: ").append(toIndentedString(permissionReminder)).append("\n");
    sb.append("    websiteUrl: ").append(toIndentedString(websiteUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("name");
    openapiFields.add("privacy_policy_url");
    openapiFields.add("terms_of_use_url");
    openapiFields.add("permission_reminder");
    openapiFields.add("website_url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementProjectsBrandingBrand.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementProjectsBrandingBrand' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementProjectsBrandingBrand> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementProjectsBrandingBrand.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementProjectsBrandingBrand>() {
           @Override
           public void write(JsonWriter out, ManagementProjectsBrandingBrand value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : ManagementProjectsBrandingBrand.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = ManagementProjectsBrandingBrand.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementProjectsBrandingBrand read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagementProjectsBrandingBrand given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagementProjectsBrandingBrand
  * @throws IOException if the JSON string is invalid with respect to ManagementProjectsBrandingBrand
  */
  public static ManagementProjectsBrandingBrand fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementProjectsBrandingBrand.class);
  }

 /**
  * Convert an instance of ManagementProjectsBrandingBrand to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

