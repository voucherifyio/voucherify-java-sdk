/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * ParameterFiltersListCampaignsTypeConditions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ParameterFiltersListCampaignsTypeConditions {
  /**
   * Gets or Sets $in
   */
  @JsonAdapter(InEnum.Adapter.class)
  public enum InEnum {
    AUTO_UPDATE("AUTO_UPDATE"),
    
    BULK("BULK"),
    
    STANDALONE("STANDALONE"),
    
    STATIC("STATIC");

    private String value;

    InEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InEnum fromValue(String value) {
      for (InEnum b : InEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<InEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_$_IN = "$in";
  @SerializedName(SERIALIZED_NAME_$_IN)
  private List<InEnum> $in;

  /**
   * Gets or Sets $notIn
   */
  @JsonAdapter(NotInEnum.Adapter.class)
  public enum NotInEnum {
    AUTO_UPDATE("AUTO_UPDATE"),
    
    BULK("BULK"),
    
    STANDALONE("STANDALONE"),
    
    STATIC("STATIC");

    private String value;

    NotInEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static NotInEnum fromValue(String value) {
      for (NotInEnum b : NotInEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<NotInEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final NotInEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public NotInEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return NotInEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_$_NOT_IN = "$not_in";
  @SerializedName(SERIALIZED_NAME_$_NOT_IN)
  private List<NotInEnum> $notIn;

  public ParameterFiltersListCampaignsTypeConditions() {
  }

  public ParameterFiltersListCampaignsTypeConditions $in(List<InEnum> $in) {
    
    this.$in = $in;
    return this;
  }

  public ParameterFiltersListCampaignsTypeConditions add$InItem(InEnum $inItem) {
    if (this.$in == null) {
      this.$in = new ArrayList<>();
    }
    this.$in.add($inItem);
    return this;
  }

   /**
   * Array of resource values that should be included in the results (multiple values).
   * @return $in
  **/
  @javax.annotation.Nullable
  public List<InEnum> get$In() {
    return $in;
  }


  public void set$In(List<InEnum> $in) {
    this.$in = $in;
  }


  public ParameterFiltersListCampaignsTypeConditions $notIn(List<NotInEnum> $notIn) {
    
    this.$notIn = $notIn;
    return this;
  }

  public ParameterFiltersListCampaignsTypeConditions add$NotInItem(NotInEnum $notInItem) {
    if (this.$notIn == null) {
      this.$notIn = new ArrayList<>();
    }
    this.$notIn.add($notInItem);
    return this;
  }

   /**
   * Array of resource values that should be included in the results (multiple values).
   * @return $notIn
  **/
  @javax.annotation.Nullable
  public List<NotInEnum> get$NotIn() {
    return $notIn;
  }


  public void set$NotIn(List<NotInEnum> $notIn) {
    this.$notIn = $notIn;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterFiltersListCampaignsTypeConditions parameterFiltersListCampaignsTypeConditions = (ParameterFiltersListCampaignsTypeConditions) o;
    return Objects.equals(this.$in, parameterFiltersListCampaignsTypeConditions.$in) &&
        Objects.equals(this.$notIn, parameterFiltersListCampaignsTypeConditions.$notIn);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash($in, $notIn);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterFiltersListCampaignsTypeConditions {\n");
    sb.append("    $in: ").append(toIndentedString($in)).append("\n");
    sb.append("    $notIn: ").append(toIndentedString($notIn)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$in");
    openapiFields.add("$not_in");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ParameterFiltersListCampaignsTypeConditions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ParameterFiltersListCampaignsTypeConditions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ParameterFiltersListCampaignsTypeConditions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ParameterFiltersListCampaignsTypeConditions.class));

       return (TypeAdapter<T>) new TypeAdapter<ParameterFiltersListCampaignsTypeConditions>() {
           @Override
           public void write(JsonWriter out, ParameterFiltersListCampaignsTypeConditions value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ParameterFiltersListCampaignsTypeConditions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ParameterFiltersListCampaignsTypeConditions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ParameterFiltersListCampaignsTypeConditions
  * @throws IOException if the JSON string is invalid with respect to ParameterFiltersListCampaignsTypeConditions
  */
  public static ParameterFiltersListCampaignsTypeConditions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ParameterFiltersListCampaignsTypeConditions.class);
  }

 /**
  * Convert an instance of ParameterFiltersListCampaignsTypeConditions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

