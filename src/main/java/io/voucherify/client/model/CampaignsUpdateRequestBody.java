/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.CampaignsUpdateRequestBodyOptions;
import io.voucherify.client.model.Gift;
import io.voucherify.client.model.LoyaltyTiersExpirationAll;
import io.voucherify.client.model.ReferralProgram;
import io.voucherify.client.model.ValidityHours;
import io.voucherify.client.model.ValidityTimeframe;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * CampaignsUpdateRequestBody
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CampaignsUpdateRequestBody {
  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_VALIDITY_TIMEFRAME = "validity_timeframe";
  @SerializedName(SERIALIZED_NAME_VALIDITY_TIMEFRAME)
  private ValidityTimeframe validityTimeframe;

  /**
   * Gets or Sets validityDayOfWeek
   */
  @JsonAdapter(ValidityDayOfWeekEnum.Adapter.class)
  public enum ValidityDayOfWeekEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    ValidityDayOfWeekEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidityDayOfWeekEnum fromValue(Integer value) {
      for (ValidityDayOfWeekEnum b : ValidityDayOfWeekEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ValidityDayOfWeekEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidityDayOfWeekEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidityDayOfWeekEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ValidityDayOfWeekEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VALIDITY_DAY_OF_WEEK = "validity_day_of_week";
  @SerializedName(SERIALIZED_NAME_VALIDITY_DAY_OF_WEEK)
  private List<ValidityDayOfWeekEnum> validityDayOfWeek;

  public static final String SERIALIZED_NAME_VALIDITY_HOURS = "validity_hours";
  @SerializedName(SERIALIZED_NAME_VALIDITY_HOURS)
  private ValidityHours validityHours;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_UNSET_METADATA_FIELDS = "unset_metadata_fields";
  @SerializedName(SERIALIZED_NAME_UNSET_METADATA_FIELDS)
  private List<String> unsetMetadataFields;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_ACTIVITY_DURATION_AFTER_PUBLISHING = "activity_duration_after_publishing";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DURATION_AFTER_PUBLISHING)
  private String activityDurationAfterPublishing;

  public static final String SERIALIZED_NAME_JOIN_ONCE = "join_once";
  @SerializedName(SERIALIZED_NAME_JOIN_ONCE)
  private Boolean joinOnce;

  public static final String SERIALIZED_NAME_AUTO_JOIN = "auto_join";
  @SerializedName(SERIALIZED_NAME_AUTO_JOIN)
  private Boolean autoJoin;

  /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation.      - &#x60;AUTO_UPDATE&#x60;: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method).     -  &#x60;STATIC&#x60;: vouchers need to be manually published.
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AUTO_UPDATE("AUTO_UPDATE"),
    
    STATIC("STATIC");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_DISCOUNT = "discount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT)
  private Object discount;

  public static final String SERIALIZED_NAME_REFERRAL_PROGRAM = "referral_program";
  @SerializedName(SERIALIZED_NAME_REFERRAL_PROGRAM)
  private ReferralProgram referralProgram;

  public static final String SERIALIZED_NAME_GIFT = "gift";
  @SerializedName(SERIALIZED_NAME_GIFT)
  private Gift gift;

  public static final String SERIALIZED_NAME_LOYALTY_TIERS_EXPIRATION = "loyalty_tiers_expiration";
  @SerializedName(SERIALIZED_NAME_LOYALTY_TIERS_EXPIRATION)
  private LoyaltyTiersExpirationAll loyaltyTiersExpiration;

  public static final String SERIALIZED_NAME_OPTIONS = "options";
  @SerializedName(SERIALIZED_NAME_OPTIONS)
  private CampaignsUpdateRequestBodyOptions options;

  public static final String SERIALIZED_NAME_WINNERS_COUNT = "winners_count";
  @SerializedName(SERIALIZED_NAME_WINNERS_COUNT)
  private String winnersCount;

  public static final String SERIALIZED_NAME_UNIQUE_WINNERS_PER_DRAW = "unique_winners_per_draw";
  @SerializedName(SERIALIZED_NAME_UNIQUE_WINNERS_PER_DRAW)
  private String uniqueWinnersPerDraw;

  public static final String SERIALIZED_NAME_UNIQUE_WINNERS = "unique_winners";
  @SerializedName(SERIALIZED_NAME_UNIQUE_WINNERS)
  private String uniqueWinners;

  public CampaignsUpdateRequestBody() {
  }

  public CampaignsUpdateRequestBody startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. 
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public CampaignsUpdateRequestBody expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public CampaignsUpdateRequestBody validityTimeframe(ValidityTimeframe validityTimeframe) {
    
    this.validityTimeframe = validityTimeframe;
    return this;
  }

   /**
   * Get validityTimeframe
   * @return validityTimeframe
  **/
  @javax.annotation.Nullable
  public ValidityTimeframe getValidityTimeframe() {
    return validityTimeframe;
  }


  public void setValidityTimeframe(ValidityTimeframe validityTimeframe) {
    this.validityTimeframe = validityTimeframe;
  }


  public CampaignsUpdateRequestBody validityDayOfWeek(List<ValidityDayOfWeekEnum> validityDayOfWeek) {
    
    this.validityDayOfWeek = validityDayOfWeek;
    return this;
  }

  public CampaignsUpdateRequestBody addValidityDayOfWeekItem(ValidityDayOfWeekEnum validityDayOfWeekItem) {
    if (this.validityDayOfWeek == null) {
      this.validityDayOfWeek = new ArrayList<>();
    }
    this.validityDayOfWeek.add(validityDayOfWeekItem);
    return this;
  }

   /**
   * Integer array corresponding to the particular days of the week in which the voucher is valid.  - &#x60;0&#x60; Sunday - &#x60;1&#x60; Monday - &#x60;2&#x60; Tuesday - &#x60;3&#x60; Wednesday - &#x60;4&#x60; Thursday - &#x60;5&#x60; Friday - &#x60;6&#x60; Saturday
   * @return validityDayOfWeek
  **/
  @javax.annotation.Nullable
  public List<ValidityDayOfWeekEnum> getValidityDayOfWeek() {
    return validityDayOfWeek;
  }


  public void setValidityDayOfWeek(List<ValidityDayOfWeekEnum> validityDayOfWeek) {
    this.validityDayOfWeek = validityDayOfWeek;
  }


  public CampaignsUpdateRequestBody validityHours(ValidityHours validityHours) {
    
    this.validityHours = validityHours;
    return this;
  }

   /**
   * Get validityHours
   * @return validityHours
  **/
  @javax.annotation.Nullable
  public ValidityHours getValidityHours() {
    return validityHours;
  }


  public void setValidityHours(ValidityHours validityHours) {
    this.validityHours = validityHours;
  }


  public CampaignsUpdateRequestBody description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * An optional field to keep any extra textual information about the campaign such as a campaign description and details.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CampaignsUpdateRequestBody category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * The category assigned to the campaign. Either pass this parameter OR the &#x60;category_id&#x60;.
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public CampaignsUpdateRequestBody metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public CampaignsUpdateRequestBody unsetMetadataFields(List<String> unsetMetadataFields) {
    
    this.unsetMetadataFields = unsetMetadataFields;
    return this;
  }

  public CampaignsUpdateRequestBody addUnsetMetadataFieldsItem(String unsetMetadataFieldsItem) {
    if (this.unsetMetadataFields == null) {
      this.unsetMetadataFields = new ArrayList<>();
    }
    this.unsetMetadataFields.add(unsetMetadataFieldsItem);
    return this;
  }

   /**
   * Determine which metadata should be removed from campaign.
   * @return unsetMetadataFields
  **/
  @javax.annotation.Nullable
  public List<String> getUnsetMetadataFields() {
    return unsetMetadataFields;
  }


  public void setUnsetMetadataFields(List<String> unsetMetadataFields) {
    this.unsetMetadataFields = unsetMetadataFields;
  }


  public CampaignsUpdateRequestBody categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Unique category ID that this campaign belongs to. Either pass this parameter OR the &#x60;category&#x60;.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public CampaignsUpdateRequestBody activityDurationAfterPublishing(String activityDurationAfterPublishing) {
    
    this.activityDurationAfterPublishing = activityDurationAfterPublishing;
    return this;
  }

   /**
   * Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a &#x60;duration&#x60; of &#x60;P24D&#x60; will be valid for a duration of 24 days.
   * @return activityDurationAfterPublishing
  **/
  @javax.annotation.Nullable
  public String getActivityDurationAfterPublishing() {
    return activityDurationAfterPublishing;
  }


  public void setActivityDurationAfterPublishing(String activityDurationAfterPublishing) {
    this.activityDurationAfterPublishing = activityDurationAfterPublishing;
  }


  public CampaignsUpdateRequestBody joinOnce(Boolean joinOnce) {
    
    this.joinOnce = joinOnce;
    return this;
  }

   /**
   * If this value is set to &#x60;true&#x60;, customers will be able to join the campaign only once.
   * @return joinOnce
  **/
  @javax.annotation.Nullable
  public Boolean getJoinOnce() {
    return joinOnce;
  }


  public void setJoinOnce(Boolean joinOnce) {
    this.joinOnce = joinOnce;
  }


  public CampaignsUpdateRequestBody autoJoin(Boolean autoJoin) {
    
    this.autoJoin = autoJoin;
    return this;
  }

   /**
   * Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.
   * @return autoJoin
  **/
  @javax.annotation.Nullable
  public Boolean getAutoJoin() {
    return autoJoin;
  }


  public void setAutoJoin(Boolean autoJoin) {
    this.autoJoin = autoJoin;
  }


  public CampaignsUpdateRequestBody type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation.      - &#x60;AUTO_UPDATE&#x60;: By choosing the auto update option you will create a campaign that can be enhanced by new vouchers after the time of creation (e.g. by publish vouchers method).     -  &#x60;STATIC&#x60;: vouchers need to be manually published.
   * @return type
  **/
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CampaignsUpdateRequestBody discount(Object discount) {
    
    this.discount = discount;
    return this;
  }

   /**
   * Get discount
   * @return discount
  **/
  @javax.annotation.Nullable
  public Object getDiscount() {
    return discount;
  }


  public void setDiscount(Object discount) {
    this.discount = discount;
  }


  public CampaignsUpdateRequestBody referralProgram(ReferralProgram referralProgram) {
    
    this.referralProgram = referralProgram;
    return this;
  }

   /**
   * Get referralProgram
   * @return referralProgram
  **/
  @javax.annotation.Nullable
  public ReferralProgram getReferralProgram() {
    return referralProgram;
  }


  public void setReferralProgram(ReferralProgram referralProgram) {
    this.referralProgram = referralProgram;
  }


  public CampaignsUpdateRequestBody gift(Gift gift) {
    
    this.gift = gift;
    return this;
  }

   /**
   * Get gift
   * @return gift
  **/
  @javax.annotation.Nullable
  public Gift getGift() {
    return gift;
  }


  public void setGift(Gift gift) {
    this.gift = gift;
  }


  public CampaignsUpdateRequestBody loyaltyTiersExpiration(LoyaltyTiersExpirationAll loyaltyTiersExpiration) {
    
    this.loyaltyTiersExpiration = loyaltyTiersExpiration;
    return this;
  }

   /**
   * Get loyaltyTiersExpiration
   * @return loyaltyTiersExpiration
  **/
  @javax.annotation.Nullable
  public LoyaltyTiersExpirationAll getLoyaltyTiersExpiration() {
    return loyaltyTiersExpiration;
  }


  public void setLoyaltyTiersExpiration(LoyaltyTiersExpirationAll loyaltyTiersExpiration) {
    this.loyaltyTiersExpiration = loyaltyTiersExpiration;
  }


  public CampaignsUpdateRequestBody options(CampaignsUpdateRequestBodyOptions options) {
    
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @javax.annotation.Nullable
  public CampaignsUpdateRequestBodyOptions getOptions() {
    return options;
  }


  public void setOptions(CampaignsUpdateRequestBodyOptions options) {
    this.options = options;
  }


  public CampaignsUpdateRequestBody winnersCount(String winnersCount) {
    
    this.winnersCount = winnersCount;
    return this;
  }

   /**
   * It represents the total number of winners in a lucky draw.
   * @return winnersCount
  **/
  @javax.annotation.Nullable
  public String getWinnersCount() {
    return winnersCount;
  }


  public void setWinnersCount(String winnersCount) {
    this.winnersCount = winnersCount;
  }


  public CampaignsUpdateRequestBody uniqueWinnersPerDraw(String uniqueWinnersPerDraw) {
    
    this.uniqueWinnersPerDraw = uniqueWinnersPerDraw;
    return this;
  }

   /**
   * It indicates whether each winner in a draw is unique or not.
   * @return uniqueWinnersPerDraw
  **/
  @javax.annotation.Nullable
  public String getUniqueWinnersPerDraw() {
    return uniqueWinnersPerDraw;
  }


  public void setUniqueWinnersPerDraw(String uniqueWinnersPerDraw) {
    this.uniqueWinnersPerDraw = uniqueWinnersPerDraw;
  }


  public CampaignsUpdateRequestBody uniqueWinners(String uniqueWinners) {
    
    this.uniqueWinners = uniqueWinners;
    return this;
  }

   /**
   * Specifies whether each participant can win only once across multiple draws.
   * @return uniqueWinners
  **/
  @javax.annotation.Nullable
  public String getUniqueWinners() {
    return uniqueWinners;
  }


  public void setUniqueWinners(String uniqueWinners) {
    this.uniqueWinners = uniqueWinners;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CampaignsUpdateRequestBody instance itself
   */
  public CampaignsUpdateRequestBody putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignsUpdateRequestBody campaignsUpdateRequestBody = (CampaignsUpdateRequestBody) o;
    return Objects.equals(this.startDate, campaignsUpdateRequestBody.startDate) &&
        Objects.equals(this.expirationDate, campaignsUpdateRequestBody.expirationDate) &&
        Objects.equals(this.validityTimeframe, campaignsUpdateRequestBody.validityTimeframe) &&
        Objects.equals(this.validityDayOfWeek, campaignsUpdateRequestBody.validityDayOfWeek) &&
        Objects.equals(this.validityHours, campaignsUpdateRequestBody.validityHours) &&
        Objects.equals(this.description, campaignsUpdateRequestBody.description) &&
        Objects.equals(this.category, campaignsUpdateRequestBody.category) &&
        Objects.equals(this.metadata, campaignsUpdateRequestBody.metadata) &&
        Objects.equals(this.unsetMetadataFields, campaignsUpdateRequestBody.unsetMetadataFields) &&
        Objects.equals(this.categoryId, campaignsUpdateRequestBody.categoryId) &&
        Objects.equals(this.activityDurationAfterPublishing, campaignsUpdateRequestBody.activityDurationAfterPublishing) &&
        Objects.equals(this.joinOnce, campaignsUpdateRequestBody.joinOnce) &&
        Objects.equals(this.autoJoin, campaignsUpdateRequestBody.autoJoin) &&
        Objects.equals(this.type, campaignsUpdateRequestBody.type) &&
        Objects.equals(this.discount, campaignsUpdateRequestBody.discount) &&
        Objects.equals(this.referralProgram, campaignsUpdateRequestBody.referralProgram) &&
        Objects.equals(this.gift, campaignsUpdateRequestBody.gift) &&
        Objects.equals(this.loyaltyTiersExpiration, campaignsUpdateRequestBody.loyaltyTiersExpiration) &&
        Objects.equals(this.options, campaignsUpdateRequestBody.options) &&
        Objects.equals(this.winnersCount, campaignsUpdateRequestBody.winnersCount) &&
        Objects.equals(this.uniqueWinnersPerDraw, campaignsUpdateRequestBody.uniqueWinnersPerDraw) &&
        Objects.equals(this.uniqueWinners, campaignsUpdateRequestBody.uniqueWinners)&&
        Objects.equals(this.additionalProperties, campaignsUpdateRequestBody.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(startDate, expirationDate, validityTimeframe, validityDayOfWeek, validityHours, description, category, metadata, unsetMetadataFields, categoryId, activityDurationAfterPublishing, joinOnce, autoJoin, type, discount, referralProgram, gift, loyaltyTiersExpiration, options, winnersCount, uniqueWinnersPerDraw, uniqueWinners, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignsUpdateRequestBody {\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    validityTimeframe: ").append(toIndentedString(validityTimeframe)).append("\n");
    sb.append("    validityDayOfWeek: ").append(toIndentedString(validityDayOfWeek)).append("\n");
    sb.append("    validityHours: ").append(toIndentedString(validityHours)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    unsetMetadataFields: ").append(toIndentedString(unsetMetadataFields)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    activityDurationAfterPublishing: ").append(toIndentedString(activityDurationAfterPublishing)).append("\n");
    sb.append("    joinOnce: ").append(toIndentedString(joinOnce)).append("\n");
    sb.append("    autoJoin: ").append(toIndentedString(autoJoin)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    discount: ").append(toIndentedString(discount)).append("\n");
    sb.append("    referralProgram: ").append(toIndentedString(referralProgram)).append("\n");
    sb.append("    gift: ").append(toIndentedString(gift)).append("\n");
    sb.append("    loyaltyTiersExpiration: ").append(toIndentedString(loyaltyTiersExpiration)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    winnersCount: ").append(toIndentedString(winnersCount)).append("\n");
    sb.append("    uniqueWinnersPerDraw: ").append(toIndentedString(uniqueWinnersPerDraw)).append("\n");
    sb.append("    uniqueWinners: ").append(toIndentedString(uniqueWinners)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("start_date");
    openapiFields.add("expiration_date");
    openapiFields.add("validity_timeframe");
    openapiFields.add("validity_day_of_week");
    openapiFields.add("validity_hours");
    openapiFields.add("description");
    openapiFields.add("category");
    openapiFields.add("metadata");
    openapiFields.add("unset_metadata_fields");
    openapiFields.add("category_id");
    openapiFields.add("activity_duration_after_publishing");
    openapiFields.add("join_once");
    openapiFields.add("auto_join");
    openapiFields.add("type");
    openapiFields.add("discount");
    openapiFields.add("referral_program");
    openapiFields.add("gift");
    openapiFields.add("loyalty_tiers_expiration");
    openapiFields.add("options");
    openapiFields.add("winners_count");
    openapiFields.add("unique_winners_per_draw");
    openapiFields.add("unique_winners");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CampaignsUpdateRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CampaignsUpdateRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CampaignsUpdateRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CampaignsUpdateRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<CampaignsUpdateRequestBody>() {
           @Override
           public void write(JsonWriter out, CampaignsUpdateRequestBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CampaignsUpdateRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             CampaignsUpdateRequestBody instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     return null;
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CampaignsUpdateRequestBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CampaignsUpdateRequestBody
  * @throws IOException if the JSON string is invalid with respect to CampaignsUpdateRequestBody
  */
  public static CampaignsUpdateRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CampaignsUpdateRequestBody.class);
  }

 /**
  * Convert an instance of CampaignsUpdateRequestBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

