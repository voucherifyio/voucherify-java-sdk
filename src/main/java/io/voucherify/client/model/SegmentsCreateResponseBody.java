/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Response body schema for **POST** &#x60;v1/segments&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SegmentsCreateResponseBody {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;
    private boolean idIsSet = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;
    private boolean nameIsSet = false;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;
    private boolean createdAtIsSet = false;

  /**
   * Describes whether the segment is dynamic (customers come in and leave based on set criteria) or static (manually selected customers).
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AUTO_UPDATE("auto-update"),
    
    STATIC("static"),
    
    PASSIVE("passive");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;
    private boolean typeIsSet = false;

  public static final String SERIALIZED_NAME_FILTER = "filter";
  @SerializedName(SERIALIZED_NAME_FILTER)
  private Object filter;
    private boolean filterIsSet = false;

  /**
   * Gets or Sets initialSyncStatus
   */
  @JsonAdapter(InitialSyncStatusEnum.Adapter.class)
  public enum InitialSyncStatusEnum {
    IN_PROGRESS("IN_PROGRESS"),
    
    DONE("DONE");

    private String value;

    InitialSyncStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static InitialSyncStatusEnum fromValue(String value) {
      for (InitialSyncStatusEnum b : InitialSyncStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<InitialSyncStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final InitialSyncStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public InitialSyncStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return InitialSyncStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_INITIAL_SYNC_STATUS = "initial_sync_status";
  @SerializedName(SERIALIZED_NAME_INITIAL_SYNC_STATUS)
  private InitialSyncStatusEnum initialSyncStatus;
    private boolean initialSyncStatusIsSet = false;

  /**
   * The type of the object represented by JSON. This object stores information about the customer segment.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    SEGMENT("segment");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private ObjectEnum _object = ObjectEnum.SEGMENT;
    private boolean _objectIsSet = false;

  public SegmentsCreateResponseBody() {
  }

  public SegmentsCreateResponseBody id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique segment ID.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
    this.idIsSet = true;
  }
  public boolean isIdSet() {
    return idIsSet;
  }


  public SegmentsCreateResponseBody name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Segment name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
    this.nameIsSet = true;
  }
  public boolean isNameSet() {
    return nameIsSet;
  }


  public SegmentsCreateResponseBody createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the segment was created. The value is shown in the ISO 8601 format.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    this.createdAtIsSet = true;
  }
  public boolean isCreatedAtSet() {
    return createdAtIsSet;
  }


  public SegmentsCreateResponseBody type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Describes whether the segment is dynamic (customers come in and leave based on set criteria) or static (manually selected customers).
   * @return type
  **/
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
    this.typeIsSet = true;
  }
  public boolean isTypeSet() {
    return typeIsSet;
  }


  public SegmentsCreateResponseBody filter(Object filter) {
    
    this.filter = filter;
    return this;
  }

   /**
   * Defines a set of criteria for an &#x60;auto-update&#x60; segment type.  
   * @return filter
  **/
  @javax.annotation.Nullable
  public Object getFilter() {
    return filter;
  }


  public void setFilter(Object filter) {
    this.filter = filter;
    this.filterIsSet = true;
  }
  public boolean isFilterSet() {
    return filterIsSet;
  }


  public SegmentsCreateResponseBody initialSyncStatus(InitialSyncStatusEnum initialSyncStatus) {
    
    this.initialSyncStatus = initialSyncStatus;
    return this;
  }

   /**
   * Get initialSyncStatus
   * @return initialSyncStatus
  **/
  @javax.annotation.Nullable
  public InitialSyncStatusEnum getInitialSyncStatus() {
    return initialSyncStatus;
  }


  public void setInitialSyncStatus(InitialSyncStatusEnum initialSyncStatus) {
    this.initialSyncStatus = initialSyncStatus;
    this.initialSyncStatusIsSet = true;
  }
  public boolean isInitialSyncStatusSet() {
    return initialSyncStatusIsSet;
  }


  public SegmentsCreateResponseBody _object(ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The type of the object represented by JSON. This object stores information about the customer segment.
   * @return _object
  **/
  @javax.annotation.Nullable
  public ObjectEnum getObject() {
    return _object;
  }


  public void setObject(ObjectEnum _object) {
    this._object = _object;
    this._objectIsSet = true;
  }
  public boolean isObjectSet() {
    return _objectIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SegmentsCreateResponseBody segmentsCreateResponseBody = (SegmentsCreateResponseBody) o;
    return Objects.equals(this.id, segmentsCreateResponseBody.id) &&
        Objects.equals(this.name, segmentsCreateResponseBody.name) &&
        Objects.equals(this.createdAt, segmentsCreateResponseBody.createdAt) &&
        Objects.equals(this.type, segmentsCreateResponseBody.type) &&
        Objects.equals(this.filter, segmentsCreateResponseBody.filter) &&
        Objects.equals(this.initialSyncStatus, segmentsCreateResponseBody.initialSyncStatus) &&
        Objects.equals(this._object, segmentsCreateResponseBody._object);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, createdAt, type, filter, initialSyncStatus, _object);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SegmentsCreateResponseBody {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    filter: ").append(toIndentedString(filter)).append("\n");
    sb.append("    initialSyncStatus: ").append(toIndentedString(initialSyncStatus)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("created_at");
    openapiFields.add("type");
    openapiFields.add("filter");
    openapiFields.add("initial_sync_status");
    openapiFields.add("object");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SegmentsCreateResponseBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SegmentsCreateResponseBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SegmentsCreateResponseBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SegmentsCreateResponseBody.class));

       return (TypeAdapter<T>) new TypeAdapter<SegmentsCreateResponseBody>() {
           @Override
           public void write(JsonWriter out, SegmentsCreateResponseBody value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : SegmentsCreateResponseBody.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = SegmentsCreateResponseBody.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public SegmentsCreateResponseBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SegmentsCreateResponseBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SegmentsCreateResponseBody
  * @throws IOException if the JSON string is invalid with respect to SegmentsCreateResponseBody
  */
  public static SegmentsCreateResponseBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SegmentsCreateResponseBody.class);
  }

 /**
  * Convert an instance of SegmentsCreateResponseBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

