/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.math.BigDecimal;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * MemberActivityDataTransactionDetailsDestinationVoucherGift
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class MemberActivityDataTransactionDetailsDestinationVoucherGift {
  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private BigDecimal amount;

  public static final String SERIALIZED_NAME_SUBTRACTED_AMOUNT = "subtracted_amount";
  @SerializedName(SERIALIZED_NAME_SUBTRACTED_AMOUNT)
  private Integer subtractedAmount;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private BigDecimal balance;

  /**
   * Defines how the credits are applied to the customer&#39;s order.
   */
  @JsonAdapter(EffectEnum.Adapter.class)
  public enum EffectEnum {
    ORDER("APPLY_TO_ORDER"),
    
    ITEMS("APPLY_TO_ITEMS");

    private String value;

    EffectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static EffectEnum fromValue(String value) {
      for (EffectEnum b : EffectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<EffectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final EffectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public EffectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return EffectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_EFFECT = "effect";
  @SerializedName(SERIALIZED_NAME_EFFECT)
  private EffectEnum effect;

  public MemberActivityDataTransactionDetailsDestinationVoucherGift() {
  }

  public MemberActivityDataTransactionDetailsDestinationVoucherGift amount(BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * Total gift card income over the lifetime of the card. The value is multiplied by 100 to represent 2 decimal places. For example &#x60;10000 cents&#x60; for &#x60;$100.00&#x60;.
   * @return amount
  **/
  @javax.annotation.Nullable
  public BigDecimal getAmount() {
    return amount;
  }


  public void setAmount(BigDecimal amount) {
    this.amount = amount;
  }


  public MemberActivityDataTransactionDetailsDestinationVoucherGift subtractedAmount(Integer subtractedAmount) {
    
    this.subtractedAmount = subtractedAmount;
    return this;
  }

   /**
   * Total amount of subtracted credits over the gift card lifetime.
   * @return subtractedAmount
  **/
  @javax.annotation.Nullable
  public Integer getSubtractedAmount() {
    return subtractedAmount;
  }


  public void setSubtractedAmount(Integer subtractedAmount) {
    this.subtractedAmount = subtractedAmount;
  }


  public MemberActivityDataTransactionDetailsDestinationVoucherGift balance(BigDecimal balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Available funds. The value is multiplied by 100 to represent 2 decimal places. For example &#x60;10000 cents&#x60; for &#x60;$100.00&#x60;. &#x60;balance&#x60; &#x3D; &#x60;amount&#x60; - &#x60;subtracted_amount&#x60; - &#x60;redemption.redeemed_amount&#x60;.
   * @return balance
  **/
  @javax.annotation.Nullable
  public BigDecimal getBalance() {
    return balance;
  }


  public void setBalance(BigDecimal balance) {
    this.balance = balance;
  }


  public MemberActivityDataTransactionDetailsDestinationVoucherGift effect(EffectEnum effect) {
    
    this.effect = effect;
    return this;
  }

   /**
   * Defines how the credits are applied to the customer&#39;s order.
   * @return effect
  **/
  @javax.annotation.Nullable
  public EffectEnum getEffect() {
    return effect;
  }


  public void setEffect(EffectEnum effect) {
    this.effect = effect;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemberActivityDataTransactionDetailsDestinationVoucherGift memberActivityDataTransactionDetailsDestinationVoucherGift = (MemberActivityDataTransactionDetailsDestinationVoucherGift) o;
    return Objects.equals(this.amount, memberActivityDataTransactionDetailsDestinationVoucherGift.amount) &&
        Objects.equals(this.subtractedAmount, memberActivityDataTransactionDetailsDestinationVoucherGift.subtractedAmount) &&
        Objects.equals(this.balance, memberActivityDataTransactionDetailsDestinationVoucherGift.balance) &&
        Objects.equals(this.effect, memberActivityDataTransactionDetailsDestinationVoucherGift.effect);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(amount, subtractedAmount, balance, effect);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemberActivityDataTransactionDetailsDestinationVoucherGift {\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    subtractedAmount: ").append(toIndentedString(subtractedAmount)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    effect: ").append(toIndentedString(effect)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("amount");
    openapiFields.add("subtracted_amount");
    openapiFields.add("balance");
    openapiFields.add("effect");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MemberActivityDataTransactionDetailsDestinationVoucherGift.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MemberActivityDataTransactionDetailsDestinationVoucherGift' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MemberActivityDataTransactionDetailsDestinationVoucherGift> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MemberActivityDataTransactionDetailsDestinationVoucherGift.class));

       return (TypeAdapter<T>) new TypeAdapter<MemberActivityDataTransactionDetailsDestinationVoucherGift>() {
           @Override
           public void write(JsonWriter out, MemberActivityDataTransactionDetailsDestinationVoucherGift value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MemberActivityDataTransactionDetailsDestinationVoucherGift read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MemberActivityDataTransactionDetailsDestinationVoucherGift given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MemberActivityDataTransactionDetailsDestinationVoucherGift
  * @throws IOException if the JSON string is invalid with respect to MemberActivityDataTransactionDetailsDestinationVoucherGift
  */
  public static MemberActivityDataTransactionDetailsDestinationVoucherGift fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MemberActivityDataTransactionDetailsDestinationVoucherGift.class);
  }

 /**
  * Convert an instance of MemberActivityDataTransactionDetailsDestinationVoucherGift to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

