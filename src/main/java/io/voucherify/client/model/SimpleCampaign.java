/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.Category;
import io.voucherify.client.model.ReferralProgram;
import io.voucherify.client.model.SimpleCampaignVoucher;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Simplified campaign data.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class SimpleCampaign {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;
    private boolean idIsSet = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;
    private boolean nameIsSet = false;

  public static final String SERIALIZED_NAME_CAMPAIGN_TYPE = "campaign_type";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_TYPE)
  private String campaignType;
    private boolean campaignTypeIsSet = false;

  /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.  - &#x60;AUTO_UPDATE&#x60;: the campaign is dynamic, i.e. vouchers will generate based on set criteria -  &#x60;STATIC&#x60;: vouchers need to be manually published - &#x60;STANDALONE&#x60;: campaign for single vouchers
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AUTO_UPDATE("AUTO_UPDATE"),
    
    STATIC("STATIC"),
    
    STANDALONE("STANDALONE");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;
    private boolean typeIsSet = false;

  public static final String SERIALIZED_NAME_IS_REFERRAL_CODE = "is_referral_code";
  @SerializedName(SERIALIZED_NAME_IS_REFERRAL_CODE)
  private Boolean isReferralCode;
    private boolean isReferralCodeIsSet = false;

  public static final String SERIALIZED_NAME_VOUCHER = "voucher";
  @SerializedName(SERIALIZED_NAME_VOUCHER)
  private SimpleCampaignVoucher voucher;

  public static final String SERIALIZED_NAME_REFERRAL_PROGRAM = "referral_program";
  @SerializedName(SERIALIZED_NAME_REFERRAL_PROGRAM)
  private ReferralProgram referralProgram;

  public static final String SERIALIZED_NAME_AUTO_JOIN = "auto_join";
  @SerializedName(SERIALIZED_NAME_AUTO_JOIN)
  private Boolean autoJoin;
    private boolean autoJoinIsSet = false;

  public static final String SERIALIZED_NAME_JOIN_ONCE = "join_once";
  @SerializedName(SERIALIZED_NAME_JOIN_ONCE)
  private Boolean joinOnce;
    private boolean joinOnceIsSet = false;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;
    private boolean activeIsSet = false;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;
    private boolean categoryIdIsSet = false;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;
    private boolean categoryIsSet = false;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories;
    private boolean categoriesIsSet = false;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;
    private boolean metadataIsSet = false;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;
    private boolean startDateIsSet = false;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;
    private boolean expirationDateIsSet = false;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;
    private boolean descriptionIsSet = false;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;
    private boolean createdAtIsSet = false;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;
    private boolean updatedAtIsSet = false;

  /**
   * The type of the object represented by JSON. This object stores information about the campaign.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    CAMPAIGN("campaign");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private ObjectEnum _object = ObjectEnum.CAMPAIGN;
    private boolean _objectIsSet = false;

  public SimpleCampaign() {
  }

  public SimpleCampaign id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Campaign ID.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
    this.idIsSet = true;
  }
  public boolean isIdSet() {
    return idIsSet;
  }


  public SimpleCampaign name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Campaign name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
    this.nameIsSet = true;
  }
  public boolean isNameSet() {
    return nameIsSet;
  }


  public SimpleCampaign campaignType(String campaignType) {
    
    this.campaignType = campaignType;
    return this;
  }

   /**
   * Type of campaign.
   * @return campaignType
  **/
  @javax.annotation.Nullable
  public String getCampaignType() {
    return campaignType;
  }


  public void setCampaignType(String campaignType) {
    this.campaignType = campaignType;
    this.campaignTypeIsSet = true;
  }
  public boolean isCampaignTypeSet() {
    return campaignTypeIsSet;
  }


  public SimpleCampaign type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation or if the campaign consists of generic (standalone) voucherss.  - &#x60;AUTO_UPDATE&#x60;: the campaign is dynamic, i.e. vouchers will generate based on set criteria -  &#x60;STATIC&#x60;: vouchers need to be manually published - &#x60;STANDALONE&#x60;: campaign for single vouchers
   * @return type
  **/
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
    this.typeIsSet = true;
  }
  public boolean isTypeSet() {
    return typeIsSet;
  }


  public SimpleCampaign isReferralCode(Boolean isReferralCode) {
    
    this.isReferralCode = isReferralCode;
    return this;
  }

   /**
   * Flag indicating whether this voucher is a referral code; &#x60;true&#x60; for campaign type &#x60;REFERRAL_PROGRAM&#x60;.
   * @return isReferralCode
  **/
  @javax.annotation.Nullable
  public Boolean getIsReferralCode() {
    return isReferralCode;
  }


  public void setIsReferralCode(Boolean isReferralCode) {
    this.isReferralCode = isReferralCode;
    this.isReferralCodeIsSet = true;
  }
  public boolean isIsReferralCodeSet() {
    return isReferralCodeIsSet;
  }


  public SimpleCampaign voucher(SimpleCampaignVoucher voucher) {
    
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @javax.annotation.Nullable
  public SimpleCampaignVoucher getVoucher() {
    return voucher;
  }


  public void setVoucher(SimpleCampaignVoucher voucher) {
    this.voucher = voucher;
  }


  public SimpleCampaign referralProgram(ReferralProgram referralProgram) {
    
    this.referralProgram = referralProgram;
    return this;
  }

   /**
   * Get referralProgram
   * @return referralProgram
  **/
  @javax.annotation.Nullable
  public ReferralProgram getReferralProgram() {
    return referralProgram;
  }


  public void setReferralProgram(ReferralProgram referralProgram) {
    this.referralProgram = referralProgram;
  }


  public SimpleCampaign autoJoin(Boolean autoJoin) {
    
    this.autoJoin = autoJoin;
    return this;
  }

   /**
   * Indicates whether customers will be able to auto-join the campaign if any earning rule is fulfilled.
   * @return autoJoin
  **/
  @javax.annotation.Nullable
  public Boolean getAutoJoin() {
    return autoJoin;
  }


  public void setAutoJoin(Boolean autoJoin) {
    this.autoJoin = autoJoin;
    this.autoJoinIsSet = true;
  }
  public boolean isAutoJoinSet() {
    return autoJoinIsSet;
  }


  public SimpleCampaign joinOnce(Boolean joinOnce) {
    
    this.joinOnce = joinOnce;
    return this;
  }

   /**
   * If this value is set to &#x60;true&#x60;, customers will be able to join the campaign only once. It is always &#x60;false&#x60; for generic (standalone) vouchers campaigns and it cannot be changed in them. It is always &#x60;true&#x60; for loyalty campaigns and it cannot be changed in them.
   * @return joinOnce
  **/
  @javax.annotation.Nullable
  public Boolean getJoinOnce() {
    return joinOnce;
  }


  public void setJoinOnce(Boolean joinOnce) {
    this.joinOnce = joinOnce;
    this.joinOnceIsSet = true;
  }
  public boolean isJoinOnceSet() {
    return joinOnceIsSet;
  }


  public SimpleCampaign active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * Indicates whether the campaign is active.
   * @return active
  **/
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
    this.activeIsSet = true;
  }
  public boolean isActiveSet() {
    return activeIsSet;
  }


  public SimpleCampaign categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * The unique category ID that this campaign belongs to.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
    this.categoryIdIsSet = true;
  }
  public boolean isCategoryIdSet() {
    return categoryIdIsSet;
  }


  public SimpleCampaign category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Unique category name.
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
    this.categoryIsSet = true;
  }
  public boolean isCategorySet() {
    return categoryIsSet;
  }


  public SimpleCampaign categories(List<Category> categories) {
    
    this.categories = categories;
    return this;
  }

  public SimpleCampaign addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Contains details about the category.
   * @return categories
  **/
  @javax.annotation.Nullable
  public List<Category> getCategories() {
    return categories;
  }


  public void setCategories(List<Category> categories) {
    this.categories = categories;
    this.categoriesIsSet = true;
  }
  public boolean isCategoriesSet() {
    return categoriesIsSet;
  }


  public SimpleCampaign metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * A set of custom key/value pairs that you can attach to a campaign. The metadata object stores all custom attributes assigned to the campaign.
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
    this.metadataIsSet = true;
  }
  public boolean isMetadataSet() {
    return metadataIsSet;
  }


  public SimpleCampaign startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is inactive *before* this date. 
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
    this.startDateIsSet = true;
  }
  public boolean isStartDateSet() {
    return startDateIsSet;
  }


  public SimpleCampaign expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is inactive *after* this date.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
    this.expirationDateIsSet = true;
  }
  public boolean isExpirationDateSet() {
    return expirationDateIsSet;
  }


  public SimpleCampaign description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * An optional field to keep extra textual information about the campaign such as a campaign description and details.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
    this.descriptionIsSet = true;
  }
  public boolean isDescriptionSet() {
    return descriptionIsSet;
  }


  public SimpleCampaign createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    this.createdAtIsSet = true;
  }
  public boolean isCreatedAtSet() {
    return createdAtIsSet;
  }


  public SimpleCampaign updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the campaign was updated in the ISO 8601 format.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    this.updatedAtIsSet = true;
  }
  public boolean isUpdatedAtSet() {
    return updatedAtIsSet;
  }


  public SimpleCampaign _object(ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The type of the object represented by JSON. This object stores information about the campaign.
   * @return _object
  **/
  @javax.annotation.Nullable
  public ObjectEnum getObject() {
    return _object;
  }


  public void setObject(ObjectEnum _object) {
    this._object = _object;
    this._objectIsSet = true;
  }
  public boolean isObjectSet() {
    return _objectIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleCampaign simpleCampaign = (SimpleCampaign) o;
    return Objects.equals(this.id, simpleCampaign.id) &&
        Objects.equals(this.name, simpleCampaign.name) &&
        Objects.equals(this.campaignType, simpleCampaign.campaignType) &&
        Objects.equals(this.type, simpleCampaign.type) &&
        Objects.equals(this.isReferralCode, simpleCampaign.isReferralCode) &&
        Objects.equals(this.voucher, simpleCampaign.voucher) &&
        Objects.equals(this.referralProgram, simpleCampaign.referralProgram) &&
        Objects.equals(this.autoJoin, simpleCampaign.autoJoin) &&
        Objects.equals(this.joinOnce, simpleCampaign.joinOnce) &&
        Objects.equals(this.active, simpleCampaign.active) &&
        Objects.equals(this.categoryId, simpleCampaign.categoryId) &&
        Objects.equals(this.category, simpleCampaign.category) &&
        Objects.equals(this.categories, simpleCampaign.categories) &&
        Objects.equals(this.metadata, simpleCampaign.metadata) &&
        Objects.equals(this.startDate, simpleCampaign.startDate) &&
        Objects.equals(this.expirationDate, simpleCampaign.expirationDate) &&
        Objects.equals(this.description, simpleCampaign.description) &&
        Objects.equals(this.createdAt, simpleCampaign.createdAt) &&
        Objects.equals(this.updatedAt, simpleCampaign.updatedAt) &&
        Objects.equals(this._object, simpleCampaign._object);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, campaignType, type, isReferralCode, voucher, referralProgram, autoJoin, joinOnce, active, categoryId, category, categories, metadata, startDate, expirationDate, description, createdAt, updatedAt, _object);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleCampaign {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    campaignType: ").append(toIndentedString(campaignType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    isReferralCode: ").append(toIndentedString(isReferralCode)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    referralProgram: ").append(toIndentedString(referralProgram)).append("\n");
    sb.append("    autoJoin: ").append(toIndentedString(autoJoin)).append("\n");
    sb.append("    joinOnce: ").append(toIndentedString(joinOnce)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("campaign_type");
    openapiFields.add("type");
    openapiFields.add("is_referral_code");
    openapiFields.add("voucher");
    openapiFields.add("referral_program");
    openapiFields.add("auto_join");
    openapiFields.add("join_once");
    openapiFields.add("active");
    openapiFields.add("category_id");
    openapiFields.add("category");
    openapiFields.add("categories");
    openapiFields.add("metadata");
    openapiFields.add("start_date");
    openapiFields.add("expiration_date");
    openapiFields.add("description");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("object");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!SimpleCampaign.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'SimpleCampaign' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<SimpleCampaign> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(SimpleCampaign.class));

       return (TypeAdapter<T>) new TypeAdapter<SimpleCampaign>() {
           @Override
           public void write(JsonWriter out, SimpleCampaign value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : SimpleCampaign.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = SimpleCampaign.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public SimpleCampaign read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of SimpleCampaign given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of SimpleCampaign
  * @throws IOException if the JSON string is invalid with respect to SimpleCampaign
  */
  public static SimpleCampaign fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, SimpleCampaign.class);
  }

 /**
  * Convert an instance of SimpleCampaign to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

