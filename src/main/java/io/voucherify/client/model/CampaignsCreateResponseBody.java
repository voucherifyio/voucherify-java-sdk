/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.AccessSettingsCampaignAssignmentsList;
import io.voucherify.client.model.CampaignVoucher;
import io.voucherify.client.model.Category;
import io.voucherify.client.model.LoyaltyTiersExpirationAll;
import io.voucherify.client.model.PromotionTiersList;
import io.voucherify.client.model.ReferralProgram;
import io.voucherify.client.model.ValidationRulesAssignmentsList;
import io.voucherify.client.model.ValidityHours;
import io.voucherify.client.model.ValidityTimeframe;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Response body schema for **POST** &#x60;/campaigns/{campaignId}&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CampaignsCreateResponseBody {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;

  /**
   * Type of campaign.
   */
  @JsonAdapter(CampaignTypeEnum.Adapter.class)
  public enum CampaignTypeEnum {
    LOYALTY_PROGRAM("LOYALTY_PROGRAM"),
    
    GIFT_VOUCHERS("GIFT_VOUCHERS"),
    
    DISCOUNT_COUPONS("DISCOUNT_COUPONS"),
    
    PROMOTION("PROMOTION"),
    
    REFERRAL_PROGRAM("REFERRAL_PROGRAM"),
    
    LUCKY_DRAW("LUCKY_DRAW");

    private String value;

    CampaignTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CampaignTypeEnum fromValue(String value) {
      for (CampaignTypeEnum b : CampaignTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<CampaignTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CampaignTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CampaignTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CampaignTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CAMPAIGN_TYPE = "campaign_type";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_TYPE)
  private CampaignTypeEnum campaignType;

  /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation.      - &#x60;AUTO_UPDATE&#x60;: the campaign is dynamic, i.e. vouchers will generate based on set criteria     -  &#x60;STATIC&#x60;: vouchers need to be manually published
   */
  @JsonAdapter(TypeEnum.Adapter.class)
  public enum TypeEnum {
    AUTO_UPDATE("AUTO_UPDATE"),
    
    STATIC("STATIC");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<TypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final TypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public TypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return TypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_TYPE = "type";
  @SerializedName(SERIALIZED_NAME_TYPE)
  private TypeEnum type;

  public static final String SERIALIZED_NAME_VOUCHER = "voucher";
  @SerializedName(SERIALIZED_NAME_VOUCHER)
  private CampaignVoucher voucher;

  public static final String SERIALIZED_NAME_AUTO_JOIN = "auto_join";
  @SerializedName(SERIALIZED_NAME_AUTO_JOIN)
  private Boolean autoJoin;

  public static final String SERIALIZED_NAME_JOIN_ONCE = "join_once";
  @SerializedName(SERIALIZED_NAME_JOIN_ONCE)
  private Boolean joinOnce;

  public static final String SERIALIZED_NAME_USE_VOUCHER_METADATA_SCHEMA = "use_voucher_metadata_schema";
  @SerializedName(SERIALIZED_NAME_USE_VOUCHER_METADATA_SCHEMA)
  private Boolean useVoucherMetadataSchema;

  public static final String SERIALIZED_NAME_VALIDITY_TIMEFRAME = "validity_timeframe";
  @SerializedName(SERIALIZED_NAME_VALIDITY_TIMEFRAME)
  private ValidityTimeframe validityTimeframe;

  /**
   * Gets or Sets validityDayOfWeek
   */
  @JsonAdapter(ValidityDayOfWeekEnum.Adapter.class)
  public enum ValidityDayOfWeekEnum {
    NUMBER_0(0),
    
    NUMBER_1(1),
    
    NUMBER_2(2),
    
    NUMBER_3(3),
    
    NUMBER_4(4),
    
    NUMBER_5(5),
    
    NUMBER_6(6);

    private Integer value;

    ValidityDayOfWeekEnum(Integer value) {
      this.value = value;
    }

    public Integer getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ValidityDayOfWeekEnum fromValue(Integer value) {
      for (ValidityDayOfWeekEnum b : ValidityDayOfWeekEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ValidityDayOfWeekEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ValidityDayOfWeekEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ValidityDayOfWeekEnum read(final JsonReader jsonReader) throws IOException {
        Integer value =  jsonReader.nextInt();
        return ValidityDayOfWeekEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VALIDITY_DAY_OF_WEEK = "validity_day_of_week";
  @SerializedName(SERIALIZED_NAME_VALIDITY_DAY_OF_WEEK)
  private List<ValidityDayOfWeekEnum> validityDayOfWeek;

  public static final String SERIALIZED_NAME_VALIDITY_HOURS = "validity_hours";
  @SerializedName(SERIALIZED_NAME_VALIDITY_HOURS)
  private ValidityHours validityHours;

  public static final String SERIALIZED_NAME_ACTIVITY_DURATION_AFTER_PUBLISHING = "activity_duration_after_publishing";
  @SerializedName(SERIALIZED_NAME_ACTIVITY_DURATION_AFTER_PUBLISHING)
  private String activityDurationAfterPublishing;

  public static final String SERIALIZED_NAME_VOUCHERS_COUNT = "vouchers_count";
  @SerializedName(SERIALIZED_NAME_VOUCHERS_COUNT)
  private Integer vouchersCount;

  public static final String SERIALIZED_NAME_START_DATE = "start_date";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_ACTIVE = "active";
  @SerializedName(SERIALIZED_NAME_ACTIVE)
  private Boolean active;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private OffsetDateTime updatedAt;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  /**
   * Indicates the status of the campaign creation.
   */
  @JsonAdapter(CreationStatusEnum.Adapter.class)
  public enum CreationStatusEnum {
    DONE("DONE"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    FAILED("FAILED"),
    
    DRAFT("DRAFT"),
    
    MODIFYING("MODIFYING");

    private String value;

    CreationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CreationStatusEnum fromValue(String value) {
      for (CreationStatusEnum b : CreationStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<CreationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CreationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CreationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CreationStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CREATION_STATUS = "creation_status";
  @SerializedName(SERIALIZED_NAME_CREATION_STATUS)
  private CreationStatusEnum creationStatus;

  /**
   * Indicates the status of the campaign&#39;s voucher generation.
   */
  @JsonAdapter(VouchersGenerationStatusEnum.Adapter.class)
  public enum VouchersGenerationStatusEnum {
    DONE("DONE"),
    
    IN_PROGRESS("IN_PROGRESS"),
    
    FAILED("FAILED"),
    
    DRAFT("DRAFT"),
    
    MODIFYING("MODIFYING");

    private String value;

    VouchersGenerationStatusEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VouchersGenerationStatusEnum fromValue(String value) {
      for (VouchersGenerationStatusEnum b : VouchersGenerationStatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<VouchersGenerationStatusEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VouchersGenerationStatusEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VouchersGenerationStatusEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VouchersGenerationStatusEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VOUCHERS_GENERATION_STATUS = "vouchers_generation_status";
  @SerializedName(SERIALIZED_NAME_VOUCHERS_GENERATION_STATUS)
  private VouchersGenerationStatusEnum vouchersGenerationStatus;

  public static final String SERIALIZED_NAME_PROTECTED = "protected";
  @SerializedName(SERIALIZED_NAME_PROTECTED)
  private Boolean _protected;

  public static final String SERIALIZED_NAME_CATEGORY_ID = "category_id";
  @SerializedName(SERIALIZED_NAME_CATEGORY_ID)
  private String categoryId;

  public static final String SERIALIZED_NAME_CATEGORIES = "categories";
  @SerializedName(SERIALIZED_NAME_CATEGORIES)
  private List<Category> categories;

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private String _object = "campaign";

  public static final String SERIALIZED_NAME_REFERRAL_PROGRAM = "referral_program";
  @SerializedName(SERIALIZED_NAME_REFERRAL_PROGRAM)
  private ReferralProgram referralProgram;

  public static final String SERIALIZED_NAME_LOYALTY_TIERS_EXPIRATION = "loyalty_tiers_expiration";
  @SerializedName(SERIALIZED_NAME_LOYALTY_TIERS_EXPIRATION)
  private LoyaltyTiersExpirationAll loyaltyTiersExpiration;

  public static final String SERIALIZED_NAME_PROMOTION = "promotion";
  @SerializedName(SERIALIZED_NAME_PROMOTION)
  private PromotionTiersList promotion;

  public static final String SERIALIZED_NAME_VALIDATION_RULES_ASSIGNMENTS = "validation_rules_assignments";
  @SerializedName(SERIALIZED_NAME_VALIDATION_RULES_ASSIGNMENTS)
  private ValidationRulesAssignmentsList validationRulesAssignments;

  public static final String SERIALIZED_NAME_ACCESS_SETTINGS_ASSIGNMENTS = "access_settings_assignments";
  @SerializedName(SERIALIZED_NAME_ACCESS_SETTINGS_ASSIGNMENTS)
  private AccessSettingsCampaignAssignmentsList accessSettingsAssignments;

  public CampaignsCreateResponseBody() {
  }

  public CampaignsCreateResponseBody id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique campaign ID, assigned by Voucherify.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public CampaignsCreateResponseBody name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Campaign name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
  }


  public CampaignsCreateResponseBody description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * An optional field to keep any extra textual information about the campaign such as a campaign description and details.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
  }


  public CampaignsCreateResponseBody campaignType(CampaignTypeEnum campaignType) {
    
    this.campaignType = campaignType;
    return this;
  }

   /**
   * Type of campaign.
   * @return campaignType
  **/
  @javax.annotation.Nullable
  public CampaignTypeEnum getCampaignType() {
    return campaignType;
  }


  public void setCampaignType(CampaignTypeEnum campaignType) {
    this.campaignType = campaignType;
  }


  public CampaignsCreateResponseBody type(TypeEnum type) {
    
    this.type = type;
    return this;
  }

   /**
   * Defines whether the campaign can be updated with new vouchers after campaign creation.      - &#x60;AUTO_UPDATE&#x60;: the campaign is dynamic, i.e. vouchers will generate based on set criteria     -  &#x60;STATIC&#x60;: vouchers need to be manually published
   * @return type
  **/
  @javax.annotation.Nullable
  public TypeEnum getType() {
    return type;
  }


  public void setType(TypeEnum type) {
    this.type = type;
  }


  public CampaignsCreateResponseBody voucher(CampaignVoucher voucher) {
    
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @javax.annotation.Nullable
  public CampaignVoucher getVoucher() {
    return voucher;
  }


  public void setVoucher(CampaignVoucher voucher) {
    this.voucher = voucher;
  }


  public CampaignsCreateResponseBody autoJoin(Boolean autoJoin) {
    
    this.autoJoin = autoJoin;
    return this;
  }

   /**
   * Indicates whether customers will be able to auto-join a loyalty campaign if any earning rule is fulfilled.
   * @return autoJoin
  **/
  @javax.annotation.Nullable
  public Boolean getAutoJoin() {
    return autoJoin;
  }


  public void setAutoJoin(Boolean autoJoin) {
    this.autoJoin = autoJoin;
  }


  public CampaignsCreateResponseBody joinOnce(Boolean joinOnce) {
    
    this.joinOnce = joinOnce;
    return this;
  }

   /**
   * If this value is set to &#x60;true&#x60;, customers will be able to join the campaign only once.
   * @return joinOnce
  **/
  @javax.annotation.Nullable
  public Boolean getJoinOnce() {
    return joinOnce;
  }


  public void setJoinOnce(Boolean joinOnce) {
    this.joinOnce = joinOnce;
  }


  public CampaignsCreateResponseBody useVoucherMetadataSchema(Boolean useVoucherMetadataSchema) {
    
    this.useVoucherMetadataSchema = useVoucherMetadataSchema;
    return this;
  }

   /**
   * Flag indicating whether the campaign is to use the voucher&#39;s metadata schema instead of the campaign metadata schema.
   * @return useVoucherMetadataSchema
  **/
  @javax.annotation.Nullable
  public Boolean getUseVoucherMetadataSchema() {
    return useVoucherMetadataSchema;
  }


  public void setUseVoucherMetadataSchema(Boolean useVoucherMetadataSchema) {
    this.useVoucherMetadataSchema = useVoucherMetadataSchema;
  }


  public CampaignsCreateResponseBody validityTimeframe(ValidityTimeframe validityTimeframe) {
    
    this.validityTimeframe = validityTimeframe;
    return this;
  }

   /**
   * Get validityTimeframe
   * @return validityTimeframe
  **/
  @javax.annotation.Nullable
  public ValidityTimeframe getValidityTimeframe() {
    return validityTimeframe;
  }


  public void setValidityTimeframe(ValidityTimeframe validityTimeframe) {
    this.validityTimeframe = validityTimeframe;
  }


  public CampaignsCreateResponseBody validityDayOfWeek(List<ValidityDayOfWeekEnum> validityDayOfWeek) {
    
    this.validityDayOfWeek = validityDayOfWeek;
    return this;
  }

  public CampaignsCreateResponseBody addValidityDayOfWeekItem(ValidityDayOfWeekEnum validityDayOfWeekItem) {
    if (this.validityDayOfWeek == null) {
      this.validityDayOfWeek = new ArrayList<>();
    }
    this.validityDayOfWeek.add(validityDayOfWeekItem);
    return this;
  }

   /**
   * Integer array corresponding to the particular days of the week in which the voucher is valid.  - &#x60;0&#x60; Sunday - &#x60;1&#x60; Monday - &#x60;2&#x60; Tuesday - &#x60;3&#x60; Wednesday - &#x60;4&#x60; Thursday - &#x60;5&#x60; Friday - &#x60;6&#x60; Saturday
   * @return validityDayOfWeek
  **/
  @javax.annotation.Nullable
  public List<ValidityDayOfWeekEnum> getValidityDayOfWeek() {
    return validityDayOfWeek;
  }


  public void setValidityDayOfWeek(List<ValidityDayOfWeekEnum> validityDayOfWeek) {
    this.validityDayOfWeek = validityDayOfWeek;
  }


  public CampaignsCreateResponseBody validityHours(ValidityHours validityHours) {
    
    this.validityHours = validityHours;
    return this;
  }

   /**
   * Get validityHours
   * @return validityHours
  **/
  @javax.annotation.Nullable
  public ValidityHours getValidityHours() {
    return validityHours;
  }


  public void setValidityHours(ValidityHours validityHours) {
    this.validityHours = validityHours;
  }


  public CampaignsCreateResponseBody activityDurationAfterPublishing(String activityDurationAfterPublishing) {
    
    this.activityDurationAfterPublishing = activityDurationAfterPublishing;
    return this;
  }

   /**
   * Defines the amount of time the campaign will be active in ISO 8601 format after publishing. For example, a campaign with a &#x60;duration&#x60; of &#x60;P24D&#x60; will be valid for a duration of 24 days.
   * @return activityDurationAfterPublishing
  **/
  @javax.annotation.Nullable
  public String getActivityDurationAfterPublishing() {
    return activityDurationAfterPublishing;
  }


  public void setActivityDurationAfterPublishing(String activityDurationAfterPublishing) {
    this.activityDurationAfterPublishing = activityDurationAfterPublishing;
  }


  public CampaignsCreateResponseBody vouchersCount(Integer vouchersCount) {
    
    this.vouchersCount = vouchersCount;
    return this;
  }

   /**
   * Total number of unique vouchers in campaign.
   * @return vouchersCount
  **/
  @javax.annotation.Nullable
  public Integer getVouchersCount() {
    return vouchersCount;
  }


  public void setVouchersCount(Integer vouchersCount) {
    this.vouchersCount = vouchersCount;
  }


  public CampaignsCreateResponseBody startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Activation timestamp defines when the campaign starts to be active in ISO 8601 format. Campaign is *inactive before* this date. 
   * @return startDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public CampaignsCreateResponseBody expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Expiration timestamp defines when the campaign expires in ISO 8601 format.  Campaign is *inactive after* this date.
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public CampaignsCreateResponseBody active(Boolean active) {
    
    this.active = active;
    return this;
  }

   /**
   * A flag to toggle the campaign on or off. You can disable a campaign even though it&#39;s within the active period defined by the &#x60;start_date&#x60; and &#x60;expiration_date&#x60;.    - &#x60;true&#x60; indicates an *active* campaign - &#x60;false&#x60; indicates an *inactive* campaign
   * @return active
  **/
  @javax.annotation.Nullable
  public Boolean getActive() {
    return active;
  }


  public void setActive(Boolean active) {
    this.active = active;
  }


  public CampaignsCreateResponseBody metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * The metadata object stores all custom attributes assigned to the campaign. A set of key/value pairs that you can attach to a campaign object. It can be useful for storing additional information about the campaign in a structured format.
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public CampaignsCreateResponseBody createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the campaign was created. The value is shown in the ISO 8601 format.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public CampaignsCreateResponseBody updatedAt(OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the campaign was last updated in ISO 8601 format.
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public CampaignsCreateResponseBody category(String category) {
    
    this.category = category;
    return this;
  }

   /**
   * Unique category name.
   * @return category
  **/
  @javax.annotation.Nullable
  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    this.category = category;
  }


  public CampaignsCreateResponseBody creationStatus(CreationStatusEnum creationStatus) {
    
    this.creationStatus = creationStatus;
    return this;
  }

   /**
   * Indicates the status of the campaign creation.
   * @return creationStatus
  **/
  @javax.annotation.Nullable
  public CreationStatusEnum getCreationStatus() {
    return creationStatus;
  }


  public void setCreationStatus(CreationStatusEnum creationStatus) {
    this.creationStatus = creationStatus;
  }


  public CampaignsCreateResponseBody vouchersGenerationStatus(VouchersGenerationStatusEnum vouchersGenerationStatus) {
    
    this.vouchersGenerationStatus = vouchersGenerationStatus;
    return this;
  }

   /**
   * Indicates the status of the campaign&#39;s voucher generation.
   * @return vouchersGenerationStatus
  **/
  @javax.annotation.Nullable
  public VouchersGenerationStatusEnum getVouchersGenerationStatus() {
    return vouchersGenerationStatus;
  }


  public void setVouchersGenerationStatus(VouchersGenerationStatusEnum vouchersGenerationStatus) {
    this.vouchersGenerationStatus = vouchersGenerationStatus;
  }


  public CampaignsCreateResponseBody _protected(Boolean _protected) {
    
    this._protected = _protected;
    return this;
  }

   /**
   * Indicates whether the resource can be deleted.
   * @return _protected
  **/
  @javax.annotation.Nullable
  public Boolean getProtected() {
    return _protected;
  }


  public void setProtected(Boolean _protected) {
    this._protected = _protected;
  }


  public CampaignsCreateResponseBody categoryId(String categoryId) {
    
    this.categoryId = categoryId;
    return this;
  }

   /**
   * Unique category ID that this campaign belongs to.
   * @return categoryId
  **/
  @javax.annotation.Nullable
  public String getCategoryId() {
    return categoryId;
  }


  public void setCategoryId(String categoryId) {
    this.categoryId = categoryId;
  }


  public CampaignsCreateResponseBody categories(List<Category> categories) {
    
    this.categories = categories;
    return this;
  }

  public CampaignsCreateResponseBody addCategoriesItem(Category categoriesItem) {
    if (this.categories == null) {
      this.categories = new ArrayList<>();
    }
    this.categories.add(categoriesItem);
    return this;
  }

   /**
   * Contains details about the category.
   * @return categories
  **/
  @javax.annotation.Nullable
  public List<Category> getCategories() {
    return categories;
  }


  public void setCategories(List<Category> categories) {
    this.categories = categories;
  }


  public CampaignsCreateResponseBody _object(String _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The type of the object represented by JSON. This object stores information about the campaign.
   * @return _object
  **/
  @javax.annotation.Nullable
  public String getObject() {
    return _object;
  }


  public void setObject(String _object) {
    this._object = _object;
  }


  public CampaignsCreateResponseBody referralProgram(ReferralProgram referralProgram) {
    
    this.referralProgram = referralProgram;
    return this;
  }

   /**
   * Get referralProgram
   * @return referralProgram
  **/
  @javax.annotation.Nullable
  public ReferralProgram getReferralProgram() {
    return referralProgram;
  }


  public void setReferralProgram(ReferralProgram referralProgram) {
    this.referralProgram = referralProgram;
  }


  public CampaignsCreateResponseBody loyaltyTiersExpiration(LoyaltyTiersExpirationAll loyaltyTiersExpiration) {
    
    this.loyaltyTiersExpiration = loyaltyTiersExpiration;
    return this;
  }

   /**
   * Get loyaltyTiersExpiration
   * @return loyaltyTiersExpiration
  **/
  @javax.annotation.Nullable
  public LoyaltyTiersExpirationAll getLoyaltyTiersExpiration() {
    return loyaltyTiersExpiration;
  }


  public void setLoyaltyTiersExpiration(LoyaltyTiersExpirationAll loyaltyTiersExpiration) {
    this.loyaltyTiersExpiration = loyaltyTiersExpiration;
  }


  public CampaignsCreateResponseBody promotion(PromotionTiersList promotion) {
    
    this.promotion = promotion;
    return this;
  }

   /**
   * Get promotion
   * @return promotion
  **/
  @javax.annotation.Nullable
  public PromotionTiersList getPromotion() {
    return promotion;
  }


  public void setPromotion(PromotionTiersList promotion) {
    this.promotion = promotion;
  }


  public CampaignsCreateResponseBody validationRulesAssignments(ValidationRulesAssignmentsList validationRulesAssignments) {
    
    this.validationRulesAssignments = validationRulesAssignments;
    return this;
  }

   /**
   * Get validationRulesAssignments
   * @return validationRulesAssignments
  **/
  @javax.annotation.Nullable
  public ValidationRulesAssignmentsList getValidationRulesAssignments() {
    return validationRulesAssignments;
  }


  public void setValidationRulesAssignments(ValidationRulesAssignmentsList validationRulesAssignments) {
    this.validationRulesAssignments = validationRulesAssignments;
  }


  public CampaignsCreateResponseBody accessSettingsAssignments(AccessSettingsCampaignAssignmentsList accessSettingsAssignments) {
    
    this.accessSettingsAssignments = accessSettingsAssignments;
    return this;
  }

   /**
   * Get accessSettingsAssignments
   * @return accessSettingsAssignments
  **/
  @javax.annotation.Nullable
  public AccessSettingsCampaignAssignmentsList getAccessSettingsAssignments() {
    return accessSettingsAssignments;
  }


  public void setAccessSettingsAssignments(AccessSettingsCampaignAssignmentsList accessSettingsAssignments) {
    this.accessSettingsAssignments = accessSettingsAssignments;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the CampaignsCreateResponseBody instance itself
   */
  public CampaignsCreateResponseBody putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CampaignsCreateResponseBody campaignsCreateResponseBody = (CampaignsCreateResponseBody) o;
    return Objects.equals(this.id, campaignsCreateResponseBody.id) &&
        Objects.equals(this.name, campaignsCreateResponseBody.name) &&
        Objects.equals(this.description, campaignsCreateResponseBody.description) &&
        Objects.equals(this.campaignType, campaignsCreateResponseBody.campaignType) &&
        Objects.equals(this.type, campaignsCreateResponseBody.type) &&
        Objects.equals(this.voucher, campaignsCreateResponseBody.voucher) &&
        Objects.equals(this.autoJoin, campaignsCreateResponseBody.autoJoin) &&
        Objects.equals(this.joinOnce, campaignsCreateResponseBody.joinOnce) &&
        Objects.equals(this.useVoucherMetadataSchema, campaignsCreateResponseBody.useVoucherMetadataSchema) &&
        Objects.equals(this.validityTimeframe, campaignsCreateResponseBody.validityTimeframe) &&
        Objects.equals(this.validityDayOfWeek, campaignsCreateResponseBody.validityDayOfWeek) &&
        Objects.equals(this.validityHours, campaignsCreateResponseBody.validityHours) &&
        Objects.equals(this.activityDurationAfterPublishing, campaignsCreateResponseBody.activityDurationAfterPublishing) &&
        Objects.equals(this.vouchersCount, campaignsCreateResponseBody.vouchersCount) &&
        Objects.equals(this.startDate, campaignsCreateResponseBody.startDate) &&
        Objects.equals(this.expirationDate, campaignsCreateResponseBody.expirationDate) &&
        Objects.equals(this.active, campaignsCreateResponseBody.active) &&
        Objects.equals(this.metadata, campaignsCreateResponseBody.metadata) &&
        Objects.equals(this.createdAt, campaignsCreateResponseBody.createdAt) &&
        Objects.equals(this.updatedAt, campaignsCreateResponseBody.updatedAt) &&
        Objects.equals(this.category, campaignsCreateResponseBody.category) &&
        Objects.equals(this.creationStatus, campaignsCreateResponseBody.creationStatus) &&
        Objects.equals(this.vouchersGenerationStatus, campaignsCreateResponseBody.vouchersGenerationStatus) &&
        Objects.equals(this._protected, campaignsCreateResponseBody._protected) &&
        Objects.equals(this.categoryId, campaignsCreateResponseBody.categoryId) &&
        Objects.equals(this.categories, campaignsCreateResponseBody.categories) &&
        Objects.equals(this._object, campaignsCreateResponseBody._object) &&
        Objects.equals(this.referralProgram, campaignsCreateResponseBody.referralProgram) &&
        Objects.equals(this.loyaltyTiersExpiration, campaignsCreateResponseBody.loyaltyTiersExpiration) &&
        Objects.equals(this.promotion, campaignsCreateResponseBody.promotion) &&
        Objects.equals(this.validationRulesAssignments, campaignsCreateResponseBody.validationRulesAssignments) &&
        Objects.equals(this.accessSettingsAssignments, campaignsCreateResponseBody.accessSettingsAssignments)&&
        Objects.equals(this.additionalProperties, campaignsCreateResponseBody.additionalProperties);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, description, campaignType, type, voucher, autoJoin, joinOnce, useVoucherMetadataSchema, validityTimeframe, validityDayOfWeek, validityHours, activityDurationAfterPublishing, vouchersCount, startDate, expirationDate, active, metadata, createdAt, updatedAt, category, creationStatus, vouchersGenerationStatus, _protected, categoryId, categories, _object, referralProgram, loyaltyTiersExpiration, promotion, validationRulesAssignments, accessSettingsAssignments, additionalProperties);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CampaignsCreateResponseBody {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    campaignType: ").append(toIndentedString(campaignType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    autoJoin: ").append(toIndentedString(autoJoin)).append("\n");
    sb.append("    joinOnce: ").append(toIndentedString(joinOnce)).append("\n");
    sb.append("    useVoucherMetadataSchema: ").append(toIndentedString(useVoucherMetadataSchema)).append("\n");
    sb.append("    validityTimeframe: ").append(toIndentedString(validityTimeframe)).append("\n");
    sb.append("    validityDayOfWeek: ").append(toIndentedString(validityDayOfWeek)).append("\n");
    sb.append("    validityHours: ").append(toIndentedString(validityHours)).append("\n");
    sb.append("    activityDurationAfterPublishing: ").append(toIndentedString(activityDurationAfterPublishing)).append("\n");
    sb.append("    vouchersCount: ").append(toIndentedString(vouchersCount)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    active: ").append(toIndentedString(active)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    creationStatus: ").append(toIndentedString(creationStatus)).append("\n");
    sb.append("    vouchersGenerationStatus: ").append(toIndentedString(vouchersGenerationStatus)).append("\n");
    sb.append("    _protected: ").append(toIndentedString(_protected)).append("\n");
    sb.append("    categoryId: ").append(toIndentedString(categoryId)).append("\n");
    sb.append("    categories: ").append(toIndentedString(categories)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    referralProgram: ").append(toIndentedString(referralProgram)).append("\n");
    sb.append("    loyaltyTiersExpiration: ").append(toIndentedString(loyaltyTiersExpiration)).append("\n");
    sb.append("    promotion: ").append(toIndentedString(promotion)).append("\n");
    sb.append("    validationRulesAssignments: ").append(toIndentedString(validationRulesAssignments)).append("\n");
    sb.append("    accessSettingsAssignments: ").append(toIndentedString(accessSettingsAssignments)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("campaign_type");
    openapiFields.add("type");
    openapiFields.add("voucher");
    openapiFields.add("auto_join");
    openapiFields.add("join_once");
    openapiFields.add("use_voucher_metadata_schema");
    openapiFields.add("validity_timeframe");
    openapiFields.add("validity_day_of_week");
    openapiFields.add("validity_hours");
    openapiFields.add("activity_duration_after_publishing");
    openapiFields.add("vouchers_count");
    openapiFields.add("start_date");
    openapiFields.add("expiration_date");
    openapiFields.add("active");
    openapiFields.add("metadata");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");
    openapiFields.add("category");
    openapiFields.add("creation_status");
    openapiFields.add("vouchers_generation_status");
    openapiFields.add("protected");
    openapiFields.add("category_id");
    openapiFields.add("categories");
    openapiFields.add("object");
    openapiFields.add("referral_program");
    openapiFields.add("loyalty_tiers_expiration");
    openapiFields.add("promotion");
    openapiFields.add("validation_rules_assignments");
    openapiFields.add("access_settings_assignments");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CampaignsCreateResponseBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CampaignsCreateResponseBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CampaignsCreateResponseBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CampaignsCreateResponseBody.class));

       return (TypeAdapter<T>) new TypeAdapter<CampaignsCreateResponseBody>() {
           @Override
           public void write(JsonWriter out, CampaignsCreateResponseBody value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additional properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public CampaignsCreateResponseBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             JsonObject jsonObj = jsonElement.getAsJsonObject();
             // store additional fields in the deserialized instance
             CampaignsCreateResponseBody instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     return null;
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CampaignsCreateResponseBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CampaignsCreateResponseBody
  * @throws IOException if the JSON string is invalid with respect to CampaignsCreateResponseBody
  */
  public static CampaignsCreateResponseBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CampaignsCreateResponseBody.class);
  }

 /**
  * Convert an instance of CampaignsCreateResponseBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

