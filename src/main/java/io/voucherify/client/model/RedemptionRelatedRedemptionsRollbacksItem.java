/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * RedemptionRelatedRedemptionsRollbacksItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RedemptionRelatedRedemptionsRollbacksItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_DATE = "date";
  @SerializedName(SERIALIZED_NAME_DATE)
  private OffsetDateTime date;

  /**
   * Defines the rollback mode for the order. &#x60;WITH_ORDER&#x60; is a default setting. The redemption is rolled back together with the data about the order, including related discount values. &#x60;WITHOUT_ORDER&#x60; allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET &#x60;v1/redemptions/&#x60; and GET &#x60;v1/redemptions/{redemptionId}&#x60; endpoints.
   */
  @JsonAdapter(RollbackOrderModeEnum.Adapter.class)
  public enum RollbackOrderModeEnum {
    WITH_ORDER("WITH_ORDER"),
    
    WITHOUT_ORDER("WITHOUT_ORDER");

    private String value;

    RollbackOrderModeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RollbackOrderModeEnum fromValue(String value) {
      for (RollbackOrderModeEnum b : RollbackOrderModeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<RollbackOrderModeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RollbackOrderModeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RollbackOrderModeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RollbackOrderModeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ROLLBACK_ORDER_MODE = "rollback_order_mode";
  @SerializedName(SERIALIZED_NAME_ROLLBACK_ORDER_MODE)
  private RollbackOrderModeEnum rollbackOrderMode;

  public RedemptionRelatedRedemptionsRollbacksItem() {
  }

  public RedemptionRelatedRedemptionsRollbacksItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique rollback redemption ID.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RedemptionRelatedRedemptionsRollbacksItem date(OffsetDateTime date) {
    
    this.date = date;
    return this;
  }

   /**
   * Timestamp representing the date and time when the object was created. The value is shown in the ISO 8601 format.
   * @return date
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getDate() {
    return date;
  }


  public void setDate(OffsetDateTime date) {
    this.date = date;
  }


  public RedemptionRelatedRedemptionsRollbacksItem rollbackOrderMode(RollbackOrderModeEnum rollbackOrderMode) {
    
    this.rollbackOrderMode = rollbackOrderMode;
    return this;
  }

   /**
   * Defines the rollback mode for the order. &#x60;WITH_ORDER&#x60; is a default setting. The redemption is rolled back together with the data about the order, including related discount values. &#x60;WITHOUT_ORDER&#x60; allows rolling the redemption back without affecting order data, including the applied discount values. This is returned only in GET &#x60;v1/redemptions/&#x60; and GET &#x60;v1/redemptions/{redemptionId}&#x60; endpoints.
   * @return rollbackOrderMode
  **/
  @javax.annotation.Nullable
  public RollbackOrderModeEnum getRollbackOrderMode() {
    return rollbackOrderMode;
  }


  public void setRollbackOrderMode(RollbackOrderModeEnum rollbackOrderMode) {
    this.rollbackOrderMode = rollbackOrderMode;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedemptionRelatedRedemptionsRollbacksItem redemptionRelatedRedemptionsRollbacksItem = (RedemptionRelatedRedemptionsRollbacksItem) o;
    return Objects.equals(this.id, redemptionRelatedRedemptionsRollbacksItem.id) &&
        Objects.equals(this.date, redemptionRelatedRedemptionsRollbacksItem.date) &&
        Objects.equals(this.rollbackOrderMode, redemptionRelatedRedemptionsRollbacksItem.rollbackOrderMode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, date, rollbackOrderMode);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedemptionRelatedRedemptionsRollbacksItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    rollbackOrderMode: ").append(toIndentedString(rollbackOrderMode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("date");
    openapiFields.add("rollback_order_mode");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RedemptionRelatedRedemptionsRollbacksItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RedemptionRelatedRedemptionsRollbacksItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RedemptionRelatedRedemptionsRollbacksItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RedemptionRelatedRedemptionsRollbacksItem.class));

       return (TypeAdapter<T>) new TypeAdapter<RedemptionRelatedRedemptionsRollbacksItem>() {
           @Override
           public void write(JsonWriter out, RedemptionRelatedRedemptionsRollbacksItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RedemptionRelatedRedemptionsRollbacksItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RedemptionRelatedRedemptionsRollbacksItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RedemptionRelatedRedemptionsRollbacksItem
  * @throws IOException if the JSON string is invalid with respect to RedemptionRelatedRedemptionsRollbacksItem
  */
  public static RedemptionRelatedRedemptionsRollbacksItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RedemptionRelatedRedemptionsRollbacksItem.class);
  }

 /**
  * Convert an instance of RedemptionRelatedRedemptionsRollbacksItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

