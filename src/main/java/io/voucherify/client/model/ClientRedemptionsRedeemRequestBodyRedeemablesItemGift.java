/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Contains information on the number of gift card credits that the customer wants to apply to the order.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ClientRedemptionsRedeemRequestBodyRedeemablesItemGift {
  public static final String SERIALIZED_NAME_CREDITS = "credits";
  @SerializedName(SERIALIZED_NAME_CREDITS)
  private Integer credits;

  public ClientRedemptionsRedeemRequestBodyRedeemablesItemGift() {
  }

  public ClientRedemptionsRedeemRequestBodyRedeemablesItemGift credits(Integer credits) {
    
    this.credits = credits;
    return this;
  }

   /**
   * The number of credits that the user wants to use from the gift card to fulfill the order. The value of credits cannot be higher than the current balance on the gift card. The value is multiplied by 100 to represent 2 decimal places. For example &#x60;10000 cents&#x60; for &#x60;$100.00&#x60;.
   * @return credits
  **/
  @javax.annotation.Nullable
  public Integer getCredits() {
    return credits;
  }


  public void setCredits(Integer credits) {
    this.credits = credits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ClientRedemptionsRedeemRequestBodyRedeemablesItemGift clientRedemptionsRedeemRequestBodyRedeemablesItemGift = (ClientRedemptionsRedeemRequestBodyRedeemablesItemGift) o;
    return Objects.equals(this.credits, clientRedemptionsRedeemRequestBodyRedeemablesItemGift.credits);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(credits);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ClientRedemptionsRedeemRequestBodyRedeemablesItemGift {\n");
    sb.append("    credits: ").append(toIndentedString(credits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("credits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ClientRedemptionsRedeemRequestBodyRedeemablesItemGift.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ClientRedemptionsRedeemRequestBodyRedeemablesItemGift' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ClientRedemptionsRedeemRequestBodyRedeemablesItemGift> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ClientRedemptionsRedeemRequestBodyRedeemablesItemGift.class));

       return (TypeAdapter<T>) new TypeAdapter<ClientRedemptionsRedeemRequestBodyRedeemablesItemGift>() {
           @Override
           public void write(JsonWriter out, ClientRedemptionsRedeemRequestBodyRedeemablesItemGift value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ClientRedemptionsRedeemRequestBodyRedeemablesItemGift read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ClientRedemptionsRedeemRequestBodyRedeemablesItemGift given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ClientRedemptionsRedeemRequestBodyRedeemablesItemGift
  * @throws IOException if the JSON string is invalid with respect to ClientRedemptionsRedeemRequestBodyRedeemablesItemGift
  */
  public static ClientRedemptionsRedeemRequestBodyRedeemablesItemGift fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ClientRedemptionsRedeemRequestBodyRedeemablesItemGift.class);
  }

 /**
  * Convert an instance of ClientRedemptionsRedeemRequestBodyRedeemablesItemGift to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

