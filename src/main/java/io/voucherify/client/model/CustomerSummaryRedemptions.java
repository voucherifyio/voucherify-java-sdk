/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.CustomerSummaryRedemptionsGift;
import io.voucherify.client.model.CustomerSummaryRedemptionsLoyaltyCard;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * CustomerSummaryRedemptions
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CustomerSummaryRedemptions {
  public static final String SERIALIZED_NAME_TOTAL_REDEEMED = "total_redeemed";
  @SerializedName(SERIALIZED_NAME_TOTAL_REDEEMED)
  private Integer totalRedeemed;
    private boolean totalRedeemedIsSet = false;

  public static final String SERIALIZED_NAME_TOTAL_FAILED = "total_failed";
  @SerializedName(SERIALIZED_NAME_TOTAL_FAILED)
  private Integer totalFailed;
    private boolean totalFailedIsSet = false;

  public static final String SERIALIZED_NAME_TOTAL_SUCCEEDED = "total_succeeded";
  @SerializedName(SERIALIZED_NAME_TOTAL_SUCCEEDED)
  private Integer totalSucceeded;
    private boolean totalSucceededIsSet = false;

  public static final String SERIALIZED_NAME_TOTAL_ROLLED_BACK = "total_rolled_back";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROLLED_BACK)
  private Integer totalRolledBack;
    private boolean totalRolledBackIsSet = false;

  public static final String SERIALIZED_NAME_TOTAL_ROLLBACK_FAILED = "total_rollback_failed";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROLLBACK_FAILED)
  private Integer totalRollbackFailed;
    private boolean totalRollbackFailedIsSet = false;

  public static final String SERIALIZED_NAME_TOTAL_ROLLBACK_SUCCEEDED = "total_rollback_succeeded";
  @SerializedName(SERIALIZED_NAME_TOTAL_ROLLBACK_SUCCEEDED)
  private Integer totalRollbackSucceeded;
    private boolean totalRollbackSucceededIsSet = false;

  public static final String SERIALIZED_NAME_GIFT = "gift";
  @SerializedName(SERIALIZED_NAME_GIFT)
  private CustomerSummaryRedemptionsGift gift;
    private boolean giftIsSet = false;

  public static final String SERIALIZED_NAME_LOYALTY_CARD = "loyalty_card";
  @SerializedName(SERIALIZED_NAME_LOYALTY_CARD)
  private CustomerSummaryRedemptionsLoyaltyCard loyaltyCard;
    private boolean loyaltyCardIsSet = false;

  public CustomerSummaryRedemptions() {
  }

  public CustomerSummaryRedemptions totalRedeemed(Integer totalRedeemed) {
    
    this.totalRedeemed = totalRedeemed;
    return this;
  }

   /**
   * Total number of redemptions made by the customer.
   * @return totalRedeemed
  **/
  @javax.annotation.Nullable
  public Integer getTotalRedeemed() {
    return totalRedeemed;
  }


  public void setTotalRedeemed(Integer totalRedeemed) {
    this.totalRedeemed = totalRedeemed;
    this.totalRedeemedIsSet = true;
  }
  public boolean isTotalRedeemedSet() {
    return totalRedeemedIsSet;
  }


  public CustomerSummaryRedemptions totalFailed(Integer totalFailed) {
    
    this.totalFailed = totalFailed;
    return this;
  }

   /**
   * Total number of redemptions that failed.
   * @return totalFailed
  **/
  @javax.annotation.Nullable
  public Integer getTotalFailed() {
    return totalFailed;
  }


  public void setTotalFailed(Integer totalFailed) {
    this.totalFailed = totalFailed;
    this.totalFailedIsSet = true;
  }
  public boolean isTotalFailedSet() {
    return totalFailedIsSet;
  }


  public CustomerSummaryRedemptions totalSucceeded(Integer totalSucceeded) {
    
    this.totalSucceeded = totalSucceeded;
    return this;
  }

   /**
   * Total number of redemptions that succeeded.
   * @return totalSucceeded
  **/
  @javax.annotation.Nullable
  public Integer getTotalSucceeded() {
    return totalSucceeded;
  }


  public void setTotalSucceeded(Integer totalSucceeded) {
    this.totalSucceeded = totalSucceeded;
    this.totalSucceededIsSet = true;
  }
  public boolean isTotalSucceededSet() {
    return totalSucceededIsSet;
  }


  public CustomerSummaryRedemptions totalRolledBack(Integer totalRolledBack) {
    
    this.totalRolledBack = totalRolledBack;
    return this;
  }

   /**
   * Total number of redemptions that were rolled back for the customer.
   * @return totalRolledBack
  **/
  @javax.annotation.Nullable
  public Integer getTotalRolledBack() {
    return totalRolledBack;
  }


  public void setTotalRolledBack(Integer totalRolledBack) {
    this.totalRolledBack = totalRolledBack;
    this.totalRolledBackIsSet = true;
  }
  public boolean isTotalRolledBackSet() {
    return totalRolledBackIsSet;
  }


  public CustomerSummaryRedemptions totalRollbackFailed(Integer totalRollbackFailed) {
    
    this.totalRollbackFailed = totalRollbackFailed;
    return this;
  }

   /**
   * Total number of redemption rollbacks that failed.
   * @return totalRollbackFailed
  **/
  @javax.annotation.Nullable
  public Integer getTotalRollbackFailed() {
    return totalRollbackFailed;
  }


  public void setTotalRollbackFailed(Integer totalRollbackFailed) {
    this.totalRollbackFailed = totalRollbackFailed;
    this.totalRollbackFailedIsSet = true;
  }
  public boolean isTotalRollbackFailedSet() {
    return totalRollbackFailedIsSet;
  }


  public CustomerSummaryRedemptions totalRollbackSucceeded(Integer totalRollbackSucceeded) {
    
    this.totalRollbackSucceeded = totalRollbackSucceeded;
    return this;
  }

   /**
   * Total number of redemption rollbacks that succeeded.
   * @return totalRollbackSucceeded
  **/
  @javax.annotation.Nullable
  public Integer getTotalRollbackSucceeded() {
    return totalRollbackSucceeded;
  }


  public void setTotalRollbackSucceeded(Integer totalRollbackSucceeded) {
    this.totalRollbackSucceeded = totalRollbackSucceeded;
    this.totalRollbackSucceededIsSet = true;
  }
  public boolean isTotalRollbackSucceededSet() {
    return totalRollbackSucceededIsSet;
  }


  public CustomerSummaryRedemptions gift(CustomerSummaryRedemptionsGift gift) {
    
    this.gift = gift;
    return this;
  }

   /**
   * Get gift
   * @return gift
  **/
  @javax.annotation.Nullable
  public CustomerSummaryRedemptionsGift getGift() {
    return gift;
  }


  public void setGift(CustomerSummaryRedemptionsGift gift) {
    this.gift = gift;
    this.giftIsSet = true;
  }
  public boolean isGiftSet() {
    return giftIsSet;
  }


  public CustomerSummaryRedemptions loyaltyCard(CustomerSummaryRedemptionsLoyaltyCard loyaltyCard) {
    
    this.loyaltyCard = loyaltyCard;
    return this;
  }

   /**
   * Get loyaltyCard
   * @return loyaltyCard
  **/
  @javax.annotation.Nullable
  public CustomerSummaryRedemptionsLoyaltyCard getLoyaltyCard() {
    return loyaltyCard;
  }


  public void setLoyaltyCard(CustomerSummaryRedemptionsLoyaltyCard loyaltyCard) {
    this.loyaltyCard = loyaltyCard;
    this.loyaltyCardIsSet = true;
  }
  public boolean isLoyaltyCardSet() {
    return loyaltyCardIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomerSummaryRedemptions customerSummaryRedemptions = (CustomerSummaryRedemptions) o;
    return Objects.equals(this.totalRedeemed, customerSummaryRedemptions.totalRedeemed) &&
        Objects.equals(this.totalFailed, customerSummaryRedemptions.totalFailed) &&
        Objects.equals(this.totalSucceeded, customerSummaryRedemptions.totalSucceeded) &&
        Objects.equals(this.totalRolledBack, customerSummaryRedemptions.totalRolledBack) &&
        Objects.equals(this.totalRollbackFailed, customerSummaryRedemptions.totalRollbackFailed) &&
        Objects.equals(this.totalRollbackSucceeded, customerSummaryRedemptions.totalRollbackSucceeded) &&
        Objects.equals(this.gift, customerSummaryRedemptions.gift) &&
        Objects.equals(this.loyaltyCard, customerSummaryRedemptions.loyaltyCard);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalRedeemed, totalFailed, totalSucceeded, totalRolledBack, totalRollbackFailed, totalRollbackSucceeded, gift, loyaltyCard);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomerSummaryRedemptions {\n");
    sb.append("    totalRedeemed: ").append(toIndentedString(totalRedeemed)).append("\n");
    sb.append("    totalFailed: ").append(toIndentedString(totalFailed)).append("\n");
    sb.append("    totalSucceeded: ").append(toIndentedString(totalSucceeded)).append("\n");
    sb.append("    totalRolledBack: ").append(toIndentedString(totalRolledBack)).append("\n");
    sb.append("    totalRollbackFailed: ").append(toIndentedString(totalRollbackFailed)).append("\n");
    sb.append("    totalRollbackSucceeded: ").append(toIndentedString(totalRollbackSucceeded)).append("\n");
    sb.append("    gift: ").append(toIndentedString(gift)).append("\n");
    sb.append("    loyaltyCard: ").append(toIndentedString(loyaltyCard)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("total_redeemed");
    openapiFields.add("total_failed");
    openapiFields.add("total_succeeded");
    openapiFields.add("total_rolled_back");
    openapiFields.add("total_rollback_failed");
    openapiFields.add("total_rollback_succeeded");
    openapiFields.add("gift");
    openapiFields.add("loyalty_card");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomerSummaryRedemptions.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomerSummaryRedemptions' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomerSummaryRedemptions> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomerSummaryRedemptions.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomerSummaryRedemptions>() {
           @Override
           public void write(JsonWriter out, CustomerSummaryRedemptions value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : CustomerSummaryRedemptions.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = CustomerSummaryRedemptions.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public CustomerSummaryRedemptions read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomerSummaryRedemptions given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomerSummaryRedemptions
  * @throws IOException if the JSON string is invalid with respect to CustomerSummaryRedemptions
  */
  public static CustomerSummaryRedemptions fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomerSummaryRedemptions.class);
  }

 /**
  * Convert an instance of CustomerSummaryRedemptions to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

