/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.ApplicationDetailsItem;
import io.voucherify.client.model.OrderCalculatedItemProduct;
import io.voucherify.client.model.OrderCalculatedItemSku;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_SKU_ID = "sku_id";
  @SerializedName(SERIALIZED_NAME_SKU_ID)
  private String skuId;

  public static final String SERIALIZED_NAME_PRODUCT_ID = "product_id";
  @SerializedName(SERIALIZED_NAME_PRODUCT_ID)
  private String productId;

  /**
   * Used along with the source_id property, can be set to either sku or product.
   */
  @JsonAdapter(RelatedObjectEnum.Adapter.class)
  public enum RelatedObjectEnum {
    PRODUCT("product"),
    
    SKU("sku");

    private String value;

    RelatedObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static RelatedObjectEnum fromValue(String value) {
      for (RelatedObjectEnum b : RelatedObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<RelatedObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final RelatedObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public RelatedObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return RelatedObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_RELATED_OBJECT = "related_object";
  @SerializedName(SERIALIZED_NAME_RELATED_OBJECT)
  private RelatedObjectEnum relatedObject;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;

  public static final String SERIALIZED_NAME_QUANTITY = "quantity";
  @SerializedName(SERIALIZED_NAME_QUANTITY)
  private Integer quantity;

  public static final String SERIALIZED_NAME_DISCOUNT_QUANTITY = "discount_quantity";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_QUANTITY)
  private Integer discountQuantity;

  public static final String SERIALIZED_NAME_INITIAL_QUANTITY = "initial_quantity";
  @SerializedName(SERIALIZED_NAME_INITIAL_QUANTITY)
  private Integer initialQuantity;

  public static final String SERIALIZED_NAME_AMOUNT = "amount";
  @SerializedName(SERIALIZED_NAME_AMOUNT)
  private Integer amount;

  public static final String SERIALIZED_NAME_DISCOUNT_AMOUNT = "discount_amount";
  @SerializedName(SERIALIZED_NAME_DISCOUNT_AMOUNT)
  private Integer discountAmount;

  public static final String SERIALIZED_NAME_APPLIED_DISCOUNT_AMOUNT = "applied_discount_amount";
  @SerializedName(SERIALIZED_NAME_APPLIED_DISCOUNT_AMOUNT)
  private Integer appliedDiscountAmount;

  public static final String SERIALIZED_NAME_APPLIED_DISCOUNT_QUANTITY = "applied_discount_quantity";
  @SerializedName(SERIALIZED_NAME_APPLIED_DISCOUNT_QUANTITY)
  private Integer appliedDiscountQuantity;

  public static final String SERIALIZED_NAME_APPLIED_QUANTITY = "applied_quantity";
  @SerializedName(SERIALIZED_NAME_APPLIED_QUANTITY)
  private Integer appliedQuantity;

  public static final String SERIALIZED_NAME_APPLIED_QUANTITY_AMOUNT = "applied_quantity_amount";
  @SerializedName(SERIALIZED_NAME_APPLIED_QUANTITY_AMOUNT)
  private Integer appliedQuantityAmount;

  public static final String SERIALIZED_NAME_INITIAL_AMOUNT = "initial_amount";
  @SerializedName(SERIALIZED_NAME_INITIAL_AMOUNT)
  private Integer initialAmount;

  public static final String SERIALIZED_NAME_PRICE = "price";
  @SerializedName(SERIALIZED_NAME_PRICE)
  private Integer price;

  public static final String SERIALIZED_NAME_SUBTOTAL_AMOUNT = "subtotal_amount";
  @SerializedName(SERIALIZED_NAME_SUBTOTAL_AMOUNT)
  private Integer subtotalAmount;

  public static final String SERIALIZED_NAME_PRODUCT = "product";
  @SerializedName(SERIALIZED_NAME_PRODUCT)
  private OrderCalculatedItemProduct product;

  public static final String SERIALIZED_NAME_SKU = "sku";
  @SerializedName(SERIALIZED_NAME_SKU)
  private OrderCalculatedItemSku sku;

  /**
   * The type of the object represented by JSON.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    ORDER_ITEM("order_item");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private ObjectEnum _object = ObjectEnum.ORDER_ITEM;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  public static final String SERIALIZED_NAME_APPLICATION_DETAILS = "application_details";
  @SerializedName(SERIALIZED_NAME_APPLICATION_DETAILS)
  private List<ApplicationDetailsItem> applicationDetails;

  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem() {
  }

  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the order line item.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem skuId(String skuId) {
    
    this.skuId = skuId;
    return this;
  }

   /**
   * Unique identifier of the SKU. It is assigned by Voucherify.
   * @return skuId
  **/
  @javax.annotation.Nullable
  public String getSkuId() {
    return skuId;
  }


  public void setSkuId(String skuId) {
    this.skuId = skuId;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem productId(String productId) {
    
    this.productId = productId;
    return this;
  }

   /**
   * Unique identifier of the product. It is assigned by Voucherify.
   * @return productId
  **/
  @javax.annotation.Nullable
  public String getProductId() {
    return productId;
  }


  public void setProductId(String productId) {
    this.productId = productId;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem relatedObject(RelatedObjectEnum relatedObject) {
    
    this.relatedObject = relatedObject;
    return this;
  }

   /**
   * Used along with the source_id property, can be set to either sku or product.
   * @return relatedObject
  **/
  @javax.annotation.Nullable
  public RelatedObjectEnum getRelatedObject() {
    return relatedObject;
  }


  public void setRelatedObject(RelatedObjectEnum relatedObject) {
    this.relatedObject = relatedObject;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * The merchant&#39;s product/SKU ID (if it is different from the Voucherify product/SKU ID). It is useful in the integration between multiple systems. It can be an ID from an eCommerce site, a database, or a third-party service.
   * @return sourceId
  **/
  @javax.annotation.Nullable
  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem quantity(Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

   /**
   * The quantity of the particular item in the cart.
   * @return quantity
  **/
  @javax.annotation.Nullable
  public Integer getQuantity() {
    return quantity;
  }


  public void setQuantity(Integer quantity) {
    this.quantity = quantity;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem discountQuantity(Integer discountQuantity) {
    
    this.discountQuantity = discountQuantity;
    return this;
  }

   /**
   * Number of dicounted items.
   * @return discountQuantity
  **/
  @javax.annotation.Nullable
  public Integer getDiscountQuantity() {
    return discountQuantity;
  }


  public void setDiscountQuantity(Integer discountQuantity) {
    this.discountQuantity = discountQuantity;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem initialQuantity(Integer initialQuantity) {
    
    this.initialQuantity = initialQuantity;
    return this;
  }

   /**
   * A positive integer in the smallest unit quantity representing the total amount of the order; this is the sum of the order items&#39; quantity.
   * @return initialQuantity
  **/
  @javax.annotation.Nullable
  public Integer getInitialQuantity() {
    return initialQuantity;
  }


  public void setInitialQuantity(Integer initialQuantity) {
    this.initialQuantity = initialQuantity;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem amount(Integer amount) {
    
    this.amount = amount;
    return this;
  }

   /**
   * The total amount of the order item (price * quantity).
   * @return amount
  **/
  @javax.annotation.Nullable
  public Integer getAmount() {
    return amount;
  }


  public void setAmount(Integer amount) {
    this.amount = amount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem discountAmount(Integer discountAmount) {
    
    this.discountAmount = discountAmount;
    return this;
  }

   /**
   * Sum of all order-item-level discounts applied to the order.
   * @return discountAmount
  **/
  @javax.annotation.Nullable
  public Integer getDiscountAmount() {
    return discountAmount;
  }


  public void setDiscountAmount(Integer discountAmount) {
    this.discountAmount = discountAmount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem appliedDiscountAmount(Integer appliedDiscountAmount) {
    
    this.appliedDiscountAmount = appliedDiscountAmount;
    return this;
  }

   /**
   * This field shows the order-level discount applied.
   * @return appliedDiscountAmount
  **/
  @javax.annotation.Nullable
  public Integer getAppliedDiscountAmount() {
    return appliedDiscountAmount;
  }


  public void setAppliedDiscountAmount(Integer appliedDiscountAmount) {
    this.appliedDiscountAmount = appliedDiscountAmount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem appliedDiscountQuantity(Integer appliedDiscountQuantity) {
    
    this.appliedDiscountQuantity = appliedDiscountQuantity;
    return this;
  }

   /**
   * Number of the discounted items applied in the transaction.
   * @return appliedDiscountQuantity
  **/
  @javax.annotation.Nullable
  public Integer getAppliedDiscountQuantity() {
    return appliedDiscountQuantity;
  }


  public void setAppliedDiscountQuantity(Integer appliedDiscountQuantity) {
    this.appliedDiscountQuantity = appliedDiscountQuantity;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem appliedQuantity(Integer appliedQuantity) {
    
    this.appliedQuantity = appliedQuantity;
    return this;
  }

   /**
   * Quantity of items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
   * @return appliedQuantity
  **/
  @javax.annotation.Nullable
  public Integer getAppliedQuantity() {
    return appliedQuantity;
  }


  public void setAppliedQuantity(Integer appliedQuantity) {
    this.appliedQuantity = appliedQuantity;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem appliedQuantityAmount(Integer appliedQuantityAmount) {
    
    this.appliedQuantityAmount = appliedQuantityAmount;
    return this;
  }

   /**
   * Amount for the items changed by the application of a new quantity items. It can be positive when an item is added or negative if an item is replaced.
   * @return appliedQuantityAmount
  **/
  @javax.annotation.Nullable
  public Integer getAppliedQuantityAmount() {
    return appliedQuantityAmount;
  }


  public void setAppliedQuantityAmount(Integer appliedQuantityAmount) {
    this.appliedQuantityAmount = appliedQuantityAmount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem initialAmount(Integer initialAmount) {
    
    this.initialAmount = initialAmount;
    return this;
  }

   /**
   * A positive integer in the smallest currency unit (e.g. 100 cents for $1.00) representing the total amount of the order. This is the sum of the order items&#39; amounts.
   * @return initialAmount
  **/
  @javax.annotation.Nullable
  public Integer getInitialAmount() {
    return initialAmount;
  }


  public void setInitialAmount(Integer initialAmount) {
    this.initialAmount = initialAmount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem price(Integer price) {
    
    this.price = price;
    return this;
  }

   /**
   * Unit price of an item. The value is multiplied by 100 to represent 2 decimal places. For example &#x60;10000 cents&#x60; for &#x60;$100.00&#x60;.
   * @return price
  **/
  @javax.annotation.Nullable
  public Integer getPrice() {
    return price;
  }


  public void setPrice(Integer price) {
    this.price = price;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem subtotalAmount(Integer subtotalAmount) {
    
    this.subtotalAmount = subtotalAmount;
    return this;
  }

   /**
   * Final order item amount after the applied item-level discount.  If there are no item-level discounts applied, this item is equal to the &#x60;amount&#x60;.    &#x60;subtotal_amount&#x60;&#x3D;&#x60;amount&#x60;-&#x60;applied_discount_amount&#x60;
   * @return subtotalAmount
  **/
  @javax.annotation.Nullable
  public Integer getSubtotalAmount() {
    return subtotalAmount;
  }


  public void setSubtotalAmount(Integer subtotalAmount) {
    this.subtotalAmount = subtotalAmount;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem product(OrderCalculatedItemProduct product) {
    
    this.product = product;
    return this;
  }

   /**
   * Get product
   * @return product
  **/
  @javax.annotation.Nullable
  public OrderCalculatedItemProduct getProduct() {
    return product;
  }


  public void setProduct(OrderCalculatedItemProduct product) {
    this.product = product;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem sku(OrderCalculatedItemSku sku) {
    
    this.sku = sku;
    return this;
  }

   /**
   * Get sku
   * @return sku
  **/
  @javax.annotation.Nullable
  public OrderCalculatedItemSku getSku() {
    return sku;
  }


  public void setSku(OrderCalculatedItemSku sku) {
    this.sku = sku;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem _object(ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The type of the object represented by JSON.
   * @return _object
  **/
  @javax.annotation.Nullable
  public ObjectEnum getObject() {
    return _object;
  }


  public void setObject(ObjectEnum _object) {
    this._object = _object;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * A set of custom key/value pairs that you can attach to an item object. It can be useful for storing additional information about the item in a structured format. It can be used to define business validation rules or discount formulas.
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem applicationDetails(List<ApplicationDetailsItem> applicationDetails) {
    
    this.applicationDetails = applicationDetails;
    return this;
  }

  public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem addApplicationDetailsItem(ApplicationDetailsItem applicationDetailsItem) {
    if (this.applicationDetails == null) {
      this.applicationDetails = new ArrayList<>();
    }
    this.applicationDetails.add(applicationDetailsItem);
    return this;
  }

   /**
   * Array containing details about the items that are replaced and the items that are replacements for discounts with the &#x60;REPLACE_ITEMS&#x60; effect.
   * @return applicationDetails
  **/
  @javax.annotation.Nullable
  public List<ApplicationDetailsItem> getApplicationDetails() {
    return applicationDetails;
  }


  public void setApplicationDetails(List<ApplicationDetailsItem> applicationDetails) {
    this.applicationDetails = applicationDetails;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem = (LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem) o;
    return Objects.equals(this.id, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.id) &&
        Objects.equals(this.skuId, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.skuId) &&
        Objects.equals(this.productId, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.productId) &&
        Objects.equals(this.relatedObject, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.relatedObject) &&
        Objects.equals(this.sourceId, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.sourceId) &&
        Objects.equals(this.quantity, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.quantity) &&
        Objects.equals(this.discountQuantity, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.discountQuantity) &&
        Objects.equals(this.initialQuantity, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.initialQuantity) &&
        Objects.equals(this.amount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.amount) &&
        Objects.equals(this.discountAmount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.discountAmount) &&
        Objects.equals(this.appliedDiscountAmount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.appliedDiscountAmount) &&
        Objects.equals(this.appliedDiscountQuantity, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.appliedDiscountQuantity) &&
        Objects.equals(this.appliedQuantity, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.appliedQuantity) &&
        Objects.equals(this.appliedQuantityAmount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.appliedQuantityAmount) &&
        Objects.equals(this.initialAmount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.initialAmount) &&
        Objects.equals(this.price, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.price) &&
        Objects.equals(this.subtotalAmount, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.subtotalAmount) &&
        Objects.equals(this.product, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.product) &&
        Objects.equals(this.sku, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.sku) &&
        Objects.equals(this._object, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem._object) &&
        Objects.equals(this.metadata, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.metadata) &&
        Objects.equals(this.applicationDetails, loyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.applicationDetails);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, skuId, productId, relatedObject, sourceId, quantity, discountQuantity, initialQuantity, amount, discountAmount, appliedDiscountAmount, appliedDiscountQuantity, appliedQuantity, appliedQuantityAmount, initialAmount, price, subtotalAmount, product, sku, _object, metadata, applicationDetails);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    skuId: ").append(toIndentedString(skuId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    relatedObject: ").append(toIndentedString(relatedObject)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    discountQuantity: ").append(toIndentedString(discountQuantity)).append("\n");
    sb.append("    initialQuantity: ").append(toIndentedString(initialQuantity)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    discountAmount: ").append(toIndentedString(discountAmount)).append("\n");
    sb.append("    appliedDiscountAmount: ").append(toIndentedString(appliedDiscountAmount)).append("\n");
    sb.append("    appliedDiscountQuantity: ").append(toIndentedString(appliedDiscountQuantity)).append("\n");
    sb.append("    appliedQuantity: ").append(toIndentedString(appliedQuantity)).append("\n");
    sb.append("    appliedQuantityAmount: ").append(toIndentedString(appliedQuantityAmount)).append("\n");
    sb.append("    initialAmount: ").append(toIndentedString(initialAmount)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    subtotalAmount: ").append(toIndentedString(subtotalAmount)).append("\n");
    sb.append("    product: ").append(toIndentedString(product)).append("\n");
    sb.append("    sku: ").append(toIndentedString(sku)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    applicationDetails: ").append(toIndentedString(applicationDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("sku_id");
    openapiFields.add("product_id");
    openapiFields.add("related_object");
    openapiFields.add("source_id");
    openapiFields.add("quantity");
    openapiFields.add("discount_quantity");
    openapiFields.add("initial_quantity");
    openapiFields.add("amount");
    openapiFields.add("discount_amount");
    openapiFields.add("applied_discount_amount");
    openapiFields.add("applied_discount_quantity");
    openapiFields.add("applied_quantity");
    openapiFields.add("applied_quantity_amount");
    openapiFields.add("initial_amount");
    openapiFields.add("price");
    openapiFields.add("subtotal_amount");
    openapiFields.add("product");
    openapiFields.add("sku");
    openapiFields.add("object");
    openapiFields.add("metadata");
    openapiFields.add("application_details");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.class));

       return (TypeAdapter<T>) new TypeAdapter<LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem>() {
           @Override
           public void write(JsonWriter out, LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem
  * @throws IOException if the JSON string is invalid with respect to LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem
  */
  public static LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem.class);
  }

 /**
  * Convert an instance of LoyaltiesMembersRedemptionRedeemResponseBodyOrderItemsItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

