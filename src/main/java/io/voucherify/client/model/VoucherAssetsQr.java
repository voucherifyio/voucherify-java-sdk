/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Stores Quick Response (QR) representation of encrypted code.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class VoucherAssetsQr {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;
    private boolean idIsSet = false;

  public static final String SERIALIZED_NAME_URL = "url";
  @SerializedName(SERIALIZED_NAME_URL)
  private String url;
    private boolean urlIsSet = false;

  public VoucherAssetsQr() {
  }

  public VoucherAssetsQr id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Encrypted voucher code ID.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
    this.idIsSet = true;
  }
  public boolean isIdSet() {
    return idIsSet;
  }


  public VoucherAssetsQr url(String url) {
    
    this.url = url;
    return this;
  }

   /**
   * URL to QR code    *Optional:* Attach query parameters to base URL to customize the image of the encrypted voucher code.    - &#x60;size&#x60;: integer value from &#x60;1&#x60; to &#x60;100&#x60;   - &#x60;format&#x60;: string, either &#x60;png&#x60; (default) or &#x60;svg&#x60;
   * @return url
  **/
  @javax.annotation.Nullable
  public String getUrl() {
    return url;
  }


  public void setUrl(String url) {
    this.url = url;
    this.urlIsSet = true;
  }
  public boolean isUrlSet() {
    return urlIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VoucherAssetsQr voucherAssetsQr = (VoucherAssetsQr) o;
    return Objects.equals(this.id, voucherAssetsQr.id) &&
        Objects.equals(this.url, voucherAssetsQr.url);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VoucherAssetsQr {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("url");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!VoucherAssetsQr.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'VoucherAssetsQr' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<VoucherAssetsQr> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(VoucherAssetsQr.class));

       return (TypeAdapter<T>) new TypeAdapter<VoucherAssetsQr>() {
           @Override
           public void write(JsonWriter out, VoucherAssetsQr value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : VoucherAssetsQr.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = VoucherAssetsQr.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker â†’ skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public VoucherAssetsQr read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of VoucherAssetsQr given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of VoucherAssetsQr
  * @throws IOException if the JSON string is invalid with respect to VoucherAssetsQr
  */
  public static VoucherAssetsQr fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, VoucherAssetsQr.class);
  }

 /**
  * Convert an instance of VoucherAssetsQr to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

