/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.Junction;
import io.voucherify.client.model.ParameterFiltersListReferralsRedeemableHoldersCreatedAt;
import io.voucherify.client.model.ParameterFiltersListReferralsRedeemableHoldersCustomerId;
import io.voucherify.client.model.ParameterFiltersListReferralsRedeemableHoldersHolderRole;
import io.voucherify.client.model.ParameterFiltersListReferralsRedeemableHoldersId;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * ParameterFiltersListReferralsRedeemableHolders
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ParameterFiltersListReferralsRedeemableHolders {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private ParameterFiltersListReferralsRedeemableHoldersId id;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private ParameterFiltersListReferralsRedeemableHoldersCreatedAt createdAt;

  public static final String SERIALIZED_NAME_HOLDER_ROLE = "holder_role";
  @SerializedName(SERIALIZED_NAME_HOLDER_ROLE)
  private ParameterFiltersListReferralsRedeemableHoldersHolderRole holderRole;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customer_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private ParameterFiltersListReferralsRedeemableHoldersCustomerId customerId;

  public static final String SERIALIZED_NAME_JUNCTION = "junction";
  @SerializedName(SERIALIZED_NAME_JUNCTION)
  private Junction junction;

  public ParameterFiltersListReferralsRedeemableHolders() {
  }

  public ParameterFiltersListReferralsRedeemableHolders id(ParameterFiltersListReferralsRedeemableHoldersId id) {
    
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @javax.annotation.Nullable
  public ParameterFiltersListReferralsRedeemableHoldersId getId() {
    return id;
  }


  public void setId(ParameterFiltersListReferralsRedeemableHoldersId id) {
    this.id = id;
  }


  public ParameterFiltersListReferralsRedeemableHolders createdAt(ParameterFiltersListReferralsRedeemableHoldersCreatedAt createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public ParameterFiltersListReferralsRedeemableHoldersCreatedAt getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(ParameterFiltersListReferralsRedeemableHoldersCreatedAt createdAt) {
    this.createdAt = createdAt;
  }


  public ParameterFiltersListReferralsRedeemableHolders holderRole(ParameterFiltersListReferralsRedeemableHoldersHolderRole holderRole) {
    
    this.holderRole = holderRole;
    return this;
  }

   /**
   * Get holderRole
   * @return holderRole
  **/
  @javax.annotation.Nullable
  public ParameterFiltersListReferralsRedeemableHoldersHolderRole getHolderRole() {
    return holderRole;
  }


  public void setHolderRole(ParameterFiltersListReferralsRedeemableHoldersHolderRole holderRole) {
    this.holderRole = holderRole;
  }


  public ParameterFiltersListReferralsRedeemableHolders customerId(ParameterFiltersListReferralsRedeemableHoldersCustomerId customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Get customerId
   * @return customerId
  **/
  @javax.annotation.Nullable
  public ParameterFiltersListReferralsRedeemableHoldersCustomerId getCustomerId() {
    return customerId;
  }


  public void setCustomerId(ParameterFiltersListReferralsRedeemableHoldersCustomerId customerId) {
    this.customerId = customerId;
  }


  public ParameterFiltersListReferralsRedeemableHolders junction(Junction junction) {
    
    this.junction = junction;
    return this;
  }

   /**
   * Get junction
   * @return junction
  **/
  @javax.annotation.Nullable
  public Junction getJunction() {
    return junction;
  }


  public void setJunction(Junction junction) {
    this.junction = junction;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ParameterFiltersListReferralsRedeemableHolders parameterFiltersListReferralsRedeemableHolders = (ParameterFiltersListReferralsRedeemableHolders) o;
    return Objects.equals(this.id, parameterFiltersListReferralsRedeemableHolders.id) &&
        Objects.equals(this.createdAt, parameterFiltersListReferralsRedeemableHolders.createdAt) &&
        Objects.equals(this.holderRole, parameterFiltersListReferralsRedeemableHolders.holderRole) &&
        Objects.equals(this.customerId, parameterFiltersListReferralsRedeemableHolders.customerId) &&
        Objects.equals(this.junction, parameterFiltersListReferralsRedeemableHolders.junction);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, holderRole, customerId, junction);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ParameterFiltersListReferralsRedeemableHolders {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    holderRole: ").append(toIndentedString(holderRole)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    junction: ").append(toIndentedString(junction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("created_at");
    openapiFields.add("holder_role");
    openapiFields.add("customer_id");
    openapiFields.add("junction");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ParameterFiltersListReferralsRedeemableHolders.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ParameterFiltersListReferralsRedeemableHolders' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ParameterFiltersListReferralsRedeemableHolders> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ParameterFiltersListReferralsRedeemableHolders.class));

       return (TypeAdapter<T>) new TypeAdapter<ParameterFiltersListReferralsRedeemableHolders>() {
           @Override
           public void write(JsonWriter out, ParameterFiltersListReferralsRedeemableHolders value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ParameterFiltersListReferralsRedeemableHolders read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ParameterFiltersListReferralsRedeemableHolders given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ParameterFiltersListReferralsRedeemableHolders
  * @throws IOException if the JSON string is invalid with respect to ParameterFiltersListReferralsRedeemableHolders
  */
  public static ParameterFiltersListReferralsRedeemableHolders fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ParameterFiltersListReferralsRedeemableHolders.class);
  }

 /**
  * Convert an instance of ParameterFiltersListReferralsRedeemableHolders to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

