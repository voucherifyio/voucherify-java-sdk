/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.CustomersCreateRequestBodyAddress;
import java.io.IOException;
import java.time.LocalDate;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Request body schema for **POST** &#x60;v1/customers&#x60;.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CustomersCreateRequestBody {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;
    private boolean idIsSet = false;

  public static final String SERIALIZED_NAME_SOURCE_ID = "source_id";
  @SerializedName(SERIALIZED_NAME_SOURCE_ID)
  private String sourceId;
    private boolean sourceIdIsSet = false;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;
    private boolean nameIsSet = false;

  public static final String SERIALIZED_NAME_DESCRIPTION = "description";
  @SerializedName(SERIALIZED_NAME_DESCRIPTION)
  private String description;
    private boolean descriptionIsSet = false;

  public static final String SERIALIZED_NAME_EMAIL = "email";
  @SerializedName(SERIALIZED_NAME_EMAIL)
  private String email;
    private boolean emailIsSet = false;

  public static final String SERIALIZED_NAME_PHONE = "phone";
  @SerializedName(SERIALIZED_NAME_PHONE)
  private String phone;
    private boolean phoneIsSet = false;

  public static final String SERIALIZED_NAME_BIRTHDAY = "birthday";
  @SerializedName(SERIALIZED_NAME_BIRTHDAY)
  private LocalDate birthday;
    private boolean birthdayIsSet = false;

  public static final String SERIALIZED_NAME_BIRTHDATE = "birthdate";
  @SerializedName(SERIALIZED_NAME_BIRTHDATE)
  private LocalDate birthdate;
    private boolean birthdateIsSet = false;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private CustomersCreateRequestBodyAddress address;
    private boolean addressIsSet = false;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;
    private boolean metadataIsSet = false;

  public CustomersCreateRequestBody() {
  }

  public CustomersCreateRequestBody id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * The ID of an existing customer.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
    this.idIsSet = true;
  }
  public boolean isIdSet() {
    return idIsSet;
  }


  public CustomersCreateRequestBody sourceId(String sourceId) {
    
    this.sourceId = sourceId;
    return this;
  }

   /**
   * A unique identifier of the customer who validates a voucher. It can be a customer ID or email from a CRM system, database, or a third-party service. If you also pass a customer ID (unique ID assigned by Voucherify), the source ID will be ignored.
   * @return sourceId
  **/
  @javax.annotation.Nullable
  public String getSourceId() {
    return sourceId;
  }


  public void setSourceId(String sourceId) {
    this.sourceId = sourceId;
    this.sourceIdIsSet = true;
  }
  public boolean isSourceIdSet() {
    return sourceIdIsSet;
  }


  public CustomersCreateRequestBody name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Customer&#39;s first and last name.
   * @return name
  **/
  @javax.annotation.Nullable
  public String getName() {
    return name;
  }


  public void setName(String name) {
    this.name = name;
    this.nameIsSet = true;
  }
  public boolean isNameSet() {
    return nameIsSet;
  }


  public CustomersCreateRequestBody description(String description) {
    
    this.description = description;
    return this;
  }

   /**
   * An arbitrary string that you can attach to a customer object.
   * @return description
  **/
  @javax.annotation.Nullable
  public String getDescription() {
    return description;
  }


  public void setDescription(String description) {
    this.description = description;
    this.descriptionIsSet = true;
  }
  public boolean isDescriptionSet() {
    return descriptionIsSet;
  }


  public CustomersCreateRequestBody email(String email) {
    
    this.email = email;
    return this;
  }

   /**
   * Customer&#39;s email address.
   * @return email
  **/
  @javax.annotation.Nullable
  public String getEmail() {
    return email;
  }


  public void setEmail(String email) {
    this.email = email;
    this.emailIsSet = true;
  }
  public boolean isEmailSet() {
    return emailIsSet;
  }


  public CustomersCreateRequestBody phone(String phone) {
    
    this.phone = phone;
    return this;
  }

   /**
   * Customer&#39;s phone number. This parameter is mandatory when you try to send out codes to customers via an SMS channel.
   * @return phone
  **/
  @javax.annotation.Nullable
  public String getPhone() {
    return phone;
  }


  public void setPhone(String phone) {
    this.phone = phone;
    this.phoneIsSet = true;
  }
  public boolean isPhoneSet() {
    return phoneIsSet;
  }


  public CustomersCreateRequestBody birthday(LocalDate birthday) {
    
    this.birthday = birthday;
    return this;
  }

   /**
   * &#x60;Deprecated&#x60;. ~~Customer&#39;s birthdate; format YYYY-MM-DD~~.
   * @return birthday
  **/
  @javax.annotation.Nullable
  public LocalDate getBirthday() {
    return birthday;
  }


  public void setBirthday(LocalDate birthday) {
    this.birthday = birthday;
    this.birthdayIsSet = true;
  }
  public boolean isBirthdaySet() {
    return birthdayIsSet;
  }


  public CustomersCreateRequestBody birthdate(LocalDate birthdate) {
    
    this.birthdate = birthdate;
    return this;
  }

   /**
   * Customer&#39;s birthdate; format YYYY-MM-DD.
   * @return birthdate
  **/
  @javax.annotation.Nullable
  public LocalDate getBirthdate() {
    return birthdate;
  }


  public void setBirthdate(LocalDate birthdate) {
    this.birthdate = birthdate;
    this.birthdateIsSet = true;
  }
  public boolean isBirthdateSet() {
    return birthdateIsSet;
  }


  public CustomersCreateRequestBody address(CustomersCreateRequestBodyAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  public CustomersCreateRequestBodyAddress getAddress() {
    return address;
  }


  public void setAddress(CustomersCreateRequestBodyAddress address) {
    this.address = address;
    this.addressIsSet = true;
  }
  public boolean isAddressSet() {
    return addressIsSet;
  }


  public CustomersCreateRequestBody metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * A set of custom key/value pairs that you can attach to a customer. The metadata object stores all custom attributes assigned to the customer. It can be useful for storing additional information about the customer in a structured format. This metadata can be used for validating whether the customer qualifies for a discount or it can be used in building customer segments.
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
    this.metadataIsSet = true;
  }
  public boolean isMetadataSet() {
    return metadataIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomersCreateRequestBody customersCreateRequestBody = (CustomersCreateRequestBody) o;
    return Objects.equals(this.id, customersCreateRequestBody.id) &&
        Objects.equals(this.sourceId, customersCreateRequestBody.sourceId) &&
        Objects.equals(this.name, customersCreateRequestBody.name) &&
        Objects.equals(this.description, customersCreateRequestBody.description) &&
        Objects.equals(this.email, customersCreateRequestBody.email) &&
        Objects.equals(this.phone, customersCreateRequestBody.phone) &&
        Objects.equals(this.birthday, customersCreateRequestBody.birthday) &&
        Objects.equals(this.birthdate, customersCreateRequestBody.birthdate) &&
        Objects.equals(this.address, customersCreateRequestBody.address) &&
        Objects.equals(this.metadata, customersCreateRequestBody.metadata);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sourceId, name, description, email, phone, birthday, birthdate, address, metadata);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomersCreateRequestBody {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceId: ").append(toIndentedString(sourceId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("    birthday: ").append(toIndentedString(birthday)).append("\n");
    sb.append("    birthdate: ").append(toIndentedString(birthdate)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("source_id");
    openapiFields.add("name");
    openapiFields.add("description");
    openapiFields.add("email");
    openapiFields.add("phone");
    openapiFields.add("birthday");
    openapiFields.add("birthdate");
    openapiFields.add("address");
    openapiFields.add("metadata");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomersCreateRequestBody.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomersCreateRequestBody' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomersCreateRequestBody> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomersCreateRequestBody.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomersCreateRequestBody>() {
           @Override
           public void write(JsonWriter out, CustomersCreateRequestBody value) throws IOException {
            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

            // 1. Strip all nulls and internal "isSet" markers
            obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

            // 2. Add back explicitly set nulls using reflection
            for (Field field : CustomersCreateRequestBody.class.getDeclaredFields()) {
              String fieldName = field.getName();
              if (fieldName.endsWith("IsSet")) continue;
              try {
                Field isSetField = CustomersCreateRequestBody.class.getDeclaredField(fieldName + "IsSet");
                isSetField.setAccessible(true);
                boolean isSet = (boolean) isSetField.get(value);

                field.setAccessible(true);
                Object fieldValue = field.get(value);

                if (isSet && fieldValue == null) {
                  // convert camelCase to snake_case (OpenAPI property names are snake_case)
                  String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                  obj.add(jsonName, JsonNull.INSTANCE);
                }
              } catch (NoSuchFieldException ignored) {
                // no isSet marker → skip
              } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
              }
            }

             elementAdapter.write(out, obj);
           }

           @Override
           public CustomersCreateRequestBody read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomersCreateRequestBody given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomersCreateRequestBody
  * @throws IOException if the JSON string is invalid with respect to CustomersCreateRequestBody
  */
  public static CustomersCreateRequestBody fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomersCreateRequestBody.class);
  }

 /**
  * Convert an instance of CustomersCreateRequestBody to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

