/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * FiltersCondition
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class FiltersCondition {
  public static final String SERIALIZED_NAME_$_IN = "$in";
  @SerializedName(SERIALIZED_NAME_$_IN)
  private Object $in = null;
    private boolean $inIsSet = false;

  public static final String SERIALIZED_NAME_$_NOT_IN = "$not_in";
  @SerializedName(SERIALIZED_NAME_$_NOT_IN)
  private Object $notIn = null;
    private boolean $notInIsSet = false;

  public static final String SERIALIZED_NAME_$_IS = "$is";
  @SerializedName(SERIALIZED_NAME_$_IS)
  private Object $is = null;
    private boolean $isIsSet = false;

  public static final String SERIALIZED_NAME_$_IS_DAYS_AGO = "$is_days_ago";
  @SerializedName(SERIALIZED_NAME_$_IS_DAYS_AGO)
  private Object $isDaysAgo = null;
    private boolean $isDaysAgoIsSet = false;

  public static final String SERIALIZED_NAME_$_IS_DAYS_IN_FUTURE = "$is_days_in_future";
  @SerializedName(SERIALIZED_NAME_$_IS_DAYS_IN_FUTURE)
  private Object $isDaysInFuture = null;
    private boolean $isDaysInFutureIsSet = false;

  public static final String SERIALIZED_NAME_$_IS_NOT = "$is_not";
  @SerializedName(SERIALIZED_NAME_$_IS_NOT)
  private Object $isNot = null;
    private boolean $isNotIsSet = false;

  public static final String SERIALIZED_NAME_$_HAS_VALUE = "$has_value";
  @SerializedName(SERIALIZED_NAME_$_HAS_VALUE)
  private Object $hasValue = null;
    private boolean $hasValueIsSet = false;

  public static final String SERIALIZED_NAME_$_IS_UNKNOWN = "$is_unknown";
  @SerializedName(SERIALIZED_NAME_$_IS_UNKNOWN)
  private Object $isUnknown = null;
    private boolean $isUnknownIsSet = false;

  public static final String SERIALIZED_NAME_$_CONTAINS = "$contains";
  @SerializedName(SERIALIZED_NAME_$_CONTAINS)
  private Object $contains = null;
    private boolean $containsIsSet = false;

  public static final String SERIALIZED_NAME_$_NOT_CONTAIN = "$not_contain";
  @SerializedName(SERIALIZED_NAME_$_NOT_CONTAIN)
  private Object $notContain = null;
    private boolean $notContainIsSet = false;

  public static final String SERIALIZED_NAME_$_STARTS_WITH = "$starts_with";
  @SerializedName(SERIALIZED_NAME_$_STARTS_WITH)
  private Object $startsWith = null;
    private boolean $startsWithIsSet = false;

  public static final String SERIALIZED_NAME_$_ENDS_WITH = "$ends_with";
  @SerializedName(SERIALIZED_NAME_$_ENDS_WITH)
  private Object $endsWith = null;
    private boolean $endsWithIsSet = false;

  public static final String SERIALIZED_NAME_$_MORE_THAN = "$more_than";
  @SerializedName(SERIALIZED_NAME_$_MORE_THAN)
  private Object $moreThan = null;
    private boolean $moreThanIsSet = false;

  public static final String SERIALIZED_NAME_$_LESS_THAN = "$less_than";
  @SerializedName(SERIALIZED_NAME_$_LESS_THAN)
  private Object $lessThan = null;
    private boolean $lessThanIsSet = false;

  public static final String SERIALIZED_NAME_$_MORE_THAN_AGO = "$more_than_ago";
  @SerializedName(SERIALIZED_NAME_$_MORE_THAN_AGO)
  private Object $moreThanAgo = null;
    private boolean $moreThanAgoIsSet = false;

  public static final String SERIALIZED_NAME_$_LESS_THAN_AGO = "$less_than_ago";
  @SerializedName(SERIALIZED_NAME_$_LESS_THAN_AGO)
  private Object $lessThanAgo = null;
    private boolean $lessThanAgoIsSet = false;

  public static final String SERIALIZED_NAME_$_MORE_THAN_FUTURE = "$more_than_future";
  @SerializedName(SERIALIZED_NAME_$_MORE_THAN_FUTURE)
  private Object $moreThanFuture = null;
    private boolean $moreThanFutureIsSet = false;

  public static final String SERIALIZED_NAME_$_LESS_THAN_FUTURE = "$less_than_future";
  @SerializedName(SERIALIZED_NAME_$_LESS_THAN_FUTURE)
  private Object $lessThanFuture = null;
    private boolean $lessThanFutureIsSet = false;

  public static final String SERIALIZED_NAME_$_MORE_THAN_EQUAL = "$more_than_equal";
  @SerializedName(SERIALIZED_NAME_$_MORE_THAN_EQUAL)
  private Object $moreThanEqual = null;
    private boolean $moreThanEqualIsSet = false;

  public static final String SERIALIZED_NAME_$_LESS_THAN_EQUAL = "$less_than_equal";
  @SerializedName(SERIALIZED_NAME_$_LESS_THAN_EQUAL)
  private Object $lessThanEqual = null;
    private boolean $lessThanEqualIsSet = false;

  public static final String SERIALIZED_NAME_$_AFTER = "$after";
  @SerializedName(SERIALIZED_NAME_$_AFTER)
  private Object $after = null;
    private boolean $afterIsSet = false;

  public static final String SERIALIZED_NAME_$_BEFORE = "$before";
  @SerializedName(SERIALIZED_NAME_$_BEFORE)
  private Object $before = null;
    private boolean $beforeIsSet = false;

  public static final String SERIALIZED_NAME_$_COUNT = "$count";
  @SerializedName(SERIALIZED_NAME_$_COUNT)
  private Object $count = null;
    private boolean $countIsSet = false;

  public static final String SERIALIZED_NAME_$_COUNT_LESS = "$count_less";
  @SerializedName(SERIALIZED_NAME_$_COUNT_LESS)
  private Object $countLess = null;
    private boolean $countLessIsSet = false;

  public static final String SERIALIZED_NAME_$_COUNT_MORE = "$count_more";
  @SerializedName(SERIALIZED_NAME_$_COUNT_MORE)
  private Object $countMore = null;
    private boolean $countMoreIsSet = false;

  public FiltersCondition() {
  }

  public FiltersCondition $in(Object $in) {
    
    this.$in = $in;
    return this;
  }

   /**
   * Get $in
   * @return $in
  **/
  @javax.annotation.Nullable
  public Object get$In() {
    return $in;
  }


  public void set$In(Object $in) {
    this.$in = $in;
    this.$inIsSet = true;
  }
  public boolean is$InSet() {
    return $inIsSet;
  }


  public FiltersCondition $notIn(Object $notIn) {
    
    this.$notIn = $notIn;
    return this;
  }

   /**
   * Get $notIn
   * @return $notIn
  **/
  @javax.annotation.Nullable
  public Object get$NotIn() {
    return $notIn;
  }


  public void set$NotIn(Object $notIn) {
    this.$notIn = $notIn;
    this.$notInIsSet = true;
  }
  public boolean is$NotInSet() {
    return $notInIsSet;
  }


  public FiltersCondition $is(Object $is) {
    
    this.$is = $is;
    return this;
  }

   /**
   * Get $is
   * @return $is
  **/
  @javax.annotation.Nullable
  public Object get$Is() {
    return $is;
  }


  public void set$Is(Object $is) {
    this.$is = $is;
    this.$isIsSet = true;
  }
  public boolean is$IsSet() {
    return $isIsSet;
  }


  public FiltersCondition $isDaysAgo(Object $isDaysAgo) {
    
    this.$isDaysAgo = $isDaysAgo;
    return this;
  }

   /**
   * Get $isDaysAgo
   * @return $isDaysAgo
  **/
  @javax.annotation.Nullable
  public Object get$IsDaysAgo() {
    return $isDaysAgo;
  }


  public void set$IsDaysAgo(Object $isDaysAgo) {
    this.$isDaysAgo = $isDaysAgo;
    this.$isDaysAgoIsSet = true;
  }
  public boolean is$IsDaysAgoSet() {
    return $isDaysAgoIsSet;
  }


  public FiltersCondition $isDaysInFuture(Object $isDaysInFuture) {
    
    this.$isDaysInFuture = $isDaysInFuture;
    return this;
  }

   /**
   * Get $isDaysInFuture
   * @return $isDaysInFuture
  **/
  @javax.annotation.Nullable
  public Object get$IsDaysInFuture() {
    return $isDaysInFuture;
  }


  public void set$IsDaysInFuture(Object $isDaysInFuture) {
    this.$isDaysInFuture = $isDaysInFuture;
    this.$isDaysInFutureIsSet = true;
  }
  public boolean is$IsDaysInFutureSet() {
    return $isDaysInFutureIsSet;
  }


  public FiltersCondition $isNot(Object $isNot) {
    
    this.$isNot = $isNot;
    return this;
  }

   /**
   * Get $isNot
   * @return $isNot
  **/
  @javax.annotation.Nullable
  public Object get$IsNot() {
    return $isNot;
  }


  public void set$IsNot(Object $isNot) {
    this.$isNot = $isNot;
    this.$isNotIsSet = true;
  }
  public boolean is$IsNotSet() {
    return $isNotIsSet;
  }


  public FiltersCondition $hasValue(Object $hasValue) {
    
    this.$hasValue = $hasValue;
    return this;
  }

   /**
   * Get $hasValue
   * @return $hasValue
  **/
  @javax.annotation.Nullable
  public Object get$HasValue() {
    return $hasValue;
  }


  public void set$HasValue(Object $hasValue) {
    this.$hasValue = $hasValue;
    this.$hasValueIsSet = true;
  }
  public boolean is$HasValueSet() {
    return $hasValueIsSet;
  }


  public FiltersCondition $isUnknown(Object $isUnknown) {
    
    this.$isUnknown = $isUnknown;
    return this;
  }

   /**
   * Get $isUnknown
   * @return $isUnknown
  **/
  @javax.annotation.Nullable
  public Object get$IsUnknown() {
    return $isUnknown;
  }


  public void set$IsUnknown(Object $isUnknown) {
    this.$isUnknown = $isUnknown;
    this.$isUnknownIsSet = true;
  }
  public boolean is$IsUnknownSet() {
    return $isUnknownIsSet;
  }


  public FiltersCondition $contains(Object $contains) {
    
    this.$contains = $contains;
    return this;
  }

   /**
   * Get $contains
   * @return $contains
  **/
  @javax.annotation.Nullable
  public Object get$Contains() {
    return $contains;
  }


  public void set$Contains(Object $contains) {
    this.$contains = $contains;
    this.$containsIsSet = true;
  }
  public boolean is$ContainsSet() {
    return $containsIsSet;
  }


  public FiltersCondition $notContain(Object $notContain) {
    
    this.$notContain = $notContain;
    return this;
  }

   /**
   * Get $notContain
   * @return $notContain
  **/
  @javax.annotation.Nullable
  public Object get$NotContain() {
    return $notContain;
  }


  public void set$NotContain(Object $notContain) {
    this.$notContain = $notContain;
    this.$notContainIsSet = true;
  }
  public boolean is$NotContainSet() {
    return $notContainIsSet;
  }


  public FiltersCondition $startsWith(Object $startsWith) {
    
    this.$startsWith = $startsWith;
    return this;
  }

   /**
   * Get $startsWith
   * @return $startsWith
  **/
  @javax.annotation.Nullable
  public Object get$StartsWith() {
    return $startsWith;
  }


  public void set$StartsWith(Object $startsWith) {
    this.$startsWith = $startsWith;
    this.$startsWithIsSet = true;
  }
  public boolean is$StartsWithSet() {
    return $startsWithIsSet;
  }


  public FiltersCondition $endsWith(Object $endsWith) {
    
    this.$endsWith = $endsWith;
    return this;
  }

   /**
   * Get $endsWith
   * @return $endsWith
  **/
  @javax.annotation.Nullable
  public Object get$EndsWith() {
    return $endsWith;
  }


  public void set$EndsWith(Object $endsWith) {
    this.$endsWith = $endsWith;
    this.$endsWithIsSet = true;
  }
  public boolean is$EndsWithSet() {
    return $endsWithIsSet;
  }


  public FiltersCondition $moreThan(Object $moreThan) {
    
    this.$moreThan = $moreThan;
    return this;
  }

   /**
   * Get $moreThan
   * @return $moreThan
  **/
  @javax.annotation.Nullable
  public Object get$MoreThan() {
    return $moreThan;
  }


  public void set$MoreThan(Object $moreThan) {
    this.$moreThan = $moreThan;
    this.$moreThanIsSet = true;
  }
  public boolean is$MoreThanSet() {
    return $moreThanIsSet;
  }


  public FiltersCondition $lessThan(Object $lessThan) {
    
    this.$lessThan = $lessThan;
    return this;
  }

   /**
   * Get $lessThan
   * @return $lessThan
  **/
  @javax.annotation.Nullable
  public Object get$LessThan() {
    return $lessThan;
  }


  public void set$LessThan(Object $lessThan) {
    this.$lessThan = $lessThan;
    this.$lessThanIsSet = true;
  }
  public boolean is$LessThanSet() {
    return $lessThanIsSet;
  }


  public FiltersCondition $moreThanAgo(Object $moreThanAgo) {
    
    this.$moreThanAgo = $moreThanAgo;
    return this;
  }

   /**
   * Get $moreThanAgo
   * @return $moreThanAgo
  **/
  @javax.annotation.Nullable
  public Object get$MoreThanAgo() {
    return $moreThanAgo;
  }


  public void set$MoreThanAgo(Object $moreThanAgo) {
    this.$moreThanAgo = $moreThanAgo;
    this.$moreThanAgoIsSet = true;
  }
  public boolean is$MoreThanAgoSet() {
    return $moreThanAgoIsSet;
  }


  public FiltersCondition $lessThanAgo(Object $lessThanAgo) {
    
    this.$lessThanAgo = $lessThanAgo;
    return this;
  }

   /**
   * Get $lessThanAgo
   * @return $lessThanAgo
  **/
  @javax.annotation.Nullable
  public Object get$LessThanAgo() {
    return $lessThanAgo;
  }


  public void set$LessThanAgo(Object $lessThanAgo) {
    this.$lessThanAgo = $lessThanAgo;
    this.$lessThanAgoIsSet = true;
  }
  public boolean is$LessThanAgoSet() {
    return $lessThanAgoIsSet;
  }


  public FiltersCondition $moreThanFuture(Object $moreThanFuture) {
    
    this.$moreThanFuture = $moreThanFuture;
    return this;
  }

   /**
   * Get $moreThanFuture
   * @return $moreThanFuture
  **/
  @javax.annotation.Nullable
  public Object get$MoreThanFuture() {
    return $moreThanFuture;
  }


  public void set$MoreThanFuture(Object $moreThanFuture) {
    this.$moreThanFuture = $moreThanFuture;
    this.$moreThanFutureIsSet = true;
  }
  public boolean is$MoreThanFutureSet() {
    return $moreThanFutureIsSet;
  }


  public FiltersCondition $lessThanFuture(Object $lessThanFuture) {
    
    this.$lessThanFuture = $lessThanFuture;
    return this;
  }

   /**
   * Get $lessThanFuture
   * @return $lessThanFuture
  **/
  @javax.annotation.Nullable
  public Object get$LessThanFuture() {
    return $lessThanFuture;
  }


  public void set$LessThanFuture(Object $lessThanFuture) {
    this.$lessThanFuture = $lessThanFuture;
    this.$lessThanFutureIsSet = true;
  }
  public boolean is$LessThanFutureSet() {
    return $lessThanFutureIsSet;
  }


  public FiltersCondition $moreThanEqual(Object $moreThanEqual) {
    
    this.$moreThanEqual = $moreThanEqual;
    return this;
  }

   /**
   * Get $moreThanEqual
   * @return $moreThanEqual
  **/
  @javax.annotation.Nullable
  public Object get$MoreThanEqual() {
    return $moreThanEqual;
  }


  public void set$MoreThanEqual(Object $moreThanEqual) {
    this.$moreThanEqual = $moreThanEqual;
    this.$moreThanEqualIsSet = true;
  }
  public boolean is$MoreThanEqualSet() {
    return $moreThanEqualIsSet;
  }


  public FiltersCondition $lessThanEqual(Object $lessThanEqual) {
    
    this.$lessThanEqual = $lessThanEqual;
    return this;
  }

   /**
   * Get $lessThanEqual
   * @return $lessThanEqual
  **/
  @javax.annotation.Nullable
  public Object get$LessThanEqual() {
    return $lessThanEqual;
  }


  public void set$LessThanEqual(Object $lessThanEqual) {
    this.$lessThanEqual = $lessThanEqual;
    this.$lessThanEqualIsSet = true;
  }
  public boolean is$LessThanEqualSet() {
    return $lessThanEqualIsSet;
  }


  public FiltersCondition $after(Object $after) {
    
    this.$after = $after;
    return this;
  }

   /**
   * Get $after
   * @return $after
  **/
  @javax.annotation.Nullable
  public Object get$After() {
    return $after;
  }


  public void set$After(Object $after) {
    this.$after = $after;
    this.$afterIsSet = true;
  }
  public boolean is$AfterSet() {
    return $afterIsSet;
  }


  public FiltersCondition $before(Object $before) {
    
    this.$before = $before;
    return this;
  }

   /**
   * Get $before
   * @return $before
  **/
  @javax.annotation.Nullable
  public Object get$Before() {
    return $before;
  }


  public void set$Before(Object $before) {
    this.$before = $before;
    this.$beforeIsSet = true;
  }
  public boolean is$BeforeSet() {
    return $beforeIsSet;
  }


  public FiltersCondition $count(Object $count) {
    
    this.$count = $count;
    return this;
  }

   /**
   * Get $count
   * @return $count
  **/
  @javax.annotation.Nullable
  public Object get$Count() {
    return $count;
  }


  public void set$Count(Object $count) {
    this.$count = $count;
    this.$countIsSet = true;
  }
  public boolean is$CountSet() {
    return $countIsSet;
  }


  public FiltersCondition $countLess(Object $countLess) {
    
    this.$countLess = $countLess;
    return this;
  }

   /**
   * Get $countLess
   * @return $countLess
  **/
  @javax.annotation.Nullable
  public Object get$CountLess() {
    return $countLess;
  }


  public void set$CountLess(Object $countLess) {
    this.$countLess = $countLess;
    this.$countLessIsSet = true;
  }
  public boolean is$CountLessSet() {
    return $countLessIsSet;
  }


  public FiltersCondition $countMore(Object $countMore) {
    
    this.$countMore = $countMore;
    return this;
  }

   /**
   * Get $countMore
   * @return $countMore
  **/
  @javax.annotation.Nullable
  public Object get$CountMore() {
    return $countMore;
  }


  public void set$CountMore(Object $countMore) {
    this.$countMore = $countMore;
    this.$countMoreIsSet = true;
  }
  public boolean is$CountMoreSet() {
    return $countMoreIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FiltersCondition filtersCondition = (FiltersCondition) o;
    return Objects.equals(this.$in, filtersCondition.$in) &&
        Objects.equals(this.$notIn, filtersCondition.$notIn) &&
        Objects.equals(this.$is, filtersCondition.$is) &&
        Objects.equals(this.$isDaysAgo, filtersCondition.$isDaysAgo) &&
        Objects.equals(this.$isDaysInFuture, filtersCondition.$isDaysInFuture) &&
        Objects.equals(this.$isNot, filtersCondition.$isNot) &&
        Objects.equals(this.$hasValue, filtersCondition.$hasValue) &&
        Objects.equals(this.$isUnknown, filtersCondition.$isUnknown) &&
        Objects.equals(this.$contains, filtersCondition.$contains) &&
        Objects.equals(this.$notContain, filtersCondition.$notContain) &&
        Objects.equals(this.$startsWith, filtersCondition.$startsWith) &&
        Objects.equals(this.$endsWith, filtersCondition.$endsWith) &&
        Objects.equals(this.$moreThan, filtersCondition.$moreThan) &&
        Objects.equals(this.$lessThan, filtersCondition.$lessThan) &&
        Objects.equals(this.$moreThanAgo, filtersCondition.$moreThanAgo) &&
        Objects.equals(this.$lessThanAgo, filtersCondition.$lessThanAgo) &&
        Objects.equals(this.$moreThanFuture, filtersCondition.$moreThanFuture) &&
        Objects.equals(this.$lessThanFuture, filtersCondition.$lessThanFuture) &&
        Objects.equals(this.$moreThanEqual, filtersCondition.$moreThanEqual) &&
        Objects.equals(this.$lessThanEqual, filtersCondition.$lessThanEqual) &&
        Objects.equals(this.$after, filtersCondition.$after) &&
        Objects.equals(this.$before, filtersCondition.$before) &&
        Objects.equals(this.$count, filtersCondition.$count) &&
        Objects.equals(this.$countLess, filtersCondition.$countLess) &&
        Objects.equals(this.$countMore, filtersCondition.$countMore);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash($in, $notIn, $is, $isDaysAgo, $isDaysInFuture, $isNot, $hasValue, $isUnknown, $contains, $notContain, $startsWith, $endsWith, $moreThan, $lessThan, $moreThanAgo, $lessThanAgo, $moreThanFuture, $lessThanFuture, $moreThanEqual, $lessThanEqual, $after, $before, $count, $countLess, $countMore);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FiltersCondition {\n");
    sb.append("    $in: ").append(toIndentedString($in)).append("\n");
    sb.append("    $notIn: ").append(toIndentedString($notIn)).append("\n");
    sb.append("    $is: ").append(toIndentedString($is)).append("\n");
    sb.append("    $isDaysAgo: ").append(toIndentedString($isDaysAgo)).append("\n");
    sb.append("    $isDaysInFuture: ").append(toIndentedString($isDaysInFuture)).append("\n");
    sb.append("    $isNot: ").append(toIndentedString($isNot)).append("\n");
    sb.append("    $hasValue: ").append(toIndentedString($hasValue)).append("\n");
    sb.append("    $isUnknown: ").append(toIndentedString($isUnknown)).append("\n");
    sb.append("    $contains: ").append(toIndentedString($contains)).append("\n");
    sb.append("    $notContain: ").append(toIndentedString($notContain)).append("\n");
    sb.append("    $startsWith: ").append(toIndentedString($startsWith)).append("\n");
    sb.append("    $endsWith: ").append(toIndentedString($endsWith)).append("\n");
    sb.append("    $moreThan: ").append(toIndentedString($moreThan)).append("\n");
    sb.append("    $lessThan: ").append(toIndentedString($lessThan)).append("\n");
    sb.append("    $moreThanAgo: ").append(toIndentedString($moreThanAgo)).append("\n");
    sb.append("    $lessThanAgo: ").append(toIndentedString($lessThanAgo)).append("\n");
    sb.append("    $moreThanFuture: ").append(toIndentedString($moreThanFuture)).append("\n");
    sb.append("    $lessThanFuture: ").append(toIndentedString($lessThanFuture)).append("\n");
    sb.append("    $moreThanEqual: ").append(toIndentedString($moreThanEqual)).append("\n");
    sb.append("    $lessThanEqual: ").append(toIndentedString($lessThanEqual)).append("\n");
    sb.append("    $after: ").append(toIndentedString($after)).append("\n");
    sb.append("    $before: ").append(toIndentedString($before)).append("\n");
    sb.append("    $count: ").append(toIndentedString($count)).append("\n");
    sb.append("    $countLess: ").append(toIndentedString($countLess)).append("\n");
    sb.append("    $countMore: ").append(toIndentedString($countMore)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("$in");
    openapiFields.add("$not_in");
    openapiFields.add("$is");
    openapiFields.add("$is_days_ago");
    openapiFields.add("$is_days_in_future");
    openapiFields.add("$is_not");
    openapiFields.add("$has_value");
    openapiFields.add("$is_unknown");
    openapiFields.add("$contains");
    openapiFields.add("$not_contain");
    openapiFields.add("$starts_with");
    openapiFields.add("$ends_with");
    openapiFields.add("$more_than");
    openapiFields.add("$less_than");
    openapiFields.add("$more_than_ago");
    openapiFields.add("$less_than_ago");
    openapiFields.add("$more_than_future");
    openapiFields.add("$less_than_future");
    openapiFields.add("$more_than_equal");
    openapiFields.add("$less_than_equal");
    openapiFields.add("$after");
    openapiFields.add("$before");
    openapiFields.add("$count");
    openapiFields.add("$count_less");
    openapiFields.add("$count_more");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!FiltersCondition.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'FiltersCondition' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<FiltersCondition> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(FiltersCondition.class));

       return (TypeAdapter<T>) new TypeAdapter<FiltersCondition>() {
           @Override
           public void write(JsonWriter out, FiltersCondition value) throws IOException {

            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

              // 1. Strip all nulls and internal "isSet" markers
              obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

              // 2. Add back explicitly set nulls using reflection
              for (Field field : FiltersCondition.class.getDeclaredFields()) {
                String fieldName = field.getName();
                if (fieldName.endsWith("IsSet")) continue;

                try {
                  Field isSetField = FiltersCondition.class.getDeclaredField(fieldName + "IsSet");
                  isSetField.setAccessible(true);
                  boolean isSet = (boolean) isSetField.get(value);

                  field.setAccessible(true);
                  Object fieldValue = field.get(value);

                  if (isSet && fieldValue == null) {
                    // convert camelCase to snake_case (OpenAPI property names are snake_case)
                    String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                    obj.add(jsonName, JsonNull.INSTANCE);
                  }
                } catch (NoSuchFieldException ignored) {
                  // no isSet marker → skip
                } catch (IllegalAccessException e) {
                  throw new RuntimeException(e);
                }
              }

             elementAdapter.write(out, obj);
           }

           @Override
           public FiltersCondition read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of FiltersCondition given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of FiltersCondition
  * @throws IOException if the JSON string is invalid with respect to FiltersCondition
  */
  public static FiltersCondition fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, FiltersCondition.class);
  }

 /**
  * Convert an instance of FiltersCondition to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

