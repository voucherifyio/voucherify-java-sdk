/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Single customer&#39;s redeemable
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class RedeemableHolder {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_REDEEMABLE_ID = "redeemable_id";
  @SerializedName(SERIALIZED_NAME_REDEEMABLE_ID)
  private String redeemableId;

  public static final String SERIALIZED_NAME_REDEEMABLE_OBJECT = "redeemable_object";
  @SerializedName(SERIALIZED_NAME_REDEEMABLE_OBJECT)
  private String redeemableObject;

  public static final String SERIALIZED_NAME_CUSTOMER_ID = "customer_id";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_ID)
  private String customerId;

  /**
   * Role of the holder.
   */
  @JsonAdapter(HolderRoleEnum.Adapter.class)
  public enum HolderRoleEnum {
    OWNER("OWNER"),
    
    REFERRER("REFERRER"),
    
    REFEREE("REFEREE");

    private String value;

    HolderRoleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static HolderRoleEnum fromValue(String value) {
      for (HolderRoleEnum b : HolderRoleEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<HolderRoleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final HolderRoleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public HolderRoleEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return HolderRoleEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_HOLDER_ROLE = "holder_role";
  @SerializedName(SERIALIZED_NAME_HOLDER_ROLE)
  private HolderRoleEnum holderRole;

  public static final String SERIALIZED_NAME_CAMPAIGN_ID = "campaign_id";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_ID)
  private String campaignId;

  /**
   * Defines the type of the campaign.
   */
  @JsonAdapter(CampaignTypeEnum.Adapter.class)
  public enum CampaignTypeEnum {
    REFERRAL_PROGRAM("REFERRAL_PROGRAM");

    private String value;

    CampaignTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static CampaignTypeEnum fromValue(String value) {
      for (CampaignTypeEnum b : CampaignTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<CampaignTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final CampaignTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public CampaignTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return CampaignTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_CAMPAIGN_TYPE = "campaign_type";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN_TYPE)
  private CampaignTypeEnum campaignType = CampaignTypeEnum.REFERRAL_PROGRAM;

  /**
   * Defines the type of the voucher.
   */
  @JsonAdapter(VoucherTypeEnum.Adapter.class)
  public enum VoucherTypeEnum {
    GIFT_VOUCHER("GIFT_VOUCHER"),
    
    DISCOUNT_VOUCHER("DISCOUNT_VOUCHER"),
    
    LOYALTY_CARD("LOYALTY_CARD");

    private String value;

    VoucherTypeEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static VoucherTypeEnum fromValue(String value) {
      for (VoucherTypeEnum b : VoucherTypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<VoucherTypeEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final VoucherTypeEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public VoucherTypeEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return VoucherTypeEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_VOUCHER_TYPE = "voucher_type";
  @SerializedName(SERIALIZED_NAME_VOUCHER_TYPE)
  private VoucherTypeEnum voucherType;

  public static final String SERIALIZED_NAME_METADATA = "metadata";
  @SerializedName(SERIALIZED_NAME_METADATA)
  private Object metadata;

  /**
   * The type of the object represented by JSON.
   */
  @JsonAdapter(ObjectEnum.Adapter.class)
  public enum ObjectEnum {
    REDEEMABLE_HOLDER("redeemable_holder");

    private String value;

    ObjectEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static ObjectEnum fromValue(String value) {
      for (ObjectEnum b : ObjectEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<ObjectEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final ObjectEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public ObjectEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return ObjectEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_OBJECT = "object";
  @SerializedName(SERIALIZED_NAME_OBJECT)
  private ObjectEnum _object = ObjectEnum.REDEEMABLE_HOLDER;

  public RedeemableHolder() {
  }

  public RedeemableHolder id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the redeemable holder.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public RedeemableHolder createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp representing the date and time when the redeemable was assigned. The value is shown in the ISO 8601 format.
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public RedeemableHolder redeemableId(String redeemableId) {
    
    this.redeemableId = redeemableId;
    return this;
  }

   /**
   * Identifier of the redeemable item.
   * @return redeemableId
  **/
  @javax.annotation.Nullable
  public String getRedeemableId() {
    return redeemableId;
  }


  public void setRedeemableId(String redeemableId) {
    this.redeemableId = redeemableId;
  }


  public RedeemableHolder redeemableObject(String redeemableObject) {
    
    this.redeemableObject = redeemableObject;
    return this;
  }

   /**
   * Type of the redeemable.
   * @return redeemableObject
  **/
  @javax.annotation.Nullable
  public String getRedeemableObject() {
    return redeemableObject;
  }


  public void setRedeemableObject(String redeemableObject) {
    this.redeemableObject = redeemableObject;
  }


  public RedeemableHolder customerId(String customerId) {
    
    this.customerId = customerId;
    return this;
  }

   /**
   * Unique identifier of the customer.
   * @return customerId
  **/
  @javax.annotation.Nullable
  public String getCustomerId() {
    return customerId;
  }


  public void setCustomerId(String customerId) {
    this.customerId = customerId;
  }


  public RedeemableHolder holderRole(HolderRoleEnum holderRole) {
    
    this.holderRole = holderRole;
    return this;
  }

   /**
   * Role of the holder.
   * @return holderRole
  **/
  @javax.annotation.Nullable
  public HolderRoleEnum getHolderRole() {
    return holderRole;
  }


  public void setHolderRole(HolderRoleEnum holderRole) {
    this.holderRole = holderRole;
  }


  public RedeemableHolder campaignId(String campaignId) {
    
    this.campaignId = campaignId;
    return this;
  }

   /**
   * Unique identifier of the campaign as assigned by Voucherify.
   * @return campaignId
  **/
  @javax.annotation.Nullable
  public String getCampaignId() {
    return campaignId;
  }


  public void setCampaignId(String campaignId) {
    this.campaignId = campaignId;
  }


  public RedeemableHolder campaignType(CampaignTypeEnum campaignType) {
    
    this.campaignType = campaignType;
    return this;
  }

   /**
   * Defines the type of the campaign.
   * @return campaignType
  **/
  @javax.annotation.Nullable
  public CampaignTypeEnum getCampaignType() {
    return campaignType;
  }


  public void setCampaignType(CampaignTypeEnum campaignType) {
    this.campaignType = campaignType;
  }


  public RedeemableHolder voucherType(VoucherTypeEnum voucherType) {
    
    this.voucherType = voucherType;
    return this;
  }

   /**
   * Defines the type of the voucher.
   * @return voucherType
  **/
  @javax.annotation.Nullable
  public VoucherTypeEnum getVoucherType() {
    return voucherType;
  }


  public void setVoucherType(VoucherTypeEnum voucherType) {
    this.voucherType = voucherType;
  }


  public RedeemableHolder metadata(Object metadata) {
    
    this.metadata = metadata;
    return this;
  }

   /**
   * A set of custom key/value pairs that you can attach to a redeemable holder. The metadata object stores all custom attributes assigned to the &#x60;redeemable_holder&#x60; object.
   * @return metadata
  **/
  @javax.annotation.Nullable
  public Object getMetadata() {
    return metadata;
  }


  public void setMetadata(Object metadata) {
    this.metadata = metadata;
  }


  public RedeemableHolder _object(ObjectEnum _object) {
    
    this._object = _object;
    return this;
  }

   /**
   * The type of the object represented by JSON.
   * @return _object
  **/
  @javax.annotation.Nullable
  public ObjectEnum getObject() {
    return _object;
  }


  public void setObject(ObjectEnum _object) {
    this._object = _object;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RedeemableHolder redeemableHolder = (RedeemableHolder) o;
    return Objects.equals(this.id, redeemableHolder.id) &&
        Objects.equals(this.createdAt, redeemableHolder.createdAt) &&
        Objects.equals(this.redeemableId, redeemableHolder.redeemableId) &&
        Objects.equals(this.redeemableObject, redeemableHolder.redeemableObject) &&
        Objects.equals(this.customerId, redeemableHolder.customerId) &&
        Objects.equals(this.holderRole, redeemableHolder.holderRole) &&
        Objects.equals(this.campaignId, redeemableHolder.campaignId) &&
        Objects.equals(this.campaignType, redeemableHolder.campaignType) &&
        Objects.equals(this.voucherType, redeemableHolder.voucherType) &&
        Objects.equals(this.metadata, redeemableHolder.metadata) &&
        Objects.equals(this._object, redeemableHolder._object);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, redeemableId, redeemableObject, customerId, holderRole, campaignId, campaignType, voucherType, metadata, _object);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RedeemableHolder {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    redeemableId: ").append(toIndentedString(redeemableId)).append("\n");
    sb.append("    redeemableObject: ").append(toIndentedString(redeemableObject)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    holderRole: ").append(toIndentedString(holderRole)).append("\n");
    sb.append("    campaignId: ").append(toIndentedString(campaignId)).append("\n");
    sb.append("    campaignType: ").append(toIndentedString(campaignType)).append("\n");
    sb.append("    voucherType: ").append(toIndentedString(voucherType)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    _object: ").append(toIndentedString(_object)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("created_at");
    openapiFields.add("redeemable_id");
    openapiFields.add("redeemable_object");
    openapiFields.add("customer_id");
    openapiFields.add("holder_role");
    openapiFields.add("campaign_id");
    openapiFields.add("campaign_type");
    openapiFields.add("voucher_type");
    openapiFields.add("metadata");
    openapiFields.add("object");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!RedeemableHolder.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'RedeemableHolder' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<RedeemableHolder> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(RedeemableHolder.class));

       return (TypeAdapter<T>) new TypeAdapter<RedeemableHolder>() {
           @Override
           public void write(JsonWriter out, RedeemableHolder value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public RedeemableHolder read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of RedeemableHolder given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of RedeemableHolder
  * @throws IOException if the JSON string is invalid with respect to RedeemableHolder
  */
  public static RedeemableHolder fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, RedeemableHolder.class);
  }

 /**
  * Convert an instance of RedeemableHolder to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

