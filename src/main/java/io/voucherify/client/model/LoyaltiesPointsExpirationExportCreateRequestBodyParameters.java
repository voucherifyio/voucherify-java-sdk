/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * List of fields and filters that will be used to create the export.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class LoyaltiesPointsExpirationExportCreateRequestBodyParameters {
  /**
   * How the export is filtered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
   */
  @JsonAdapter(OrderEnum.Adapter.class)
  public enum OrderEnum {
    EXPIRES_AT("expires_at"),
    
    _EXPIRES_AT("-expires_at");

    private String value;

    OrderEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static OrderEnum fromValue(String value) {
      for (OrderEnum b : OrderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<OrderEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final OrderEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public OrderEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return OrderEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private OrderEnum order;

  /**
   * Gets or Sets fields
   */
  @JsonAdapter(FieldsEnum.Adapter.class)
  public enum FieldsEnum {
    ID("id"),
    
    CAMPAIGN_ID("campaign_id"),
    
    VOUCHER_ID("voucher_id"),
    
    POINTS("points"),
    
    STATUS("status"),
    
    EXPIRES_AT("expires_at");

    private String value;

    FieldsEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static FieldsEnum fromValue(String value) {
      for (FieldsEnum b : FieldsEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
        return null;
    }

    public static class Adapter extends TypeAdapter<FieldsEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final FieldsEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public FieldsEnum read(final JsonReader jsonReader) throws IOException {
        String value =  jsonReader.nextString();
        return FieldsEnum.fromValue(value);
      }
    }
  }

  public static final String SERIALIZED_NAME_FIELDS = "fields";
  @SerializedName(SERIALIZED_NAME_FIELDS)
  private List<FieldsEnum> fields;

  public static final String SERIALIZED_NAME_FILTERS = "filters";
  @SerializedName(SERIALIZED_NAME_FILTERS)
  private LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters filters;

  public LoyaltiesPointsExpirationExportCreateRequestBodyParameters() {
  }

  public LoyaltiesPointsExpirationExportCreateRequestBodyParameters order(OrderEnum order) {
    
    this.order = order;
    return this;
  }

   /**
   * How the export is filtered, where the dash &#x60;-&#x60; preceding a sorting option means sorting in a descending order.
   * @return order
  **/
  @javax.annotation.Nullable
  public OrderEnum getOrder() {
    return order;
  }


  public void setOrder(OrderEnum order) {
    this.order = order;
  }


  public LoyaltiesPointsExpirationExportCreateRequestBodyParameters fields(List<FieldsEnum> fields) {
    
    this.fields = fields;
    return this;
  }

  public LoyaltiesPointsExpirationExportCreateRequestBodyParameters addFieldsItem(FieldsEnum fieldsItem) {
    if (this.fields == null) {
      this.fields = new ArrayList<>();
    }
    this.fields.add(fieldsItem);
    return this;
  }

   /**
   * Array of strings containing the data that was exported. These fields define the headers in the CSV file.    The array can be a combination of any of the following available fields:    | **Field** | **Definition** | **Example Export** | |:---|:---|:---| | id | Loyalty points bucket ID. | lopb_Wl1o3EjJIHSNjvO5BDLy4z1n | | campaign_id | Campaign ID of the parent loyalty campaign. | camp_7s3uXI44aKfIk5IhmeOPr6ic | | voucher_id | Voucher ID of the parent loyalty card. | v_YLn0WVWXSXbUfDvxgrgUbtfJ3SQIY655 | | status | Status of the loyalty point bucket. | &#x60;ACTIVE&#x60; or &#x60;EXPIRED&#x60; | | expires_at | Timestamp in ISO 8601 format representing the date when the points expire. | 2022-06-30 | | points | Number of points. | 1000 |
   * @return fields
  **/
  @javax.annotation.Nullable
  public List<FieldsEnum> getFields() {
    return fields;
  }


  public void setFields(List<FieldsEnum> fields) {
    this.fields = fields;
  }


  public LoyaltiesPointsExpirationExportCreateRequestBodyParameters filters(LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters filters) {
    
    this.filters = filters;
    return this;
  }

   /**
   * Get filters
   * @return filters
  **/
  @javax.annotation.Nullable
  public LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters getFilters() {
    return filters;
  }


  public void setFilters(LoyaltiesPointsExpirationExportCreateRequestBodyParametersFilters filters) {
    this.filters = filters;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LoyaltiesPointsExpirationExportCreateRequestBodyParameters loyaltiesPointsExpirationExportCreateRequestBodyParameters = (LoyaltiesPointsExpirationExportCreateRequestBodyParameters) o;
    return Objects.equals(this.order, loyaltiesPointsExpirationExportCreateRequestBodyParameters.order) &&
        Objects.equals(this.fields, loyaltiesPointsExpirationExportCreateRequestBodyParameters.fields) &&
        Objects.equals(this.filters, loyaltiesPointsExpirationExportCreateRequestBodyParameters.filters);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(order, fields, filters);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LoyaltiesPointsExpirationExportCreateRequestBodyParameters {\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    fields: ").append(toIndentedString(fields)).append("\n");
    sb.append("    filters: ").append(toIndentedString(filters)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("order");
    openapiFields.add("fields");
    openapiFields.add("filters");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!LoyaltiesPointsExpirationExportCreateRequestBodyParameters.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'LoyaltiesPointsExpirationExportCreateRequestBodyParameters' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<LoyaltiesPointsExpirationExportCreateRequestBodyParameters> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(LoyaltiesPointsExpirationExportCreateRequestBodyParameters.class));

       return (TypeAdapter<T>) new TypeAdapter<LoyaltiesPointsExpirationExportCreateRequestBodyParameters>() {
           @Override
           public void write(JsonWriter out, LoyaltiesPointsExpirationExportCreateRequestBodyParameters value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public LoyaltiesPointsExpirationExportCreateRequestBodyParameters read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of LoyaltiesPointsExpirationExportCreateRequestBodyParameters given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of LoyaltiesPointsExpirationExportCreateRequestBodyParameters
  * @throws IOException if the JSON string is invalid with respect to LoyaltiesPointsExpirationExportCreateRequestBodyParameters
  */
  public static LoyaltiesPointsExpirationExportCreateRequestBodyParameters fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, LoyaltiesPointsExpirationExportCreateRequestBodyParameters.class);
  }

 /**
  * Convert an instance of LoyaltiesPointsExpirationExportCreateRequestBodyParameters to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

