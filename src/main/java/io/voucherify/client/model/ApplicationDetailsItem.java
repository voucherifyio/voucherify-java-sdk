/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Object representing item replacement.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ApplicationDetailsItem {
  public static final String SERIALIZED_NAME_SOURCE_INDEX = "source_index";
  @SerializedName(SERIALIZED_NAME_SOURCE_INDEX)
  private Integer sourceIndex;

  public static final String SERIALIZED_NAME_SOURCE_APPLIED_QUANTITY = "source_applied_quantity";
  @SerializedName(SERIALIZED_NAME_SOURCE_APPLIED_QUANTITY)
  private Integer sourceAppliedQuantity;

  public static final String SERIALIZED_NAME_SOURCE_APPLIED_QUANTITY_AMOUNT = "source_applied_quantity_amount";
  @SerializedName(SERIALIZED_NAME_SOURCE_APPLIED_QUANTITY_AMOUNT)
  private Integer sourceAppliedQuantityAmount;

  public static final String SERIALIZED_NAME_TARGET_INDEX = "target_index";
  @SerializedName(SERIALIZED_NAME_TARGET_INDEX)
  private Integer targetIndex;

  public static final String SERIALIZED_NAME_TARGET_APPLIED_QUANTITY = "target_applied_quantity";
  @SerializedName(SERIALIZED_NAME_TARGET_APPLIED_QUANTITY)
  private Integer targetAppliedQuantity;

  public static final String SERIALIZED_NAME_TARGET_APPLIED_QUANTITY_AMOUNT = "target_applied_quantity_amount";
  @SerializedName(SERIALIZED_NAME_TARGET_APPLIED_QUANTITY_AMOUNT)
  private Integer targetAppliedQuantityAmount;

  public static final String SERIALIZED_NAME_TARGET_APPLIED_DISCOUNT_AMOUNT = "target_applied_discount_amount";
  @SerializedName(SERIALIZED_NAME_TARGET_APPLIED_DISCOUNT_AMOUNT)
  private Integer targetAppliedDiscountAmount;

  public ApplicationDetailsItem() {
  }

  public ApplicationDetailsItem sourceIndex(Integer sourceIndex) {
    
    this.sourceIndex = sourceIndex;
    return this;
  }

   /**
   * Index number of the source item that is replaced. The enumeration starts from &#x60;0&#x60;, which represents the first item in the request, e.g., if the replaced item is passed as the second in the request, &#x60;source_index&#x60; equals &#x60;3&#x60;.
   * minimum: 0
   * @return sourceIndex
  **/
  @javax.annotation.Nullable
  public Integer getSourceIndex() {
    return sourceIndex;
  }


  public void setSourceIndex(Integer sourceIndex) {
    this.sourceIndex = sourceIndex;
  }


  public ApplicationDetailsItem sourceAppliedQuantity(Integer sourceAppliedQuantity) {
    
    this.sourceAppliedQuantity = sourceAppliedQuantity;
    return this;
  }

   /**
   * Number of source units that are replaced.
   * maximum: -1
   * @return sourceAppliedQuantity
  **/
  @javax.annotation.Nullable
  public Integer getSourceAppliedQuantity() {
    return sourceAppliedQuantity;
  }


  public void setSourceAppliedQuantity(Integer sourceAppliedQuantity) {
    this.sourceAppliedQuantity = sourceAppliedQuantity;
  }


  public ApplicationDetailsItem sourceAppliedQuantityAmount(Integer sourceAppliedQuantityAmount) {
    
    this.sourceAppliedQuantityAmount = sourceAppliedQuantityAmount;
    return this;
  }

   /**
   * Amount equal to the price of the units that are replaced. Determines the change of the amount of the source item quantity.
   * maximum: 0
   * @return sourceAppliedQuantityAmount
  **/
  @javax.annotation.Nullable
  public Integer getSourceAppliedQuantityAmount() {
    return sourceAppliedQuantityAmount;
  }


  public void setSourceAppliedQuantityAmount(Integer sourceAppliedQuantityAmount) {
    this.sourceAppliedQuantityAmount = sourceAppliedQuantityAmount;
  }


  public ApplicationDetailsItem targetIndex(Integer targetIndex) {
    
    this.targetIndex = targetIndex;
    return this;
  }

   /**
   * Index number of the target item that is a replacement of the source item. The enumeration continues the values for the order items, e.g. if there are three items in the request, &#x60;target_index&#x60; equals &#x60;3&#x60;, as enumeration starts from &#x60;0&#x60;.
   * @return targetIndex
  **/
  @javax.annotation.Nullable
  public Integer getTargetIndex() {
    return targetIndex;
  }


  public void setTargetIndex(Integer targetIndex) {
    this.targetIndex = targetIndex;
  }


  public ApplicationDetailsItem targetAppliedQuantity(Integer targetAppliedQuantity) {
    
    this.targetAppliedQuantity = targetAppliedQuantity;
    return this;
  }

   /**
   * Number of added target units that are replacements.
   * @return targetAppliedQuantity
  **/
  @javax.annotation.Nullable
  public Integer getTargetAppliedQuantity() {
    return targetAppliedQuantity;
  }


  public void setTargetAppliedQuantity(Integer targetAppliedQuantity) {
    this.targetAppliedQuantity = targetAppliedQuantity;
  }


  public ApplicationDetailsItem targetAppliedQuantityAmount(Integer targetAppliedQuantityAmount) {
    
    this.targetAppliedQuantityAmount = targetAppliedQuantityAmount;
    return this;
  }

   /**
   * Amount equal to the price of the units that are replacements. Determines the change in the amount of the target item quantity.
   * @return targetAppliedQuantityAmount
  **/
  @javax.annotation.Nullable
  public Integer getTargetAppliedQuantityAmount() {
    return targetAppliedQuantityAmount;
  }


  public void setTargetAppliedQuantityAmount(Integer targetAppliedQuantityAmount) {
    this.targetAppliedQuantityAmount = targetAppliedQuantityAmount;
  }


  public ApplicationDetailsItem targetAppliedDiscountAmount(Integer targetAppliedDiscountAmount) {
    
    this.targetAppliedDiscountAmount = targetAppliedDiscountAmount;
    return this;
  }

   /**
   * Discount amount applied to the target item with regard to the replacement. Equals the &#x60;target_applied_quantity_amount&#x60; minus &#x60;source_applied_quantity_amount&#x60;.
   * @return targetAppliedDiscountAmount
  **/
  @javax.annotation.Nullable
  public Integer getTargetAppliedDiscountAmount() {
    return targetAppliedDiscountAmount;
  }


  public void setTargetAppliedDiscountAmount(Integer targetAppliedDiscountAmount) {
    this.targetAppliedDiscountAmount = targetAppliedDiscountAmount;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ApplicationDetailsItem applicationDetailsItem = (ApplicationDetailsItem) o;
    return Objects.equals(this.sourceIndex, applicationDetailsItem.sourceIndex) &&
        Objects.equals(this.sourceAppliedQuantity, applicationDetailsItem.sourceAppliedQuantity) &&
        Objects.equals(this.sourceAppliedQuantityAmount, applicationDetailsItem.sourceAppliedQuantityAmount) &&
        Objects.equals(this.targetIndex, applicationDetailsItem.targetIndex) &&
        Objects.equals(this.targetAppliedQuantity, applicationDetailsItem.targetAppliedQuantity) &&
        Objects.equals(this.targetAppliedQuantityAmount, applicationDetailsItem.targetAppliedQuantityAmount) &&
        Objects.equals(this.targetAppliedDiscountAmount, applicationDetailsItem.targetAppliedDiscountAmount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceIndex, sourceAppliedQuantity, sourceAppliedQuantityAmount, targetIndex, targetAppliedQuantity, targetAppliedQuantityAmount, targetAppliedDiscountAmount);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ApplicationDetailsItem {\n");
    sb.append("    sourceIndex: ").append(toIndentedString(sourceIndex)).append("\n");
    sb.append("    sourceAppliedQuantity: ").append(toIndentedString(sourceAppliedQuantity)).append("\n");
    sb.append("    sourceAppliedQuantityAmount: ").append(toIndentedString(sourceAppliedQuantityAmount)).append("\n");
    sb.append("    targetIndex: ").append(toIndentedString(targetIndex)).append("\n");
    sb.append("    targetAppliedQuantity: ").append(toIndentedString(targetAppliedQuantity)).append("\n");
    sb.append("    targetAppliedQuantityAmount: ").append(toIndentedString(targetAppliedQuantityAmount)).append("\n");
    sb.append("    targetAppliedDiscountAmount: ").append(toIndentedString(targetAppliedDiscountAmount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("source_index");
    openapiFields.add("source_applied_quantity");
    openapiFields.add("source_applied_quantity_amount");
    openapiFields.add("target_index");
    openapiFields.add("target_applied_quantity");
    openapiFields.add("target_applied_quantity_amount");
    openapiFields.add("target_applied_discount_amount");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ApplicationDetailsItem.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ApplicationDetailsItem' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ApplicationDetailsItem> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ApplicationDetailsItem.class));

       return (TypeAdapter<T>) new TypeAdapter<ApplicationDetailsItem>() {
           @Override
           public void write(JsonWriter out, ApplicationDetailsItem value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ApplicationDetailsItem read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ApplicationDetailsItem given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ApplicationDetailsItem
  * @throws IOException if the JSON string is invalid with respect to ApplicationDetailsItem
  */
  public static ApplicationDetailsItem fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ApplicationDetailsItem.class);
  }

 /**
  * Convert an instance of ApplicationDetailsItem to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

