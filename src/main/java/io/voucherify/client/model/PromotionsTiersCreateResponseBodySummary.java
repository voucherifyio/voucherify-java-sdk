/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.PromotionsTiersCreateResponseBodySummaryOrders;
import io.voucherify.client.model.PromotionsTiersCreateResponseBodySummaryRedemptions;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Contains statistics about promotion tier redemptions and orders.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class PromotionsTiersCreateResponseBodySummary {
  public static final String SERIALIZED_NAME_REDEMPTIONS = "redemptions";
  @SerializedName(SERIALIZED_NAME_REDEMPTIONS)
  private PromotionsTiersCreateResponseBodySummaryRedemptions redemptions;
    private boolean redemptionsIsSet = false;

  public static final String SERIALIZED_NAME_ORDERS = "orders";
  @SerializedName(SERIALIZED_NAME_ORDERS)
  private PromotionsTiersCreateResponseBodySummaryOrders orders;
    private boolean ordersIsSet = false;

  public PromotionsTiersCreateResponseBodySummary() {
  }

  public PromotionsTiersCreateResponseBodySummary redemptions(PromotionsTiersCreateResponseBodySummaryRedemptions redemptions) {
    
    this.redemptions = redemptions;
    return this;
  }

   /**
   * Get redemptions
   * @return redemptions
  **/
  @javax.annotation.Nullable
  public PromotionsTiersCreateResponseBodySummaryRedemptions getRedemptions() {
    return redemptions;
  }


  public void setRedemptions(PromotionsTiersCreateResponseBodySummaryRedemptions redemptions) {
    this.redemptions = redemptions;
    this.redemptionsIsSet = true;
  }
  public boolean isRedemptionsSet() {
    return redemptionsIsSet;
  }


  public PromotionsTiersCreateResponseBodySummary orders(PromotionsTiersCreateResponseBodySummaryOrders orders) {
    
    this.orders = orders;
    return this;
  }

   /**
   * Get orders
   * @return orders
  **/
  @javax.annotation.Nullable
  public PromotionsTiersCreateResponseBodySummaryOrders getOrders() {
    return orders;
  }


  public void setOrders(PromotionsTiersCreateResponseBodySummaryOrders orders) {
    this.orders = orders;
    this.ordersIsSet = true;
  }
  public boolean isOrdersSet() {
    return ordersIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PromotionsTiersCreateResponseBodySummary promotionsTiersCreateResponseBodySummary = (PromotionsTiersCreateResponseBodySummary) o;
    return Objects.equals(this.redemptions, promotionsTiersCreateResponseBodySummary.redemptions) &&
        Objects.equals(this.orders, promotionsTiersCreateResponseBodySummary.orders);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(redemptions, orders);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PromotionsTiersCreateResponseBodySummary {\n");
    sb.append("    redemptions: ").append(toIndentedString(redemptions)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("redemptions");
    openapiFields.add("orders");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!PromotionsTiersCreateResponseBodySummary.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'PromotionsTiersCreateResponseBodySummary' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<PromotionsTiersCreateResponseBodySummary> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(PromotionsTiersCreateResponseBodySummary.class));

       return (TypeAdapter<T>) new TypeAdapter<PromotionsTiersCreateResponseBodySummary>() {
           @Override
           public void write(JsonWriter out, PromotionsTiersCreateResponseBodySummary value) throws IOException {
            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

            // 1. Strip all nulls and internal "isSet" markers
            obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

            // 2. Add back explicitly set nulls using reflection
            for (Field field : PromotionsTiersCreateResponseBodySummary.class.getDeclaredFields()) {
              String fieldName = field.getName();
              if (fieldName.endsWith("IsSet")) continue;
              try {
                Field isSetField = PromotionsTiersCreateResponseBodySummary.class.getDeclaredField(fieldName + "IsSet");
                isSetField.setAccessible(true);
                boolean isSet = (boolean) isSetField.get(value);

                field.setAccessible(true);
                Object fieldValue = field.get(value);

                if (isSet && fieldValue == null) {
                  // convert camelCase to snake_case (OpenAPI property names are snake_case)
                  String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                  obj.add(jsonName, JsonNull.INSTANCE);
                }
              } catch (NoSuchFieldException ignored) {
                // no isSet marker â†’ skip
              } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
              }
            }

             elementAdapter.write(out, obj);
           }

           @Override
           public PromotionsTiersCreateResponseBodySummary read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of PromotionsTiersCreateResponseBodySummary given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of PromotionsTiersCreateResponseBodySummary
  * @throws IOException if the JSON string is invalid with respect to PromotionsTiersCreateResponseBodySummary
  */
  public static PromotionsTiersCreateResponseBodySummary fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, PromotionsTiersCreateResponseBodySummary.class);
  }

 /**
  * Convert an instance of PromotionsTiersCreateResponseBodySummary to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

