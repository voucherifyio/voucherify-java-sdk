/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.CustomEvent;
import io.voucherify.client.model.EarningRule;
import io.voucherify.client.model.ListPublicationsItemValidSingleVoucher;
import io.voucherify.client.model.LoyaltyPendingPoints;
import io.voucherify.client.model.LoyaltyPointsBucket;
import io.voucherify.client.model.LoyaltyTier;
import io.voucherify.client.model.MemberActivityDataBalance;
import io.voucherify.client.model.MemberActivityDataCustomerEvent;
import io.voucherify.client.model.MemberActivityDataOrder;
import io.voucherify.client.model.MemberActivityDataRedemption;
import io.voucherify.client.model.MemberActivityDataTransaction;
import io.voucherify.client.model.RewardAssignment;
import io.voucherify.client.model.SimpleCampaign;
import io.voucherify.client.model.SimpleCustomer;
import io.voucherify.client.model.SimpleEvent;
import io.voucherify.client.model.SimplePromotionStack;
import io.voucherify.client.model.SimplePromotionTier;
import io.voucherify.client.model.SimpleRedemption;
import io.voucherify.client.model.SimpleRedemptionRewardResult;
import io.voucherify.client.model.SimpleReferralTier;
import io.voucherify.client.model.SimpleVoucher;
import io.voucherify.client.model.VoucherBalance;
import java.io.IOException;
import java.time.OffsetDateTime;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * MemberActivityData
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class MemberActivityData {
  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private SimpleCustomer customer;

  public static final String SERIALIZED_NAME_CAMPAIGN = "campaign";
  @SerializedName(SERIALIZED_NAME_CAMPAIGN)
  private SimpleCampaign campaign;

  public static final String SERIALIZED_NAME_LOYALTY_TIER_FROM = "loyalty_tier_from";
  @SerializedName(SERIALIZED_NAME_LOYALTY_TIER_FROM)
  private LoyaltyTier loyaltyTierFrom;

  public static final String SERIALIZED_NAME_LOYALTY_TIER_TO = "loyalty_tier_to";
  @SerializedName(SERIALIZED_NAME_LOYALTY_TIER_TO)
  private LoyaltyTier loyaltyTierTo;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private OffsetDateTime createdAt;

  public static final String SERIALIZED_NAME_LOYALTY_TIER = "loyalty_tier";
  @SerializedName(SERIALIZED_NAME_LOYALTY_TIER)
  private LoyaltyTier loyaltyTier;

  public static final String SERIALIZED_NAME_EXPIRATION_DATE = "expiration_date";
  @SerializedName(SERIALIZED_NAME_EXPIRATION_DATE)
  private OffsetDateTime expirationDate;

  public static final String SERIALIZED_NAME_PUBLICATION = "publication";
  @SerializedName(SERIALIZED_NAME_PUBLICATION)
  private ListPublicationsItemValidSingleVoucher publication;

  public static final String SERIALIZED_NAME_ORDER = "order";
  @SerializedName(SERIALIZED_NAME_ORDER)
  private MemberActivityDataOrder order;

  public static final String SERIALIZED_NAME_VOUCHER = "voucher";
  @SerializedName(SERIALIZED_NAME_VOUCHER)
  private SimpleVoucher voucher;

  public static final String SERIALIZED_NAME_HOLDER = "holder";
  @SerializedName(SERIALIZED_NAME_HOLDER)
  private SimpleCustomer holder;

  public static final String SERIALIZED_NAME_PROMOTION_TIER = "promotion_tier";
  @SerializedName(SERIALIZED_NAME_PROMOTION_TIER)
  private SimplePromotionTier promotionTier;

  public static final String SERIALIZED_NAME_PROMOTION_STACK = "promotion_stack";
  @SerializedName(SERIALIZED_NAME_PROMOTION_STACK)
  private SimplePromotionStack promotionStack;

  public static final String SERIALIZED_NAME_REDEMPTION = "redemption";
  @SerializedName(SERIALIZED_NAME_REDEMPTION)
  private MemberActivityDataRedemption redemption;

  public static final String SERIALIZED_NAME_REDEMPTION_ROLLBACK = "redemption_rollback";
  @SerializedName(SERIALIZED_NAME_REDEMPTION_ROLLBACK)
  private SimpleRedemption redemptionRollback;

  public static final String SERIALIZED_NAME_REWARD = "reward";
  @SerializedName(SERIALIZED_NAME_REWARD)
  private SimpleRedemptionRewardResult reward;

  public static final String SERIALIZED_NAME_REFERRAL_TIER = "referral_tier";
  @SerializedName(SERIALIZED_NAME_REFERRAL_TIER)
  private SimpleReferralTier referralTier;

  public static final String SERIALIZED_NAME_BALANCE = "balance";
  @SerializedName(SERIALIZED_NAME_BALANCE)
  private MemberActivityDataBalance balance;

  public static final String SERIALIZED_NAME_CUSTOM_EVENT = "custom_event";
  @SerializedName(SERIALIZED_NAME_CUSTOM_EVENT)
  private CustomEvent customEvent;

  public static final String SERIALIZED_NAME_CUSTOMER_EVENT = "customer_event";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EVENT)
  private MemberActivityDataCustomerEvent customerEvent;

  public static final String SERIALIZED_NAME_EARNING_RULE = "earning_rule";
  @SerializedName(SERIALIZED_NAME_EARNING_RULE)
  private EarningRule earningRule;

  public static final String SERIALIZED_NAME_EVENT = "event";
  @SerializedName(SERIALIZED_NAME_EVENT)
  private SimpleEvent event;

  public static final String SERIALIZED_NAME_REWARD_REDEMPTION = "reward_redemption";
  @SerializedName(SERIALIZED_NAME_REWARD_REDEMPTION)
  private Object rewardRedemption;

  public static final String SERIALIZED_NAME_REWARD_ASSIGNMENT = "reward_assignment";
  @SerializedName(SERIALIZED_NAME_REWARD_ASSIGNMENT)
  private RewardAssignment rewardAssignment;

  public static final String SERIALIZED_NAME_SOURCE = "source";
  @SerializedName(SERIALIZED_NAME_SOURCE)
  private String source;

  public static final String SERIALIZED_NAME_TRANSACTION = "transaction";
  @SerializedName(SERIALIZED_NAME_TRANSACTION)
  private MemberActivityDataTransaction transaction;

  public static final String SERIALIZED_NAME_PENDING_POINTS = "pending_points";
  @SerializedName(SERIALIZED_NAME_PENDING_POINTS)
  private LoyaltyPendingPoints pendingPoints;

  public static final String SERIALIZED_NAME_VOUCHER_PENDING_POINTS_BALANCE = "voucher_pending_points_balance";
  @SerializedName(SERIALIZED_NAME_VOUCHER_PENDING_POINTS_BALANCE)
  private VoucherBalance voucherPendingPointsBalance;

  public static final String SERIALIZED_NAME_SOURCE_VOUCHER = "source_voucher";
  @SerializedName(SERIALIZED_NAME_SOURCE_VOUCHER)
  private SimpleVoucher sourceVoucher;

  public static final String SERIALIZED_NAME_DESTINATION_VOUCHER = "destination_voucher";
  @SerializedName(SERIALIZED_NAME_DESTINATION_VOUCHER)
  private SimpleVoucher destinationVoucher;

  public static final String SERIALIZED_NAME_POINTS = "points";
  @SerializedName(SERIALIZED_NAME_POINTS)
  private Integer points;

  public static final String SERIALIZED_NAME_BUCKETS = "buckets";
  @SerializedName(SERIALIZED_NAME_BUCKETS)
  private List<LoyaltyPointsBucket> buckets;

  public MemberActivityData() {
  }

  public MemberActivityData customer(SimpleCustomer customer) {
    
    this.customer = customer;
    return this;
  }

   /**
   * Get customer
   * @return customer
  **/
  @javax.annotation.Nullable
  public SimpleCustomer getCustomer() {
    return customer;
  }


  public void setCustomer(SimpleCustomer customer) {
    this.customer = customer;
  }


  public MemberActivityData campaign(SimpleCampaign campaign) {
    
    this.campaign = campaign;
    return this;
  }

   /**
   * Get campaign
   * @return campaign
  **/
  @javax.annotation.Nullable
  public SimpleCampaign getCampaign() {
    return campaign;
  }


  public void setCampaign(SimpleCampaign campaign) {
    this.campaign = campaign;
  }


  public MemberActivityData loyaltyTierFrom(LoyaltyTier loyaltyTierFrom) {
    
    this.loyaltyTierFrom = loyaltyTierFrom;
    return this;
  }

   /**
   * Get loyaltyTierFrom
   * @return loyaltyTierFrom
  **/
  @javax.annotation.Nullable
  public LoyaltyTier getLoyaltyTierFrom() {
    return loyaltyTierFrom;
  }


  public void setLoyaltyTierFrom(LoyaltyTier loyaltyTierFrom) {
    this.loyaltyTierFrom = loyaltyTierFrom;
  }


  public MemberActivityData loyaltyTierTo(LoyaltyTier loyaltyTierTo) {
    
    this.loyaltyTierTo = loyaltyTierTo;
    return this;
  }

   /**
   * Get loyaltyTierTo
   * @return loyaltyTierTo
  **/
  @javax.annotation.Nullable
  public LoyaltyTier getLoyaltyTierTo() {
    return loyaltyTierTo;
  }


  public void setLoyaltyTierTo(LoyaltyTier loyaltyTierTo) {
    this.loyaltyTierTo = loyaltyTierTo;
  }


  public MemberActivityData createdAt(OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public MemberActivityData loyaltyTier(LoyaltyTier loyaltyTier) {
    
    this.loyaltyTier = loyaltyTier;
    return this;
  }

   /**
   * Get loyaltyTier
   * @return loyaltyTier
  **/
  @javax.annotation.Nullable
  public LoyaltyTier getLoyaltyTier() {
    return loyaltyTier;
  }


  public void setLoyaltyTier(LoyaltyTier loyaltyTier) {
    this.loyaltyTier = loyaltyTier;
  }


  public MemberActivityData expirationDate(OffsetDateTime expirationDate) {
    
    this.expirationDate = expirationDate;
    return this;
  }

   /**
   * Get expirationDate
   * @return expirationDate
  **/
  @javax.annotation.Nullable
  public OffsetDateTime getExpirationDate() {
    return expirationDate;
  }


  public void setExpirationDate(OffsetDateTime expirationDate) {
    this.expirationDate = expirationDate;
  }


  public MemberActivityData publication(ListPublicationsItemValidSingleVoucher publication) {
    
    this.publication = publication;
    return this;
  }

   /**
   * Get publication
   * @return publication
  **/
  @javax.annotation.Nullable
  public ListPublicationsItemValidSingleVoucher getPublication() {
    return publication;
  }


  public void setPublication(ListPublicationsItemValidSingleVoucher publication) {
    this.publication = publication;
  }


  public MemberActivityData order(MemberActivityDataOrder order) {
    
    this.order = order;
    return this;
  }

   /**
   * Get order
   * @return order
  **/
  @javax.annotation.Nullable
  public MemberActivityDataOrder getOrder() {
    return order;
  }


  public void setOrder(MemberActivityDataOrder order) {
    this.order = order;
  }


  public MemberActivityData voucher(SimpleVoucher voucher) {
    
    this.voucher = voucher;
    return this;
  }

   /**
   * Get voucher
   * @return voucher
  **/
  @javax.annotation.Nullable
  public SimpleVoucher getVoucher() {
    return voucher;
  }


  public void setVoucher(SimpleVoucher voucher) {
    this.voucher = voucher;
  }


  public MemberActivityData holder(SimpleCustomer holder) {
    
    this.holder = holder;
    return this;
  }

   /**
   * Get holder
   * @return holder
  **/
  @javax.annotation.Nullable
  public SimpleCustomer getHolder() {
    return holder;
  }


  public void setHolder(SimpleCustomer holder) {
    this.holder = holder;
  }


  public MemberActivityData promotionTier(SimplePromotionTier promotionTier) {
    
    this.promotionTier = promotionTier;
    return this;
  }

   /**
   * Get promotionTier
   * @return promotionTier
  **/
  @javax.annotation.Nullable
  public SimplePromotionTier getPromotionTier() {
    return promotionTier;
  }


  public void setPromotionTier(SimplePromotionTier promotionTier) {
    this.promotionTier = promotionTier;
  }


  public MemberActivityData promotionStack(SimplePromotionStack promotionStack) {
    
    this.promotionStack = promotionStack;
    return this;
  }

   /**
   * Get promotionStack
   * @return promotionStack
  **/
  @javax.annotation.Nullable
  public SimplePromotionStack getPromotionStack() {
    return promotionStack;
  }


  public void setPromotionStack(SimplePromotionStack promotionStack) {
    this.promotionStack = promotionStack;
  }


  public MemberActivityData redemption(MemberActivityDataRedemption redemption) {
    
    this.redemption = redemption;
    return this;
  }

   /**
   * Get redemption
   * @return redemption
  **/
  @javax.annotation.Nullable
  public MemberActivityDataRedemption getRedemption() {
    return redemption;
  }


  public void setRedemption(MemberActivityDataRedemption redemption) {
    this.redemption = redemption;
  }


  public MemberActivityData redemptionRollback(SimpleRedemption redemptionRollback) {
    
    this.redemptionRollback = redemptionRollback;
    return this;
  }

   /**
   * Get redemptionRollback
   * @return redemptionRollback
  **/
  @javax.annotation.Nullable
  public SimpleRedemption getRedemptionRollback() {
    return redemptionRollback;
  }


  public void setRedemptionRollback(SimpleRedemption redemptionRollback) {
    this.redemptionRollback = redemptionRollback;
  }


  public MemberActivityData reward(SimpleRedemptionRewardResult reward) {
    
    this.reward = reward;
    return this;
  }

   /**
   * Get reward
   * @return reward
  **/
  @javax.annotation.Nullable
  public SimpleRedemptionRewardResult getReward() {
    return reward;
  }


  public void setReward(SimpleRedemptionRewardResult reward) {
    this.reward = reward;
  }


  public MemberActivityData referralTier(SimpleReferralTier referralTier) {
    
    this.referralTier = referralTier;
    return this;
  }

   /**
   * Get referralTier
   * @return referralTier
  **/
  @javax.annotation.Nullable
  public SimpleReferralTier getReferralTier() {
    return referralTier;
  }


  public void setReferralTier(SimpleReferralTier referralTier) {
    this.referralTier = referralTier;
  }


  public MemberActivityData balance(MemberActivityDataBalance balance) {
    
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @javax.annotation.Nullable
  public MemberActivityDataBalance getBalance() {
    return balance;
  }


  public void setBalance(MemberActivityDataBalance balance) {
    this.balance = balance;
  }


  public MemberActivityData customEvent(CustomEvent customEvent) {
    
    this.customEvent = customEvent;
    return this;
  }

   /**
   * Get customEvent
   * @return customEvent
  **/
  @javax.annotation.Nullable
  public CustomEvent getCustomEvent() {
    return customEvent;
  }


  public void setCustomEvent(CustomEvent customEvent) {
    this.customEvent = customEvent;
  }


  public MemberActivityData customerEvent(MemberActivityDataCustomerEvent customerEvent) {
    
    this.customerEvent = customerEvent;
    return this;
  }

   /**
   * Get customerEvent
   * @return customerEvent
  **/
  @javax.annotation.Nullable
  public MemberActivityDataCustomerEvent getCustomerEvent() {
    return customerEvent;
  }


  public void setCustomerEvent(MemberActivityDataCustomerEvent customerEvent) {
    this.customerEvent = customerEvent;
  }


  public MemberActivityData earningRule(EarningRule earningRule) {
    
    this.earningRule = earningRule;
    return this;
  }

   /**
   * Get earningRule
   * @return earningRule
  **/
  @javax.annotation.Nullable
  public EarningRule getEarningRule() {
    return earningRule;
  }


  public void setEarningRule(EarningRule earningRule) {
    this.earningRule = earningRule;
  }


  public MemberActivityData event(SimpleEvent event) {
    
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @javax.annotation.Nullable
  public SimpleEvent getEvent() {
    return event;
  }


  public void setEvent(SimpleEvent event) {
    this.event = event;
  }


  public MemberActivityData rewardRedemption(Object rewardRedemption) {
    
    this.rewardRedemption = rewardRedemption;
    return this;
  }

   /**
   * Get rewardRedemption
   * @return rewardRedemption
  **/
  @javax.annotation.Nullable
  public Object getRewardRedemption() {
    return rewardRedemption;
  }


  public void setRewardRedemption(Object rewardRedemption) {
    this.rewardRedemption = rewardRedemption;
  }


  public MemberActivityData rewardAssignment(RewardAssignment rewardAssignment) {
    
    this.rewardAssignment = rewardAssignment;
    return this;
  }

   /**
   * Get rewardAssignment
   * @return rewardAssignment
  **/
  @javax.annotation.Nullable
  public RewardAssignment getRewardAssignment() {
    return rewardAssignment;
  }


  public void setRewardAssignment(RewardAssignment rewardAssignment) {
    this.rewardAssignment = rewardAssignment;
  }


  public MemberActivityData source(String source) {
    
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  @javax.annotation.Nullable
  public String getSource() {
    return source;
  }


  public void setSource(String source) {
    this.source = source;
  }


  public MemberActivityData transaction(MemberActivityDataTransaction transaction) {
    
    this.transaction = transaction;
    return this;
  }

   /**
   * Get transaction
   * @return transaction
  **/
  @javax.annotation.Nullable
  public MemberActivityDataTransaction getTransaction() {
    return transaction;
  }


  public void setTransaction(MemberActivityDataTransaction transaction) {
    this.transaction = transaction;
  }


  public MemberActivityData pendingPoints(LoyaltyPendingPoints pendingPoints) {
    
    this.pendingPoints = pendingPoints;
    return this;
  }

   /**
   * Get pendingPoints
   * @return pendingPoints
  **/
  @javax.annotation.Nullable
  public LoyaltyPendingPoints getPendingPoints() {
    return pendingPoints;
  }


  public void setPendingPoints(LoyaltyPendingPoints pendingPoints) {
    this.pendingPoints = pendingPoints;
  }


  public MemberActivityData voucherPendingPointsBalance(VoucherBalance voucherPendingPointsBalance) {
    
    this.voucherPendingPointsBalance = voucherPendingPointsBalance;
    return this;
  }

   /**
   * Get voucherPendingPointsBalance
   * @return voucherPendingPointsBalance
  **/
  @javax.annotation.Nullable
  public VoucherBalance getVoucherPendingPointsBalance() {
    return voucherPendingPointsBalance;
  }


  public void setVoucherPendingPointsBalance(VoucherBalance voucherPendingPointsBalance) {
    this.voucherPendingPointsBalance = voucherPendingPointsBalance;
  }


  public MemberActivityData sourceVoucher(SimpleVoucher sourceVoucher) {
    
    this.sourceVoucher = sourceVoucher;
    return this;
  }

   /**
   * Get sourceVoucher
   * @return sourceVoucher
  **/
  @javax.annotation.Nullable
  public SimpleVoucher getSourceVoucher() {
    return sourceVoucher;
  }


  public void setSourceVoucher(SimpleVoucher sourceVoucher) {
    this.sourceVoucher = sourceVoucher;
  }


  public MemberActivityData destinationVoucher(SimpleVoucher destinationVoucher) {
    
    this.destinationVoucher = destinationVoucher;
    return this;
  }

   /**
   * Get destinationVoucher
   * @return destinationVoucher
  **/
  @javax.annotation.Nullable
  public SimpleVoucher getDestinationVoucher() {
    return destinationVoucher;
  }


  public void setDestinationVoucher(SimpleVoucher destinationVoucher) {
    this.destinationVoucher = destinationVoucher;
  }


  public MemberActivityData points(Integer points) {
    
    this.points = points;
    return this;
  }

   /**
   * The number of expired points.
   * @return points
  **/
  @javax.annotation.Nullable
  public Integer getPoints() {
    return points;
  }


  public void setPoints(Integer points) {
    this.points = points;
  }


  public MemberActivityData buckets(List<LoyaltyPointsBucket> buckets) {
    
    this.buckets = buckets;
    return this;
  }

  public MemberActivityData addBucketsItem(LoyaltyPointsBucket bucketsItem) {
    if (this.buckets == null) {
      this.buckets = new ArrayList<>();
    }
    this.buckets.add(bucketsItem);
    return this;
  }

   /**
   * Get buckets
   * @return buckets
  **/
  @javax.annotation.Nullable
  public List<LoyaltyPointsBucket> getBuckets() {
    return buckets;
  }


  public void setBuckets(List<LoyaltyPointsBucket> buckets) {
    this.buckets = buckets;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MemberActivityData memberActivityData = (MemberActivityData) o;
    return Objects.equals(this.customer, memberActivityData.customer) &&
        Objects.equals(this.campaign, memberActivityData.campaign) &&
        Objects.equals(this.loyaltyTierFrom, memberActivityData.loyaltyTierFrom) &&
        Objects.equals(this.loyaltyTierTo, memberActivityData.loyaltyTierTo) &&
        Objects.equals(this.createdAt, memberActivityData.createdAt) &&
        Objects.equals(this.loyaltyTier, memberActivityData.loyaltyTier) &&
        Objects.equals(this.expirationDate, memberActivityData.expirationDate) &&
        Objects.equals(this.publication, memberActivityData.publication) &&
        Objects.equals(this.order, memberActivityData.order) &&
        Objects.equals(this.voucher, memberActivityData.voucher) &&
        Objects.equals(this.holder, memberActivityData.holder) &&
        Objects.equals(this.promotionTier, memberActivityData.promotionTier) &&
        Objects.equals(this.promotionStack, memberActivityData.promotionStack) &&
        Objects.equals(this.redemption, memberActivityData.redemption) &&
        Objects.equals(this.redemptionRollback, memberActivityData.redemptionRollback) &&
        Objects.equals(this.reward, memberActivityData.reward) &&
        Objects.equals(this.referralTier, memberActivityData.referralTier) &&
        Objects.equals(this.balance, memberActivityData.balance) &&
        Objects.equals(this.customEvent, memberActivityData.customEvent) &&
        Objects.equals(this.customerEvent, memberActivityData.customerEvent) &&
        Objects.equals(this.earningRule, memberActivityData.earningRule) &&
        Objects.equals(this.event, memberActivityData.event) &&
        Objects.equals(this.rewardRedemption, memberActivityData.rewardRedemption) &&
        Objects.equals(this.rewardAssignment, memberActivityData.rewardAssignment) &&
        Objects.equals(this.source, memberActivityData.source) &&
        Objects.equals(this.transaction, memberActivityData.transaction) &&
        Objects.equals(this.pendingPoints, memberActivityData.pendingPoints) &&
        Objects.equals(this.voucherPendingPointsBalance, memberActivityData.voucherPendingPointsBalance) &&
        Objects.equals(this.sourceVoucher, memberActivityData.sourceVoucher) &&
        Objects.equals(this.destinationVoucher, memberActivityData.destinationVoucher) &&
        Objects.equals(this.points, memberActivityData.points) &&
        Objects.equals(this.buckets, memberActivityData.buckets);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(customer, campaign, loyaltyTierFrom, loyaltyTierTo, createdAt, loyaltyTier, expirationDate, publication, order, voucher, holder, promotionTier, promotionStack, redemption, redemptionRollback, reward, referralTier, balance, customEvent, customerEvent, earningRule, event, rewardRedemption, rewardAssignment, source, transaction, pendingPoints, voucherPendingPointsBalance, sourceVoucher, destinationVoucher, points, buckets);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MemberActivityData {\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("    campaign: ").append(toIndentedString(campaign)).append("\n");
    sb.append("    loyaltyTierFrom: ").append(toIndentedString(loyaltyTierFrom)).append("\n");
    sb.append("    loyaltyTierTo: ").append(toIndentedString(loyaltyTierTo)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    loyaltyTier: ").append(toIndentedString(loyaltyTier)).append("\n");
    sb.append("    expirationDate: ").append(toIndentedString(expirationDate)).append("\n");
    sb.append("    publication: ").append(toIndentedString(publication)).append("\n");
    sb.append("    order: ").append(toIndentedString(order)).append("\n");
    sb.append("    voucher: ").append(toIndentedString(voucher)).append("\n");
    sb.append("    holder: ").append(toIndentedString(holder)).append("\n");
    sb.append("    promotionTier: ").append(toIndentedString(promotionTier)).append("\n");
    sb.append("    promotionStack: ").append(toIndentedString(promotionStack)).append("\n");
    sb.append("    redemption: ").append(toIndentedString(redemption)).append("\n");
    sb.append("    redemptionRollback: ").append(toIndentedString(redemptionRollback)).append("\n");
    sb.append("    reward: ").append(toIndentedString(reward)).append("\n");
    sb.append("    referralTier: ").append(toIndentedString(referralTier)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    customEvent: ").append(toIndentedString(customEvent)).append("\n");
    sb.append("    customerEvent: ").append(toIndentedString(customerEvent)).append("\n");
    sb.append("    earningRule: ").append(toIndentedString(earningRule)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    rewardRedemption: ").append(toIndentedString(rewardRedemption)).append("\n");
    sb.append("    rewardAssignment: ").append(toIndentedString(rewardAssignment)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    transaction: ").append(toIndentedString(transaction)).append("\n");
    sb.append("    pendingPoints: ").append(toIndentedString(pendingPoints)).append("\n");
    sb.append("    voucherPendingPointsBalance: ").append(toIndentedString(voucherPendingPointsBalance)).append("\n");
    sb.append("    sourceVoucher: ").append(toIndentedString(sourceVoucher)).append("\n");
    sb.append("    destinationVoucher: ").append(toIndentedString(destinationVoucher)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    buckets: ").append(toIndentedString(buckets)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("customer");
    openapiFields.add("campaign");
    openapiFields.add("loyalty_tier_from");
    openapiFields.add("loyalty_tier_to");
    openapiFields.add("created_at");
    openapiFields.add("loyalty_tier");
    openapiFields.add("expiration_date");
    openapiFields.add("publication");
    openapiFields.add("order");
    openapiFields.add("voucher");
    openapiFields.add("holder");
    openapiFields.add("promotion_tier");
    openapiFields.add("promotion_stack");
    openapiFields.add("redemption");
    openapiFields.add("redemption_rollback");
    openapiFields.add("reward");
    openapiFields.add("referral_tier");
    openapiFields.add("balance");
    openapiFields.add("custom_event");
    openapiFields.add("customer_event");
    openapiFields.add("earning_rule");
    openapiFields.add("event");
    openapiFields.add("reward_redemption");
    openapiFields.add("reward_assignment");
    openapiFields.add("source");
    openapiFields.add("transaction");
    openapiFields.add("pending_points");
    openapiFields.add("voucher_pending_points_balance");
    openapiFields.add("source_voucher");
    openapiFields.add("destination_voucher");
    openapiFields.add("points");
    openapiFields.add("buckets");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MemberActivityData.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MemberActivityData' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MemberActivityData> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MemberActivityData.class));

       return (TypeAdapter<T>) new TypeAdapter<MemberActivityData>() {
           @Override
           public void write(JsonWriter out, MemberActivityData value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MemberActivityData read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MemberActivityData given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MemberActivityData
  * @throws IOException if the JSON string is invalid with respect to MemberActivityData
  */
  public static MemberActivityData fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MemberActivityData.class);
  }

 /**
  * Convert an instance of MemberActivityData to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

