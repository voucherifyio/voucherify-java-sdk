/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.voucherify.client.model.ManagementProjectsBrandingAddress;
import io.voucherify.client.model.ManagementProjectsBrandingBrand;
import io.voucherify.client.model.ManagementProjectsBrandingCockpits;
import io.voucherify.client.model.ManagementProjectsBrandingContact;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Response brand schema.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class ManagementProjectsBranding {
  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_BRAND = "brand";
  @SerializedName(SERIALIZED_NAME_BRAND)
  private ManagementProjectsBrandingBrand brand;

  public static final String SERIALIZED_NAME_ADDRESS = "address";
  @SerializedName(SERIALIZED_NAME_ADDRESS)
  private ManagementProjectsBrandingAddress address;

  public static final String SERIALIZED_NAME_CONTACT = "contact";
  @SerializedName(SERIALIZED_NAME_CONTACT)
  private ManagementProjectsBrandingContact contact;

  public static final String SERIALIZED_NAME_COCKPITS = "cockpits";
  @SerializedName(SERIALIZED_NAME_COCKPITS)
  private ManagementProjectsBrandingCockpits cockpits;

  public ManagementProjectsBranding() {
  }

  public ManagementProjectsBranding id(String id) {
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the brand configuration.
   * @return id
  **/
  @javax.annotation.Nullable
  public String getId() {
    return id;
  }


  public void setId(String id) {
    this.id = id;
  }


  public ManagementProjectsBranding brand(ManagementProjectsBrandingBrand brand) {
    
    this.brand = brand;
    return this;
  }

   /**
   * Get brand
   * @return brand
  **/
  @javax.annotation.Nullable
  public ManagementProjectsBrandingBrand getBrand() {
    return brand;
  }


  public void setBrand(ManagementProjectsBrandingBrand brand) {
    this.brand = brand;
  }


  public ManagementProjectsBranding address(ManagementProjectsBrandingAddress address) {
    
    this.address = address;
    return this;
  }

   /**
   * Get address
   * @return address
  **/
  @javax.annotation.Nullable
  public ManagementProjectsBrandingAddress getAddress() {
    return address;
  }


  public void setAddress(ManagementProjectsBrandingAddress address) {
    this.address = address;
  }


  public ManagementProjectsBranding contact(ManagementProjectsBrandingContact contact) {
    
    this.contact = contact;
    return this;
  }

   /**
   * Get contact
   * @return contact
  **/
  @javax.annotation.Nullable
  public ManagementProjectsBrandingContact getContact() {
    return contact;
  }


  public void setContact(ManagementProjectsBrandingContact contact) {
    this.contact = contact;
  }


  public ManagementProjectsBranding cockpits(ManagementProjectsBrandingCockpits cockpits) {
    
    this.cockpits = cockpits;
    return this;
  }

   /**
   * Get cockpits
   * @return cockpits
  **/
  @javax.annotation.Nullable
  public ManagementProjectsBrandingCockpits getCockpits() {
    return cockpits;
  }


  public void setCockpits(ManagementProjectsBrandingCockpits cockpits) {
    this.cockpits = cockpits;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ManagementProjectsBranding managementProjectsBranding = (ManagementProjectsBranding) o;
    return Objects.equals(this.id, managementProjectsBranding.id) &&
        Objects.equals(this.brand, managementProjectsBranding.brand) &&
        Objects.equals(this.address, managementProjectsBranding.address) &&
        Objects.equals(this.contact, managementProjectsBranding.contact) &&
        Objects.equals(this.cockpits, managementProjectsBranding.cockpits);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, brand, address, contact, cockpits);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ManagementProjectsBranding {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    contact: ").append(toIndentedString(contact)).append("\n");
    sb.append("    cockpits: ").append(toIndentedString(cockpits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("id");
    openapiFields.add("brand");
    openapiFields.add("address");
    openapiFields.add("contact");
    openapiFields.add("cockpits");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ManagementProjectsBranding.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ManagementProjectsBranding' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ManagementProjectsBranding> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ManagementProjectsBranding.class));

       return (TypeAdapter<T>) new TypeAdapter<ManagementProjectsBranding>() {
           @Override
           public void write(JsonWriter out, ManagementProjectsBranding value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ManagementProjectsBranding read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of ManagementProjectsBranding given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of ManagementProjectsBranding
  * @throws IOException if the JSON string is invalid with respect to ManagementProjectsBranding
  */
  public static ManagementProjectsBranding fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ManagementProjectsBranding.class);
  }

 /**
  * Convert an instance of ManagementProjectsBranding to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

