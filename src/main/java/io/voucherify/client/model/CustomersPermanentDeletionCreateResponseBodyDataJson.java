/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.jackson.nullable.JsonNullable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonNull;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.lang.reflect.Type;
import java.lang.reflect.Field;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import io.voucherify.client.JSON;

/**
 * Statistics summarizing the number of related information that was deleted.
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")

public class CustomersPermanentDeletionCreateResponseBodyDataJson {
  public static final String SERIALIZED_NAME_EVENTS = "events";
  @SerializedName(SERIALIZED_NAME_EVENTS)
  private Integer events;
    private boolean eventsIsSet = false;

  public static final String SERIALIZED_NAME_CUSTOMER_EVENTS = "customer_events";
  @SerializedName(SERIALIZED_NAME_CUSTOMER_EVENTS)
  private Integer customerEvents;
    private boolean customerEventsIsSet = false;

  public static final String SERIALIZED_NAME_DAILY_EVENTS = "daily_events";
  @SerializedName(SERIALIZED_NAME_DAILY_EVENTS)
  private Integer dailyEvents;
    private boolean dailyEventsIsSet = false;

  public static final String SERIALIZED_NAME_SEGMENTS = "segments";
  @SerializedName(SERIALIZED_NAME_SEGMENTS)
  private Integer segments;
    private boolean segmentsIsSet = false;

  public static final String SERIALIZED_NAME_ORDERS = "orders";
  @SerializedName(SERIALIZED_NAME_ORDERS)
  private Integer orders;
    private boolean ordersIsSet = false;

  public static final String SERIALIZED_NAME_ORDER_EVENTS = "order_events";
  @SerializedName(SERIALIZED_NAME_ORDER_EVENTS)
  private Integer orderEvents;
    private boolean orderEventsIsSet = false;

  public static final String SERIALIZED_NAME_CUSTOMER = "customer";
  @SerializedName(SERIALIZED_NAME_CUSTOMER)
  private Integer customer = 1;
    private boolean customerIsSet = false;

  public CustomersPermanentDeletionCreateResponseBodyDataJson() {
  }

  public CustomersPermanentDeletionCreateResponseBodyDataJson events(Integer events) {
    
    this.events = events;
    return this;
  }

   /**
   * Number of events deleted.
   * @return events
  **/
  @javax.annotation.Nullable
  public Integer getEvents() {
    return events;
  }


  public void setEvents(Integer events) {
    this.events = events;
    this.eventsIsSet = true;
  }
  public boolean isEventsSet() {
    return eventsIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson customerEvents(Integer customerEvents) {
    
    this.customerEvents = customerEvents;
    return this;
  }

   /**
   * Number of customer events deleted.
   * @return customerEvents
  **/
  @javax.annotation.Nullable
  public Integer getCustomerEvents() {
    return customerEvents;
  }


  public void setCustomerEvents(Integer customerEvents) {
    this.customerEvents = customerEvents;
    this.customerEventsIsSet = true;
  }
  public boolean isCustomerEventsSet() {
    return customerEventsIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson dailyEvents(Integer dailyEvents) {
    
    this.dailyEvents = dailyEvents;
    return this;
  }

   /**
   * Number of daily events deleted.
   * @return dailyEvents
  **/
  @javax.annotation.Nullable
  public Integer getDailyEvents() {
    return dailyEvents;
  }


  public void setDailyEvents(Integer dailyEvents) {
    this.dailyEvents = dailyEvents;
    this.dailyEventsIsSet = true;
  }
  public boolean isDailyEventsSet() {
    return dailyEventsIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson segments(Integer segments) {
    
    this.segments = segments;
    return this;
  }

   /**
   * Number of segments deleted.
   * @return segments
  **/
  @javax.annotation.Nullable
  public Integer getSegments() {
    return segments;
  }


  public void setSegments(Integer segments) {
    this.segments = segments;
    this.segmentsIsSet = true;
  }
  public boolean isSegmentsSet() {
    return segmentsIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson orders(Integer orders) {
    
    this.orders = orders;
    return this;
  }

   /**
   * Number of orders deleted.
   * @return orders
  **/
  @javax.annotation.Nullable
  public Integer getOrders() {
    return orders;
  }


  public void setOrders(Integer orders) {
    this.orders = orders;
    this.ordersIsSet = true;
  }
  public boolean isOrdersSet() {
    return ordersIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson orderEvents(Integer orderEvents) {
    
    this.orderEvents = orderEvents;
    return this;
  }

   /**
   * Number of order events deleted.
   * @return orderEvents
  **/
  @javax.annotation.Nullable
  public Integer getOrderEvents() {
    return orderEvents;
  }


  public void setOrderEvents(Integer orderEvents) {
    this.orderEvents = orderEvents;
    this.orderEventsIsSet = true;
  }
  public boolean isOrderEventsSet() {
    return orderEventsIsSet;
  }


  public CustomersPermanentDeletionCreateResponseBodyDataJson customer(Integer customer) {
    
    this.customer = customer;
    return this;
  }

   /**
   * Number of customers deleted.
   * @return customer
  **/
  @javax.annotation.Nullable
  public Integer getCustomer() {
    return customer;
  }


  public void setCustomer(Integer customer) {
    this.customer = customer;
    this.customerIsSet = true;
  }
  public boolean isCustomerSet() {
    return customerIsSet;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CustomersPermanentDeletionCreateResponseBodyDataJson customersPermanentDeletionCreateResponseBodyDataJson = (CustomersPermanentDeletionCreateResponseBodyDataJson) o;
    return Objects.equals(this.events, customersPermanentDeletionCreateResponseBodyDataJson.events) &&
        Objects.equals(this.customerEvents, customersPermanentDeletionCreateResponseBodyDataJson.customerEvents) &&
        Objects.equals(this.dailyEvents, customersPermanentDeletionCreateResponseBodyDataJson.dailyEvents) &&
        Objects.equals(this.segments, customersPermanentDeletionCreateResponseBodyDataJson.segments) &&
        Objects.equals(this.orders, customersPermanentDeletionCreateResponseBodyDataJson.orders) &&
        Objects.equals(this.orderEvents, customersPermanentDeletionCreateResponseBodyDataJson.orderEvents) &&
        Objects.equals(this.customer, customersPermanentDeletionCreateResponseBodyDataJson.customer);
  }

  private static <T> boolean equalsNullable(JsonNullable<T> a, JsonNullable<T> b) {
    return a == b || (a != null && b != null && a.isPresent() && b.isPresent() && Objects.deepEquals(a.get(), b.get()));
  }

  @Override
  public int hashCode() {
    return Objects.hash(events, customerEvents, dailyEvents, segments, orders, orderEvents, customer);
  }

  private static <T> int hashCodeNullable(JsonNullable<T> a) {
    if (a == null) {
      return 1;
    }
    return a.isPresent() ? Arrays.deepHashCode(new Object[]{a.get()}) : 31;
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CustomersPermanentDeletionCreateResponseBodyDataJson {\n");
    sb.append("    events: ").append(toIndentedString(events)).append("\n");
    sb.append("    customerEvents: ").append(toIndentedString(customerEvents)).append("\n");
    sb.append("    dailyEvents: ").append(toIndentedString(dailyEvents)).append("\n");
    sb.append("    segments: ").append(toIndentedString(segments)).append("\n");
    sb.append("    orders: ").append(toIndentedString(orders)).append("\n");
    sb.append("    orderEvents: ").append(toIndentedString(orderEvents)).append("\n");
    sb.append("    customer: ").append(toIndentedString(customer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("events");
    openapiFields.add("customer_events");
    openapiFields.add("daily_events");
    openapiFields.add("segments");
    openapiFields.add("orders");
    openapiFields.add("order_events");
    openapiFields.add("customer");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!CustomersPermanentDeletionCreateResponseBodyDataJson.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'CustomersPermanentDeletionCreateResponseBodyDataJson' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<CustomersPermanentDeletionCreateResponseBodyDataJson> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(CustomersPermanentDeletionCreateResponseBodyDataJson.class));

       return (TypeAdapter<T>) new TypeAdapter<CustomersPermanentDeletionCreateResponseBodyDataJson>() {
           @Override
           public void write(JsonWriter out, CustomersPermanentDeletionCreateResponseBodyDataJson value) throws IOException {
            JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();

            // 1. Strip all nulls and internal "isSet" markers
            obj.entrySet().removeIf(entry -> entry.getValue().isJsonNull() || entry.getKey().endsWith("IsSet"));

            // 2. Add back explicitly set nulls using reflection
            for (Field field : CustomersPermanentDeletionCreateResponseBodyDataJson.class.getDeclaredFields()) {
              String fieldName = field.getName();
              if (fieldName.endsWith("IsSet")) continue;
              try {
                Field isSetField = CustomersPermanentDeletionCreateResponseBodyDataJson.class.getDeclaredField(fieldName + "IsSet");
                isSetField.setAccessible(true);
                boolean isSet = (boolean) isSetField.get(value);

                field.setAccessible(true);
                Object fieldValue = field.get(value);

                if (isSet && fieldValue == null) {
                  // convert camelCase to snake_case (OpenAPI property names are snake_case)
                  String jsonName = fieldName.replaceAll("([a-z])([A-Z]+)", "$1_$2").toLowerCase();
                  obj.add(jsonName, JsonNull.INSTANCE);
                }
              } catch (NoSuchFieldException ignored) {
                // no isSet marker → skip
              } catch (IllegalAccessException e) {
                throw new RuntimeException(e);
              }
            }

             elementAdapter.write(out, obj);
           }

           @Override
           public CustomersPermanentDeletionCreateResponseBodyDataJson read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of CustomersPermanentDeletionCreateResponseBodyDataJson given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of CustomersPermanentDeletionCreateResponseBodyDataJson
  * @throws IOException if the JSON string is invalid with respect to CustomersPermanentDeletionCreateResponseBodyDataJson
  */
  public static CustomersPermanentDeletionCreateResponseBodyDataJson fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, CustomersPermanentDeletionCreateResponseBodyDataJson.class);
  }

 /**
  * Convert an instance of CustomersPermanentDeletionCreateResponseBodyDataJson to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

