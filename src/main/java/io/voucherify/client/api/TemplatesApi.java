/*
 * Voucherify API
 * Voucherify promotion engine REST API. Please see https://docs.voucherify.io/docs for more details.
 *
 * The version of the OpenAPI document: v2018-08-01
 * Contact: support@voucherify.io
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package io.voucherify.client.api;

import io.voucherify.client.ApiCallback;
import io.voucherify.client.ApiClient;
import io.voucherify.client.ApiException;
import io.voucherify.client.ApiResponse;
import io.voucherify.client.Configuration;
import io.voucherify.client.Pair;
import io.voucherify.client.ProgressRequestBody;
import io.voucherify.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import io.voucherify.client.model.ParameterFiltersListTemplates;
import io.voucherify.client.model.ParameterTemplatesList;
import io.voucherify.client.model.TemplatesCampaignsCampaignSetupCreateRequestBody;
import io.voucherify.client.model.TemplatesCampaignsCampaignSetupCreateResponseBody;
import io.voucherify.client.model.TemplatesCampaignsCreateRequestBody;
import io.voucherify.client.model.TemplatesCampaignsCreateTemplateResponseBody;
import io.voucherify.client.model.TemplatesCampaignsGetResponseBody;
import io.voucherify.client.model.TemplatesCampaignsListResponseBody;
import io.voucherify.client.model.TemplatesCampaignsTierSetupCreateRequestBody;
import io.voucherify.client.model.TemplatesCampaignsTierSetupCreateResponseBody;
import io.voucherify.client.model.TemplatesCampaignsUpdateRequestBody;
import io.voucherify.client.model.TemplatesCampaignsUpdateResponseBody;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class TemplatesApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public TemplatesApi() {
        this(Configuration.getDefaultApiClient());
    }

    public TemplatesApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for addTierFromTemplate
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsTierSetupCreateRequestBody Only name and campaign_id are required. The rest of the fields will overwrite the template configuration. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call addTierFromTemplateCall(String campaignTemplateId, TemplatesCampaignsTierSetupCreateRequestBody templatesCampaignsTierSetupCreateRequestBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = templatesCampaignsTierSetupCreateRequestBody;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns/{campaignTemplateId}/tier-setup"
            .replace("{" + "campaignTemplateId" + "}", localVarApiClient.escapeString(campaignTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call addTierFromTemplateValidateBeforeCall(String campaignTemplateId, TemplatesCampaignsTierSetupCreateRequestBody templatesCampaignsTierSetupCreateRequestBody, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'campaignTemplateId' is set
        if (campaignTemplateId == null) {
            throw new ApiException("Missing the required parameter 'campaignTemplateId' when calling addTierFromTemplate(Async)");
        }

        return addTierFromTemplateCall(campaignTemplateId, templatesCampaignsTierSetupCreateRequestBody, _callback);

    }

    /**
     * Add Promotion Tier From Template
     * Creates a promotion tier out of a discount campaign template and adds it to an existing promotion campaign. To add a promotion tier to a campaign, you need to provide the name in the request and the campaign ID. Other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an action or an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the promotion tier. When the promotion tier has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsTierSetupCreateRequestBody Only name and campaign_id are required. The rest of the fields will overwrite the template configuration. (optional)
     * @return TemplatesCampaignsTierSetupCreateResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsTierSetupCreateResponseBody addTierFromTemplate(String campaignTemplateId, TemplatesCampaignsTierSetupCreateRequestBody templatesCampaignsTierSetupCreateRequestBody) throws ApiException {
        ApiResponse<TemplatesCampaignsTierSetupCreateResponseBody> localVarResp = addTierFromTemplateWithHttpInfo(campaignTemplateId, templatesCampaignsTierSetupCreateRequestBody);
        return localVarResp.getData();
    }

    /**
     * Add Promotion Tier From Template
     * Creates a promotion tier out of a discount campaign template and adds it to an existing promotion campaign. To add a promotion tier to a campaign, you need to provide the name in the request and the campaign ID. Other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an action or an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the promotion tier. When the promotion tier has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsTierSetupCreateRequestBody Only name and campaign_id are required. The rest of the fields will overwrite the template configuration. (optional)
     * @return ApiResponse&lt;TemplatesCampaignsTierSetupCreateResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsTierSetupCreateResponseBody> addTierFromTemplateWithHttpInfo(String campaignTemplateId, TemplatesCampaignsTierSetupCreateRequestBody templatesCampaignsTierSetupCreateRequestBody) throws ApiException {
        okhttp3.Call localVarCall = addTierFromTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsTierSetupCreateRequestBody, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsTierSetupCreateResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Add Promotion Tier From Template (asynchronously)
     * Creates a promotion tier out of a discount campaign template and adds it to an existing promotion campaign. To add a promotion tier to a campaign, you need to provide the name in the request and the campaign ID. Other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an action or an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the promotion tier. When the promotion tier has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsTierSetupCreateRequestBody Only name and campaign_id are required. The rest of the fields will overwrite the template configuration. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call addTierFromTemplateAsync(String campaignTemplateId, TemplatesCampaignsTierSetupCreateRequestBody templatesCampaignsTierSetupCreateRequestBody, final ApiCallback<TemplatesCampaignsTierSetupCreateResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = addTierFromTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsTierSetupCreateRequestBody, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsTierSetupCreateResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createCampaignFromTemplate
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsCampaignSetupCreateRequestBody Only name is required. The rest of the fields will overwrite the template configuration. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call createCampaignFromTemplateCall(String campaignTemplateId, TemplatesCampaignsCampaignSetupCreateRequestBody templatesCampaignsCampaignSetupCreateRequestBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = templatesCampaignsCampaignSetupCreateRequestBody;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns/{campaignTemplateId}/campaign-setup"
            .replace("{" + "campaignTemplateId" + "}", localVarApiClient.escapeString(campaignTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createCampaignFromTemplateValidateBeforeCall(String campaignTemplateId, TemplatesCampaignsCampaignSetupCreateRequestBody templatesCampaignsCampaignSetupCreateRequestBody, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'campaignTemplateId' is set
        if (campaignTemplateId == null) {
            throw new ApiException("Missing the required parameter 'campaignTemplateId' when calling createCampaignFromTemplate(Async)");
        }

        return createCampaignFromTemplateCall(campaignTemplateId, templatesCampaignsCampaignSetupCreateRequestBody, _callback);

    }

    /**
     * Create Campaign From Template
     * Creates a campaign out of a campaign template. To create a campaign, you need to provide the name in the request, while other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the campaign. When the campaign has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsCampaignSetupCreateRequestBody Only name is required. The rest of the fields will overwrite the template configuration. (optional)
     * @return TemplatesCampaignsCampaignSetupCreateResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsCampaignSetupCreateResponseBody createCampaignFromTemplate(String campaignTemplateId, TemplatesCampaignsCampaignSetupCreateRequestBody templatesCampaignsCampaignSetupCreateRequestBody) throws ApiException {
        ApiResponse<TemplatesCampaignsCampaignSetupCreateResponseBody> localVarResp = createCampaignFromTemplateWithHttpInfo(campaignTemplateId, templatesCampaignsCampaignSetupCreateRequestBody);
        return localVarResp.getData();
    }

    /**
     * Create Campaign From Template
     * Creates a campaign out of a campaign template. To create a campaign, you need to provide the name in the request, while other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the campaign. When the campaign has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsCampaignSetupCreateRequestBody Only name is required. The rest of the fields will overwrite the template configuration. (optional)
     * @return ApiResponse&lt;TemplatesCampaignsCampaignSetupCreateResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsCampaignSetupCreateResponseBody> createCampaignFromTemplateWithHttpInfo(String campaignTemplateId, TemplatesCampaignsCampaignSetupCreateRequestBody templatesCampaignsCampaignSetupCreateRequestBody) throws ApiException {
        okhttp3.Call localVarCall = createCampaignFromTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsCampaignSetupCreateRequestBody, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsCampaignSetupCreateResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Campaign From Template (asynchronously)
     * Creates a campaign out of a campaign template. To create a campaign, you need to provide the name in the request, while other fields are optional. If no other fields are sent, the configuration from the template will be used. You can send new values of the fields listed below to replace the settings saved in the template. However, you cannot assign an existing validation rule or create a new one in the request. If the template has a validation rule, a new validation rule is always created for the campaign. When the campaign has been created, then you can: - Update the validation rule, - Unassign the validation rule, - Assign an existing validation rule.  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign - Promotion tier  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsCampaignSetupCreateRequestBody Only name is required. The rest of the fields will overwrite the template configuration. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call createCampaignFromTemplateAsync(String campaignTemplateId, TemplatesCampaignsCampaignSetupCreateRequestBody templatesCampaignsCampaignSetupCreateRequestBody, final ApiCallback<TemplatesCampaignsCampaignSetupCreateResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = createCampaignFromTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsCampaignSetupCreateRequestBody, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsCampaignSetupCreateResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for createCampaignTemplate
     * @param templatesCampaignsCreateRequestBody Provide details for a campaign template (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call createCampaignTemplateCall(TemplatesCampaignsCreateRequestBody templatesCampaignsCreateRequestBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = templatesCampaignsCreateRequestBody;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call createCampaignTemplateValidateBeforeCall(TemplatesCampaignsCreateRequestBody templatesCampaignsCreateRequestBody, final ApiCallback _callback) throws ApiException {
        return createCampaignTemplateCall(templatesCampaignsCreateRequestBody, _callback);

    }

    /**
     * Create Campaign Template
     * Creates a template for a discount or gift campaign, or a promotion tier. A template stores campaign configuration **without** the following details: - Campaign name - Category - Code count The following elements are not supported by campaign templates: - Redeeming API keys - Redeeming users - Customer loyalty tier - Static segments  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign, - Promotion tier.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param templatesCampaignsCreateRequestBody Provide details for a campaign template (optional)
     * @return TemplatesCampaignsCreateTemplateResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsCreateTemplateResponseBody createCampaignTemplate(TemplatesCampaignsCreateRequestBody templatesCampaignsCreateRequestBody) throws ApiException {
        ApiResponse<TemplatesCampaignsCreateTemplateResponseBody> localVarResp = createCampaignTemplateWithHttpInfo(templatesCampaignsCreateRequestBody);
        return localVarResp.getData();
    }

    /**
     * Create Campaign Template
     * Creates a template for a discount or gift campaign, or a promotion tier. A template stores campaign configuration **without** the following details: - Campaign name - Category - Code count The following elements are not supported by campaign templates: - Redeeming API keys - Redeeming users - Customer loyalty tier - Static segments  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign, - Promotion tier.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param templatesCampaignsCreateRequestBody Provide details for a campaign template (optional)
     * @return ApiResponse&lt;TemplatesCampaignsCreateTemplateResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsCreateTemplateResponseBody> createCampaignTemplateWithHttpInfo(TemplatesCampaignsCreateRequestBody templatesCampaignsCreateRequestBody) throws ApiException {
        okhttp3.Call localVarCall = createCampaignTemplateValidateBeforeCall(templatesCampaignsCreateRequestBody, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsCreateTemplateResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Create Campaign Template (asynchronously)
     * Creates a template for a discount or gift campaign, or a promotion tier. A template stores campaign configuration **without** the following details: - Campaign name - Category - Code count The following elements are not supported by campaign templates: - Redeeming API keys - Redeeming users - Customer loyalty tier - Static segments  üëç Promotion Tiers and Campaign Templates You can create a campaign template out of a promotion tier. Promotion tiers are converted to a discount campaign with the DISCOUNT_COUPON type. You can use this template to create: - Discount campaign, - Promotion tier.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param templatesCampaignsCreateRequestBody Provide details for a campaign template (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call createCampaignTemplateAsync(TemplatesCampaignsCreateRequestBody templatesCampaignsCreateRequestBody, final ApiCallback<TemplatesCampaignsCreateTemplateResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = createCampaignTemplateValidateBeforeCall(templatesCampaignsCreateRequestBody, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsCreateTemplateResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for deleteCampaignTemplate
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call deleteCampaignTemplateCall(String campaignTemplateId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns/{campaignTemplateId}"
            .replace("{" + "campaignTemplateId" + "}", localVarApiClient.escapeString(campaignTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "DELETE", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call deleteCampaignTemplateValidateBeforeCall(String campaignTemplateId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'campaignTemplateId' is set
        if (campaignTemplateId == null) {
            throw new ApiException("Missing the required parameter 'campaignTemplateId' when calling deleteCampaignTemplate(Async)");
        }

        return deleteCampaignTemplateCall(campaignTemplateId, _callback);

    }

    /**
     * Delete Campaign Template
     * Deletes the campaign template permanently.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public void deleteCampaignTemplate(String campaignTemplateId) throws ApiException {
        deleteCampaignTemplateWithHttpInfo(campaignTemplateId);
    }

    /**
     * Delete Campaign Template
     * Deletes the campaign template permanently.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @return ApiResponse&lt;Void&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<Void> deleteCampaignTemplateWithHttpInfo(String campaignTemplateId) throws ApiException {
        okhttp3.Call localVarCall = deleteCampaignTemplateValidateBeforeCall(campaignTemplateId, null);
        return localVarApiClient.execute(localVarCall);
    }

    /**
     * Delete Campaign Template (asynchronously)
     * Deletes the campaign template permanently.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call deleteCampaignTemplateAsync(String campaignTemplateId, final ApiCallback<Void> _callback) throws ApiException {

        okhttp3.Call localVarCall = deleteCampaignTemplateValidateBeforeCall(campaignTemplateId, _callback);
        localVarApiClient.executeAsync(localVarCall, _callback);
        return localVarCall;
    }
    /**
     * Build call for getCampaignTemplate
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call getCampaignTemplateCall(String campaignTemplateId, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns/{campaignTemplateId}"
            .replace("{" + "campaignTemplateId" + "}", localVarApiClient.escapeString(campaignTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getCampaignTemplateValidateBeforeCall(String campaignTemplateId, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'campaignTemplateId' is set
        if (campaignTemplateId == null) {
            throw new ApiException("Missing the required parameter 'campaignTemplateId' when calling getCampaignTemplate(Async)");
        }

        return getCampaignTemplateCall(campaignTemplateId, _callback);

    }

    /**
     * Get Campaign Template
     * Retrieves a campaign template available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @return TemplatesCampaignsGetResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsGetResponseBody getCampaignTemplate(String campaignTemplateId) throws ApiException {
        ApiResponse<TemplatesCampaignsGetResponseBody> localVarResp = getCampaignTemplateWithHttpInfo(campaignTemplateId);
        return localVarResp.getData();
    }

    /**
     * Get Campaign Template
     * Retrieves a campaign template available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @return ApiResponse&lt;TemplatesCampaignsGetResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsGetResponseBody> getCampaignTemplateWithHttpInfo(String campaignTemplateId) throws ApiException {
        okhttp3.Call localVarCall = getCampaignTemplateValidateBeforeCall(campaignTemplateId, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsGetResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Get Campaign Template (asynchronously)
     * Retrieves a campaign template available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call getCampaignTemplateAsync(String campaignTemplateId, final ApiCallback<TemplatesCampaignsGetResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = getCampaignTemplateValidateBeforeCall(campaignTemplateId, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsGetResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for listCampaignTemplates
     * @param limit Limits the number of objects to be returned. The limit can range between 1 and 100 items. If no limit is set, it returns 10 items. (optional)
     * @param startingAfterId A cursor for pagination. It retrieves the campaign templates created after a template with the given ID. (optional)
     * @param order Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order. (optional)
     * @param includeTotal If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default. (optional)
     * @param filters Filters for listing templates. (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call listCampaignTemplatesCall(Integer limit, String startingAfterId, ParameterTemplatesList order, Boolean includeTotal, ParameterFiltersListTemplates filters, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (limit != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("limit", limit));
        }

        if (startingAfterId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("starting_after_id", startingAfterId));
        }

        if (order != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("order", order));
        }

        if (includeTotal != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("include_total", includeTotal));
        }

        if (filters != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("filters", filters));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listCampaignTemplatesValidateBeforeCall(Integer limit, String startingAfterId, ParameterTemplatesList order, Boolean includeTotal, ParameterFiltersListTemplates filters, final ApiCallback _callback) throws ApiException {
        return listCampaignTemplatesCall(limit, startingAfterId, order, includeTotal, filters, _callback);

    }

    /**
     * List Campaign Templates
     * Lists all campaign templates available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param limit Limits the number of objects to be returned. The limit can range between 1 and 100 items. If no limit is set, it returns 10 items. (optional)
     * @param startingAfterId A cursor for pagination. It retrieves the campaign templates created after a template with the given ID. (optional)
     * @param order Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order. (optional)
     * @param includeTotal If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default. (optional)
     * @param filters Filters for listing templates. (optional)
     * @return TemplatesCampaignsListResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsListResponseBody listCampaignTemplates(Integer limit, String startingAfterId, ParameterTemplatesList order, Boolean includeTotal, ParameterFiltersListTemplates filters) throws ApiException {
        ApiResponse<TemplatesCampaignsListResponseBody> localVarResp = listCampaignTemplatesWithHttpInfo(limit, startingAfterId, order, includeTotal, filters);
        return localVarResp.getData();
    }

    /**
     * List Campaign Templates
     * Lists all campaign templates available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param limit Limits the number of objects to be returned. The limit can range between 1 and 100 items. If no limit is set, it returns 10 items. (optional)
     * @param startingAfterId A cursor for pagination. It retrieves the campaign templates created after a template with the given ID. (optional)
     * @param order Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order. (optional)
     * @param includeTotal If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default. (optional)
     * @param filters Filters for listing templates. (optional)
     * @return ApiResponse&lt;TemplatesCampaignsListResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsListResponseBody> listCampaignTemplatesWithHttpInfo(Integer limit, String startingAfterId, ParameterTemplatesList order, Boolean includeTotal, ParameterFiltersListTemplates filters) throws ApiException {
        okhttp3.Call localVarCall = listCampaignTemplatesValidateBeforeCall(limit, startingAfterId, order, includeTotal, filters, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsListResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * List Campaign Templates (asynchronously)
     * Lists all campaign templates available in the project.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param limit Limits the number of objects to be returned. The limit can range between 1 and 100 items. If no limit is set, it returns 10 items. (optional)
     * @param startingAfterId A cursor for pagination. It retrieves the campaign templates created after a template with the given ID. (optional)
     * @param order Sorts the results using one of the filtering options, where the dash - preceding a sorting option means sorting in a descending order. (optional)
     * @param includeTotal If set to true, the response returns the number of all campaign templates, regardless of the applied filters or limits. Set to false by default. (optional)
     * @param filters Filters for listing templates. (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call listCampaignTemplatesAsync(Integer limit, String startingAfterId, ParameterTemplatesList order, Boolean includeTotal, ParameterFiltersListTemplates filters, final ApiCallback<TemplatesCampaignsListResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = listCampaignTemplatesValidateBeforeCall(limit, startingAfterId, order, includeTotal, filters, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsListResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for updateCampaignTemplate
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsUpdateRequestBody Provide the new name or description for the campaign template (optional)
     * @param _callback Callback for upload/download progress
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     */
    public okhttp3.Call updateCampaignTemplateCall(String campaignTemplateId, TemplatesCampaignsUpdateRequestBody templatesCampaignsUpdateRequestBody, final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = templatesCampaignsUpdateRequestBody;

        // create path and map variables
        String localVarPath = "/v1/templates/campaigns/{campaignTemplateId}"
            .replace("{" + "campaignTemplateId" + "}", localVarApiClient.escapeString(campaignTemplateId.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "X-App-Id", "X-App-Token" };
        return localVarApiClient.buildCall(basePath, localVarPath, "PUT", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call updateCampaignTemplateValidateBeforeCall(String campaignTemplateId, TemplatesCampaignsUpdateRequestBody templatesCampaignsUpdateRequestBody, final ApiCallback _callback) throws ApiException {
        // verify the required parameter 'campaignTemplateId' is set
        if (campaignTemplateId == null) {
            throw new ApiException("Missing the required parameter 'campaignTemplateId' when calling updateCampaignTemplate(Async)");
        }

        return updateCampaignTemplateCall(campaignTemplateId, templatesCampaignsUpdateRequestBody, _callback);

    }

    /**
     * Update Campaign Template
     * Updates the name or description of the campaign template.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsUpdateRequestBody Provide the new name or description for the campaign template (optional)
     * @return TemplatesCampaignsUpdateResponseBody
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public TemplatesCampaignsUpdateResponseBody updateCampaignTemplate(String campaignTemplateId, TemplatesCampaignsUpdateRequestBody templatesCampaignsUpdateRequestBody) throws ApiException {
        ApiResponse<TemplatesCampaignsUpdateResponseBody> localVarResp = updateCampaignTemplateWithHttpInfo(campaignTemplateId, templatesCampaignsUpdateRequestBody);
        return localVarResp.getData();
    }

    /**
     * Update Campaign Template
     * Updates the name or description of the campaign template.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsUpdateRequestBody Provide the new name or description for the campaign template (optional)
     * @return ApiResponse&lt;TemplatesCampaignsUpdateResponseBody&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     */
    public ApiResponse<TemplatesCampaignsUpdateResponseBody> updateCampaignTemplateWithHttpInfo(String campaignTemplateId, TemplatesCampaignsUpdateRequestBody templatesCampaignsUpdateRequestBody) throws ApiException {
        okhttp3.Call localVarCall = updateCampaignTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsUpdateRequestBody, null);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsUpdateResponseBody>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    /**
     * Update Campaign Template (asynchronously)
     * Updates the name or description of the campaign template.  üìò Campaign Templates ‚Äì Documentation Read the [Campaign Templates documentation](https://support.voucherify.io/article/620-campaign-templates) to learn more about this feature.
     * @param campaignTemplateId Pass the campaign template ID that was assigned by Voucherify. (required)
     * @param templatesCampaignsUpdateRequestBody Provide the new name or description for the campaign template (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     */
    public okhttp3.Call updateCampaignTemplateAsync(String campaignTemplateId, TemplatesCampaignsUpdateRequestBody templatesCampaignsUpdateRequestBody, final ApiCallback<TemplatesCampaignsUpdateResponseBody> _callback) throws ApiException {

        okhttp3.Call localVarCall = updateCampaignTemplateValidateBeforeCall(campaignTemplateId, templatesCampaignsUpdateRequestBody, _callback);
        Type localVarReturnType = new TypeToken<TemplatesCampaignsUpdateResponseBody>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
