apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'eclipse'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'io.voucherify.client'
version = '9.1.0'

repositories {
    mavenCentral()
    jcenter()
}

apply plugin: 'maven'
apply plugin: 'signing'

sourceSets {
    main {
        java {
            exclude 'io/voucherify/example/**'
        }
    }
}

dependencies {
    compile group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.6.1'
    compile group: 'com.squareup.retrofit2', name: 'converter-jackson', version: '2.6.1'
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.9'
    compile group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '4.2.0'
    compile group: 'io.reactivex.rxjava2', name: 'rxjava', version: '2.2.2'

    compileOnly group: 'org.projectlombok', name: 'lombok', version: '1.18.10'
    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: '1.18.10'

    testCompile group: 'junit', name: 'junit', version: '4.12'
    testCompile group: 'org.assertj', name: 'assertj-core', version: '3.13.2'
    testCompile group: 'org.mockito', name: 'mockito-core', version: '3.0.0'
    testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: '4.2.0'
    testCompile group: 'org.awaitility', name: 'awaitility', version: '4.0.1'

    task javadocJar(type: Jar) {
        from javadoc
    }

    task sourcesJar(type: Jar) {
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar
    }

    if (project.hasProperty('sign')) {
        signing {
            sign configurations.archives
        }
    }
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: System.getenv('RELEASE_REPOSITORY_URL') ?: RELEASE_REPOSITORY_URL) {
                authentication(userName: System.getenv('NEXUS_USERNAME') ?: NEXUS_USERNAME, password: System.getenv('NEXUS_PASSWORD') ?: NEXUS_PASSWORD)
            }

            snapshotRepository(url: System.getenv('SNAPSHOT_REPOSITORY_URL') ?: SNAPSHOT_REPOSITORY_URL) {
                authentication(userName: System.getenv('NEXUS_USERNAME') ?: NEXUS_USERNAME, password: System.getenv('NEXUS_PASSWORD') ?: NEXUS_PASSWORD)
            }

            pom.project {
                name System.getenv('POM_NAME') ?: POM_NAME
                artifactId 'voucherify-java-sdk'
                packaging System.getenv('POM_PACKAGING') ?: POM_PACKAGING
                description System.getenv('POM_DESCRIPTION') ?: POM_DESCRIPTION
                url System.getenv('POM_URL') ?: POM_URL

                scm {
                    connection System.getenv('POM_SCM_CONNECTION') ?: POM_SCM_CONNECTION
                    developerConnection System.getenv('POM_SCM_DEV_CONNECTION') ?: POM_SCM_DEV_CONNECTION
                    url System.getenv('POM_SCM_URL') ?: POM_SCM_URL
                }

                licenses {
                    license {
                        name System.getenv('POM_LICENCE_NAME') ?: POM_LICENCE_NAME
                        url System.getenv('POM_LICENCE_URL') ?: POM_LICENCE_URL
                        distribution System.getenv('POM_LICENCE_DIST') ?: POM_LICENCE_DIST
                    }
                }

                developers {
                    developer {
                        id System.getenv('POM_DEVELOPER_ID') ?: POM_DEVELOPER_ID
                        name System.getenv('POM_DEVELOPER_NAME') ?: POM_DEVELOPER_NAME
                    }
                }
            }
        }
    }
}

test {
    testLogging {
        events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
    }
}
